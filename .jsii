{
  "author": {
    "email": "ideapool@epam.com",
    "name": "Idea Pool",
    "roles": [
      "author"
    ]
  },
  "contributors": [
    {
      "email": "sziklaszlo@gmail.com",
      "name": "Laszlo Szikszai",
      "roles": [
        "contributor"
      ]
    }
  ],
  "dependencies": {
    "aws-cdk-lib": "^2.13.0"
  },
  "dependencyClosure": {
    "aws-cdk-lib": {
      "submodules": {
        "aws-cdk-lib.alexa_ask": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.Alexa.Ask"
            },
            "java": {
              "package": "software.amazon.awscdk.alexa.ask"
            },
            "python": {
              "module": "aws_cdk.alexa_ask"
            }
          }
        },
        "aws-cdk-lib.assertions": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.Assertions"
            },
            "java": {
              "package": "software.amazon.awscdk.assertions"
            },
            "python": {
              "module": "aws_cdk.assertions"
            }
          }
        },
        "aws-cdk-lib.assets": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.Assets"
            },
            "java": {
              "package": "software.amazon.awscdk.assets"
            },
            "python": {
              "module": "aws_cdk.assets"
            }
          }
        },
        "aws-cdk-lib.aws_accessanalyzer": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.AccessAnalyzer"
            },
            "java": {
              "package": "software.amazon.awscdk.services.accessanalyzer"
            },
            "python": {
              "module": "aws_cdk.aws_accessanalyzer"
            }
          }
        },
        "aws-cdk-lib.aws_acmpca": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.ACMPCA"
            },
            "java": {
              "package": "software.amazon.awscdk.services.acmpca"
            },
            "python": {
              "module": "aws_cdk.aws_acmpca"
            }
          }
        },
        "aws-cdk-lib.aws_amazonmq": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.AmazonMQ"
            },
            "java": {
              "package": "software.amazon.awscdk.services.amazonmq"
            },
            "python": {
              "module": "aws_cdk.aws_amazonmq"
            }
          }
        },
        "aws-cdk-lib.aws_amplify": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.Amplify"
            },
            "java": {
              "package": "software.amazon.awscdk.services.amplify"
            },
            "python": {
              "module": "aws_cdk.aws_amplify"
            }
          }
        },
        "aws-cdk-lib.aws_amplifyuibuilder": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.AmplifyUIBuilder"
            },
            "java": {
              "package": "software.amazon.awscdk.services.amplifyuibuilder"
            },
            "python": {
              "module": "aws_cdk.aws_amplifyuibuilder"
            }
          }
        },
        "aws-cdk-lib.aws_apigateway": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.APIGateway"
            },
            "java": {
              "package": "software.amazon.awscdk.services.apigateway"
            },
            "python": {
              "module": "aws_cdk.aws_apigateway"
            }
          }
        },
        "aws-cdk-lib.aws_apigatewayv2": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.Apigatewayv2"
            },
            "java": {
              "package": "software.amazon.awscdk.services.apigatewayv2"
            },
            "python": {
              "module": "aws_cdk.aws_apigatewayv2"
            }
          }
        },
        "aws-cdk-lib.aws_appconfig": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.AppConfig"
            },
            "java": {
              "package": "software.amazon.awscdk.services.appconfig"
            },
            "python": {
              "module": "aws_cdk.aws_appconfig"
            }
          }
        },
        "aws-cdk-lib.aws_appflow": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.AppFlow"
            },
            "java": {
              "package": "software.amazon.awscdk.services.appflow"
            },
            "python": {
              "module": "aws_cdk.aws_appflow"
            }
          }
        },
        "aws-cdk-lib.aws_appintegrations": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.AppIntegrations"
            },
            "java": {
              "package": "software.amazon.awscdk.services.appintegrations"
            },
            "python": {
              "module": "aws_cdk.aws_appintegrations"
            }
          }
        },
        "aws-cdk-lib.aws_applicationautoscaling": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.ApplicationAutoScaling"
            },
            "java": {
              "package": "software.amazon.awscdk.services.applicationautoscaling"
            },
            "python": {
              "module": "aws_cdk.aws_applicationautoscaling"
            }
          }
        },
        "aws-cdk-lib.aws_applicationinsights": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.ApplicationInsights"
            },
            "java": {
              "package": "software.amazon.awscdk.services.applicationinsights"
            },
            "python": {
              "module": "aws_cdk.aws_applicationinsights"
            }
          }
        },
        "aws-cdk-lib.aws_appmesh": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.AppMesh"
            },
            "java": {
              "package": "software.amazon.awscdk.services.appmesh"
            },
            "python": {
              "module": "aws_cdk.aws_appmesh"
            }
          }
        },
        "aws-cdk-lib.aws_apprunner": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.AppRunner"
            },
            "java": {
              "package": "software.amazon.awscdk.services.apprunner"
            },
            "python": {
              "module": "aws_cdk.aws_apprunner"
            }
          }
        },
        "aws-cdk-lib.aws_appstream": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.AppStream"
            },
            "java": {
              "package": "software.amazon.awscdk.services.appstream"
            },
            "python": {
              "module": "aws_cdk.aws_appstream"
            }
          }
        },
        "aws-cdk-lib.aws_appsync": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.AppSync"
            },
            "java": {
              "package": "software.amazon.awscdk.services.appsync"
            },
            "python": {
              "module": "aws_cdk.aws_appsync"
            }
          }
        },
        "aws-cdk-lib.aws_aps": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.APS"
            },
            "java": {
              "package": "software.amazon.awscdk.services.aps"
            },
            "python": {
              "module": "aws_cdk.aws_aps"
            }
          }
        },
        "aws-cdk-lib.aws_athena": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.Athena"
            },
            "java": {
              "package": "software.amazon.awscdk.services.athena"
            },
            "python": {
              "module": "aws_cdk.aws_athena"
            }
          }
        },
        "aws-cdk-lib.aws_auditmanager": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.AuditManager"
            },
            "java": {
              "package": "software.amazon.awscdk.services.auditmanager"
            },
            "python": {
              "module": "aws_cdk.aws_auditmanager"
            }
          }
        },
        "aws-cdk-lib.aws_autoscaling": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.AutoScaling"
            },
            "java": {
              "package": "software.amazon.awscdk.services.autoscaling"
            },
            "python": {
              "module": "aws_cdk.aws_autoscaling"
            }
          }
        },
        "aws-cdk-lib.aws_autoscaling_common": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.AutoScaling.Common"
            },
            "java": {
              "package": "software.amazon.awscdk.services.autoscaling.common"
            },
            "python": {
              "module": "aws_cdk.aws_autoscaling_common"
            }
          }
        },
        "aws-cdk-lib.aws_autoscaling_hooktargets": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.AutoScaling.HookTargets"
            },
            "java": {
              "package": "software.amazon.awscdk.services.autoscaling.hooktargets"
            },
            "python": {
              "module": "aws_cdk.aws_autoscaling_hooktargets"
            }
          }
        },
        "aws-cdk-lib.aws_autoscalingplans": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.AutoScalingPlans"
            },
            "java": {
              "package": "software.amazon.awscdk.services.autoscalingplans"
            },
            "python": {
              "module": "aws_cdk.aws_autoscalingplans"
            }
          }
        },
        "aws-cdk-lib.aws_backup": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.Backup"
            },
            "java": {
              "package": "software.amazon.awscdk.services.backup"
            },
            "python": {
              "module": "aws_cdk.aws_backup"
            }
          }
        },
        "aws-cdk-lib.aws_batch": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.Batch"
            },
            "java": {
              "package": "software.amazon.awscdk.services.batch"
            },
            "python": {
              "module": "aws_cdk.aws_batch"
            }
          }
        },
        "aws-cdk-lib.aws_budgets": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.Budgets"
            },
            "java": {
              "package": "software.amazon.awscdk.services.budgets"
            },
            "python": {
              "module": "aws_cdk.aws_budgets"
            }
          }
        },
        "aws-cdk-lib.aws_cassandra": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.Cassandra"
            },
            "java": {
              "package": "software.amazon.awscdk.services.cassandra"
            },
            "python": {
              "module": "aws_cdk.aws_cassandra"
            }
          }
        },
        "aws-cdk-lib.aws_ce": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.CE"
            },
            "java": {
              "package": "software.amazon.awscdk.services.ce"
            },
            "python": {
              "module": "aws_cdk.aws_ce"
            }
          }
        },
        "aws-cdk-lib.aws_certificatemanager": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.CertificateManager"
            },
            "java": {
              "package": "software.amazon.awscdk.services.certificatemanager"
            },
            "python": {
              "module": "aws_cdk.aws_certificatemanager"
            }
          }
        },
        "aws-cdk-lib.aws_chatbot": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.Chatbot"
            },
            "java": {
              "package": "software.amazon.awscdk.services.chatbot"
            },
            "python": {
              "module": "aws_cdk.aws_chatbot"
            }
          }
        },
        "aws-cdk-lib.aws_cloud9": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.Cloud9"
            },
            "java": {
              "package": "software.amazon.awscdk.services.cloud9"
            },
            "python": {
              "module": "aws_cdk.aws_cloud9"
            }
          }
        },
        "aws-cdk-lib.aws_cloudformation": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.CloudFormation"
            },
            "java": {
              "package": "software.amazon.awscdk.services.cloudformation"
            },
            "python": {
              "module": "aws_cdk.aws_cloudformation"
            }
          }
        },
        "aws-cdk-lib.aws_cloudfront": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.CloudFront"
            },
            "java": {
              "package": "software.amazon.awscdk.services.cloudfront"
            },
            "python": {
              "module": "aws_cdk.aws_cloudfront"
            }
          }
        },
        "aws-cdk-lib.aws_cloudfront.experimental": {},
        "aws-cdk-lib.aws_cloudfront_origins": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.CloudFront.Origins"
            },
            "java": {
              "package": "software.amazon.awscdk.services.cloudfront.origins"
            },
            "python": {
              "module": "aws_cdk.aws_cloudfront_origins"
            }
          }
        },
        "aws-cdk-lib.aws_cloudtrail": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.CloudTrail"
            },
            "java": {
              "package": "software.amazon.awscdk.services.cloudtrail"
            },
            "python": {
              "module": "aws_cdk.aws_cloudtrail"
            }
          }
        },
        "aws-cdk-lib.aws_cloudwatch": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.CloudWatch"
            },
            "java": {
              "package": "software.amazon.awscdk.services.cloudwatch"
            },
            "python": {
              "module": "aws_cdk.aws_cloudwatch"
            }
          }
        },
        "aws-cdk-lib.aws_cloudwatch_actions": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.CloudWatch.Actions"
            },
            "java": {
              "package": "software.amazon.awscdk.services.cloudwatch.actions"
            },
            "python": {
              "module": "aws_cdk.aws_cloudwatch_actions"
            }
          }
        },
        "aws-cdk-lib.aws_codeartifact": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.CodeArtifact"
            },
            "java": {
              "package": "software.amazon.awscdk.services.codeartifact"
            },
            "python": {
              "module": "aws_cdk.aws_codeartifact"
            }
          }
        },
        "aws-cdk-lib.aws_codebuild": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.CodeBuild"
            },
            "java": {
              "package": "software.amazon.awscdk.services.codebuild"
            },
            "python": {
              "module": "aws_cdk.aws_codebuild"
            }
          }
        },
        "aws-cdk-lib.aws_codecommit": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.CodeCommit"
            },
            "java": {
              "package": "software.amazon.awscdk.services.codecommit"
            },
            "python": {
              "module": "aws_cdk.aws_codecommit"
            }
          }
        },
        "aws-cdk-lib.aws_codedeploy": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.CodeDeploy"
            },
            "java": {
              "package": "software.amazon.awscdk.services.codedeploy"
            },
            "python": {
              "module": "aws_cdk.aws_codedeploy"
            }
          }
        },
        "aws-cdk-lib.aws_codeguruprofiler": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.CodeGuruProfiler"
            },
            "java": {
              "package": "software.amazon.awscdk.services.codeguruprofiler"
            },
            "python": {
              "module": "aws_cdk.aws_codeguruprofiler"
            }
          }
        },
        "aws-cdk-lib.aws_codegurureviewer": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.CodeGuruReviewer"
            },
            "java": {
              "package": "software.amazon.awscdk.services.codegurureviewer"
            },
            "python": {
              "module": "aws_cdk.aws_codegurureviewer"
            }
          }
        },
        "aws-cdk-lib.aws_codepipeline": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.CodePipeline"
            },
            "java": {
              "package": "software.amazon.awscdk.services.codepipeline"
            },
            "python": {
              "module": "aws_cdk.aws_codepipeline"
            }
          }
        },
        "aws-cdk-lib.aws_codepipeline_actions": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.CodePipeline.Actions"
            },
            "java": {
              "package": "software.amazon.awscdk.services.codepipeline.actions"
            },
            "python": {
              "module": "aws_cdk.aws_codepipeline_actions"
            }
          }
        },
        "aws-cdk-lib.aws_codestar": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.Codestar"
            },
            "java": {
              "package": "software.amazon.awscdk.services.codestar"
            },
            "python": {
              "module": "aws_cdk.aws_codestar"
            }
          }
        },
        "aws-cdk-lib.aws_codestarconnections": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.CodeStarConnections"
            },
            "java": {
              "package": "software.amazon.awscdk.services.codestarconnections"
            },
            "python": {
              "module": "aws_cdk.aws_codestarconnections"
            }
          }
        },
        "aws-cdk-lib.aws_codestarnotifications": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.CodeStarNotifications"
            },
            "java": {
              "package": "software.amazon.awscdk.services.codestarnotifications"
            },
            "python": {
              "module": "aws_cdk.aws_codestarnotifications"
            }
          }
        },
        "aws-cdk-lib.aws_cognito": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.Cognito"
            },
            "java": {
              "package": "software.amazon.awscdk.services.cognito"
            },
            "python": {
              "module": "aws_cdk.aws_cognito"
            }
          }
        },
        "aws-cdk-lib.aws_config": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.Config"
            },
            "java": {
              "package": "software.amazon.awscdk.services.config"
            },
            "python": {
              "module": "aws_cdk.aws_config"
            }
          }
        },
        "aws-cdk-lib.aws_connect": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.Connect"
            },
            "java": {
              "package": "software.amazon.awscdk.services.connect"
            },
            "python": {
              "module": "aws_cdk.aws_connect"
            }
          }
        },
        "aws-cdk-lib.aws_cur": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.CUR"
            },
            "java": {
              "package": "software.amazon.awscdk.services.cur"
            },
            "python": {
              "module": "aws_cdk.aws_cur"
            }
          }
        },
        "aws-cdk-lib.aws_customerprofiles": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.CustomerProfiles"
            },
            "java": {
              "package": "software.amazon.awscdk.services.customerprofiles"
            },
            "python": {
              "module": "aws_cdk.aws_customerprofiles"
            }
          }
        },
        "aws-cdk-lib.aws_databrew": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.DataBrew"
            },
            "java": {
              "package": "software.amazon.awscdk.services.databrew"
            },
            "python": {
              "module": "aws_cdk.aws_databrew"
            }
          }
        },
        "aws-cdk-lib.aws_datapipeline": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.DataPipeline"
            },
            "java": {
              "package": "software.amazon.awscdk.services.datapipeline"
            },
            "python": {
              "module": "aws_cdk.aws_datapipeline"
            }
          }
        },
        "aws-cdk-lib.aws_datasync": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.DataSync"
            },
            "java": {
              "package": "software.amazon.awscdk.services.datasync"
            },
            "python": {
              "module": "aws_cdk.aws_datasync"
            }
          }
        },
        "aws-cdk-lib.aws_dax": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.DAX"
            },
            "java": {
              "package": "software.amazon.awscdk.services.dax"
            },
            "python": {
              "module": "aws_cdk.aws_dax"
            }
          }
        },
        "aws-cdk-lib.aws_detective": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.Detective"
            },
            "java": {
              "package": "software.amazon.awscdk.services.detective"
            },
            "python": {
              "module": "aws_cdk.aws_detective"
            }
          }
        },
        "aws-cdk-lib.aws_devopsguru": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.DevOpsGuru"
            },
            "java": {
              "package": "software.amazon.awscdk.services.devopsguru"
            },
            "python": {
              "module": "aws_cdk.aws_devopsguru"
            }
          }
        },
        "aws-cdk-lib.aws_directoryservice": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.DirectoryService"
            },
            "java": {
              "package": "software.amazon.awscdk.services.directoryservice"
            },
            "python": {
              "module": "aws_cdk.aws_directoryservice"
            }
          }
        },
        "aws-cdk-lib.aws_dlm": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.DLM"
            },
            "java": {
              "package": "software.amazon.awscdk.services.dlm"
            },
            "python": {
              "module": "aws_cdk.aws_dlm"
            }
          }
        },
        "aws-cdk-lib.aws_dms": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.DMS"
            },
            "java": {
              "package": "software.amazon.awscdk.services.dms"
            },
            "python": {
              "module": "aws_cdk.aws_dms"
            }
          }
        },
        "aws-cdk-lib.aws_docdb": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.DocDB"
            },
            "java": {
              "package": "software.amazon.awscdk.services.docdb"
            },
            "python": {
              "module": "aws_cdk.aws_docdb"
            }
          }
        },
        "aws-cdk-lib.aws_dynamodb": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.DynamoDB"
            },
            "java": {
              "package": "software.amazon.awscdk.services.dynamodb"
            },
            "python": {
              "module": "aws_cdk.aws_dynamodb"
            }
          }
        },
        "aws-cdk-lib.aws_ec2": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.EC2"
            },
            "java": {
              "package": "software.amazon.awscdk.services.ec2"
            },
            "python": {
              "module": "aws_cdk.aws_ec2"
            }
          }
        },
        "aws-cdk-lib.aws_ecr": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.ECR"
            },
            "java": {
              "package": "software.amazon.awscdk.services.ecr"
            },
            "python": {
              "module": "aws_cdk.aws_ecr"
            }
          }
        },
        "aws-cdk-lib.aws_ecr_assets": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.Ecr.Assets"
            },
            "java": {
              "package": "software.amazon.awscdk.services.ecr.assets"
            },
            "python": {
              "module": "aws_cdk.aws_ecr_assets"
            }
          }
        },
        "aws-cdk-lib.aws_ecs": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.ECS"
            },
            "java": {
              "package": "software.amazon.awscdk.services.ecs"
            },
            "python": {
              "module": "aws_cdk.aws_ecs"
            }
          }
        },
        "aws-cdk-lib.aws_ecs_patterns": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.ECS.Patterns"
            },
            "java": {
              "package": "software.amazon.awscdk.services.ecs.patterns"
            },
            "python": {
              "module": "aws_cdk.aws_ecs_patterns"
            }
          }
        },
        "aws-cdk-lib.aws_efs": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.EFS"
            },
            "java": {
              "package": "software.amazon.awscdk.services.efs"
            },
            "python": {
              "module": "aws_cdk.aws_efs"
            }
          }
        },
        "aws-cdk-lib.aws_eks": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.EKS"
            },
            "java": {
              "package": "software.amazon.awscdk.services.eks"
            },
            "python": {
              "module": "aws_cdk.aws_eks"
            }
          }
        },
        "aws-cdk-lib.aws_elasticache": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.ElastiCache"
            },
            "java": {
              "package": "software.amazon.awscdk.services.elasticache"
            },
            "python": {
              "module": "aws_cdk.aws_elasticache"
            }
          }
        },
        "aws-cdk-lib.aws_elasticbeanstalk": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.ElasticBeanstalk"
            },
            "java": {
              "package": "software.amazon.awscdk.services.elasticbeanstalk"
            },
            "python": {
              "module": "aws_cdk.aws_elasticbeanstalk"
            }
          }
        },
        "aws-cdk-lib.aws_elasticloadbalancing": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.ElasticLoadBalancing"
            },
            "java": {
              "package": "software.amazon.awscdk.services.elasticloadbalancing"
            },
            "python": {
              "module": "aws_cdk.aws_elasticloadbalancing"
            }
          }
        },
        "aws-cdk-lib.aws_elasticloadbalancingv2": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.ElasticLoadBalancingV2"
            },
            "java": {
              "package": "software.amazon.awscdk.services.elasticloadbalancingv2"
            },
            "python": {
              "module": "aws_cdk.aws_elasticloadbalancingv2"
            }
          }
        },
        "aws-cdk-lib.aws_elasticloadbalancingv2_actions": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.ElasticLoadBalancingV2.Actions"
            },
            "java": {
              "package": "software.amazon.awscdk.services.elasticloadbalancingv2.actions"
            },
            "python": {
              "module": "aws_cdk.aws_elasticloadbalancingv2_actions"
            }
          }
        },
        "aws-cdk-lib.aws_elasticloadbalancingv2_targets": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.ElasticLoadBalancingV2.Targets"
            },
            "java": {
              "package": "software.amazon.awscdk.services.elasticloadbalancingv2.targets"
            },
            "python": {
              "module": "aws_cdk.aws_elasticloadbalancingv2_targets"
            }
          }
        },
        "aws-cdk-lib.aws_elasticsearch": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.Elasticsearch"
            },
            "java": {
              "package": "software.amazon.awscdk.services.elasticsearch"
            },
            "python": {
              "module": "aws_cdk.aws_elasticsearch"
            }
          }
        },
        "aws-cdk-lib.aws_emr": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.EMR"
            },
            "java": {
              "package": "software.amazon.awscdk.services.emr"
            },
            "python": {
              "module": "aws_cdk.aws_emr"
            }
          }
        },
        "aws-cdk-lib.aws_emrcontainers": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.EMRContainers"
            },
            "java": {
              "package": "software.amazon.awscdk.services.emrcontainers"
            },
            "python": {
              "module": "aws_cdk.aws_emrcontainers"
            }
          }
        },
        "aws-cdk-lib.aws_events": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.Events"
            },
            "java": {
              "package": "software.amazon.awscdk.services.events"
            },
            "python": {
              "module": "aws_cdk.aws_events"
            }
          }
        },
        "aws-cdk-lib.aws_events_targets": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.Events.Targets"
            },
            "java": {
              "package": "software.amazon.awscdk.services.events.targets"
            },
            "python": {
              "module": "aws_cdk.aws_events_targets"
            }
          }
        },
        "aws-cdk-lib.aws_eventschemas": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.EventSchemas"
            },
            "java": {
              "package": "software.amazon.awscdk.services.eventschemas"
            },
            "python": {
              "module": "aws_cdk.aws_eventschemas"
            }
          }
        },
        "aws-cdk-lib.aws_evidently": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.Evidently"
            },
            "java": {
              "package": "software.amazon.awscdk.services.evidently"
            },
            "python": {
              "module": "aws_cdk.aws_evidently"
            }
          }
        },
        "aws-cdk-lib.aws_finspace": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.FinSpace"
            },
            "java": {
              "package": "software.amazon.awscdk.services.finspace"
            },
            "python": {
              "module": "aws_cdk.aws_finspace"
            }
          }
        },
        "aws-cdk-lib.aws_fis": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.FIS"
            },
            "java": {
              "package": "software.amazon.awscdk.services.fis"
            },
            "python": {
              "module": "aws_cdk.aws_fis"
            }
          }
        },
        "aws-cdk-lib.aws_fms": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.FMS"
            },
            "java": {
              "package": "software.amazon.awscdk.services.fms"
            },
            "python": {
              "module": "aws_cdk.aws_fms"
            }
          }
        },
        "aws-cdk-lib.aws_forecast": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.Forecast"
            },
            "java": {
              "package": "software.amazon.awscdk.services.forecast"
            },
            "python": {
              "module": "aws_cdk.aws_forecast"
            }
          }
        },
        "aws-cdk-lib.aws_frauddetector": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.FraudDetector"
            },
            "java": {
              "package": "software.amazon.awscdk.services.frauddetector"
            },
            "python": {
              "module": "aws_cdk.aws_frauddetector"
            }
          }
        },
        "aws-cdk-lib.aws_fsx": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.FSx"
            },
            "java": {
              "package": "software.amazon.awscdk.services.fsx"
            },
            "python": {
              "module": "aws_cdk.aws_fsx"
            }
          }
        },
        "aws-cdk-lib.aws_gamelift": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.GameLift"
            },
            "java": {
              "package": "software.amazon.awscdk.services.gamelift"
            },
            "python": {
              "module": "aws_cdk.aws_gamelift"
            }
          }
        },
        "aws-cdk-lib.aws_globalaccelerator": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.GlobalAccelerator"
            },
            "java": {
              "package": "software.amazon.awscdk.services.globalaccelerator"
            },
            "python": {
              "module": "aws_cdk.aws_globalaccelerator"
            }
          }
        },
        "aws-cdk-lib.aws_globalaccelerator_endpoints": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.GlobalAccelerator.Endpoints"
            },
            "java": {
              "package": "software.amazon.awscdk.services.globalaccelerator.endpoints"
            },
            "python": {
              "module": "aws_cdk.aws_globalaccelerator_endpoints"
            }
          }
        },
        "aws-cdk-lib.aws_glue": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.Glue"
            },
            "java": {
              "package": "software.amazon.awscdk.services.glue"
            },
            "python": {
              "module": "aws_cdk.aws_glue"
            }
          }
        },
        "aws-cdk-lib.aws_greengrass": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.Greengrass"
            },
            "java": {
              "package": "software.amazon.awscdk.services.greengrass"
            },
            "python": {
              "module": "aws_cdk.aws_greengrass"
            }
          }
        },
        "aws-cdk-lib.aws_greengrassv2": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.GreengrassV2"
            },
            "java": {
              "package": "software.amazon.awscdk.services.greengrassv2"
            },
            "python": {
              "module": "aws_cdk.aws_greengrassv2"
            }
          }
        },
        "aws-cdk-lib.aws_groundstation": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.GroundStation"
            },
            "java": {
              "package": "software.amazon.awscdk.services.groundstation"
            },
            "python": {
              "module": "aws_cdk.aws_groundstation"
            }
          }
        },
        "aws-cdk-lib.aws_guardduty": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.GuardDuty"
            },
            "java": {
              "package": "software.amazon.awscdk.services.guardduty"
            },
            "python": {
              "module": "aws_cdk.aws_guardduty"
            }
          }
        },
        "aws-cdk-lib.aws_healthlake": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.HealthLake"
            },
            "java": {
              "package": "software.amazon.awscdk.services.healthlake"
            },
            "python": {
              "module": "aws_cdk.aws_healthlake"
            }
          }
        },
        "aws-cdk-lib.aws_iam": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.IAM"
            },
            "java": {
              "package": "software.amazon.awscdk.services.iam"
            },
            "python": {
              "module": "aws_cdk.aws_iam"
            }
          }
        },
        "aws-cdk-lib.aws_imagebuilder": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.ImageBuilder"
            },
            "java": {
              "package": "software.amazon.awscdk.services.imagebuilder"
            },
            "python": {
              "module": "aws_cdk.aws_imagebuilder"
            }
          }
        },
        "aws-cdk-lib.aws_inspector": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.Inspector"
            },
            "java": {
              "package": "software.amazon.awscdk.services.inspector"
            },
            "python": {
              "module": "aws_cdk.aws_inspector"
            }
          }
        },
        "aws-cdk-lib.aws_inspectorv2": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.InspectorV2"
            },
            "java": {
              "package": "software.amazon.awscdk.services.inspectorv2"
            },
            "python": {
              "module": "aws_cdk.aws_inspectorv2"
            }
          }
        },
        "aws-cdk-lib.aws_iot": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.IoT"
            },
            "java": {
              "package": "software.amazon.awscdk.services.iot"
            },
            "python": {
              "module": "aws_cdk.aws_iot"
            }
          }
        },
        "aws-cdk-lib.aws_iot1click": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.IoT1Click"
            },
            "java": {
              "package": "software.amazon.awscdk.services.iot1click"
            },
            "python": {
              "module": "aws_cdk.aws_iot1click"
            }
          }
        },
        "aws-cdk-lib.aws_iotanalytics": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.IoTAnalytics"
            },
            "java": {
              "package": "software.amazon.awscdk.services.iotanalytics"
            },
            "python": {
              "module": "aws_cdk.aws_iotanalytics"
            }
          }
        },
        "aws-cdk-lib.aws_iotcoredeviceadvisor": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.IoTCoreDeviceAdvisor"
            },
            "java": {
              "package": "software.amazon.awscdk.services.iotcoredeviceadvisor"
            },
            "python": {
              "module": "aws_cdk.aws_iotcoredeviceadvisor"
            }
          }
        },
        "aws-cdk-lib.aws_iotevents": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.IoTEvents"
            },
            "java": {
              "package": "software.amazon.awscdk.services.iotevents"
            },
            "python": {
              "module": "aws_cdk.aws_iotevents"
            }
          }
        },
        "aws-cdk-lib.aws_iotfleethub": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.IoTFleetHub"
            },
            "java": {
              "package": "software.amazon.awscdk.services.iotfleethub"
            },
            "python": {
              "module": "aws_cdk.aws_iotfleethub"
            }
          }
        },
        "aws-cdk-lib.aws_iotsitewise": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.IoTSiteWise"
            },
            "java": {
              "package": "software.amazon.awscdk.services.iotsitewise"
            },
            "python": {
              "module": "aws_cdk.aws_iotsitewise"
            }
          }
        },
        "aws-cdk-lib.aws_iotthingsgraph": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.IoTThingsGraph"
            },
            "java": {
              "package": "software.amazon.awscdk.services.iotthingsgraph"
            },
            "python": {
              "module": "aws_cdk.aws_iotthingsgraph"
            }
          }
        },
        "aws-cdk-lib.aws_iotwireless": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.IoTWireless"
            },
            "java": {
              "package": "software.amazon.awscdk.services.iotwireless"
            },
            "python": {
              "module": "aws_cdk.aws_iotwireless"
            }
          }
        },
        "aws-cdk-lib.aws_ivs": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.Ivs"
            },
            "java": {
              "package": "software.amazon.awscdk.services.ivs"
            },
            "python": {
              "module": "aws_cdk.aws_ivs"
            }
          }
        },
        "aws-cdk-lib.aws_kafkaconnect": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.KafkaConnect"
            },
            "java": {
              "package": "software.amazon.awscdk.services.kafkaconnect"
            },
            "python": {
              "module": "aws_cdk.aws_kafkaconnect"
            }
          }
        },
        "aws-cdk-lib.aws_kendra": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.Kendra"
            },
            "java": {
              "package": "software.amazon.awscdk.services.kendra"
            },
            "python": {
              "module": "aws_cdk.aws_kendra"
            }
          }
        },
        "aws-cdk-lib.aws_kinesis": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.Kinesis"
            },
            "java": {
              "package": "software.amazon.awscdk.services.kinesis"
            },
            "python": {
              "module": "aws_cdk.aws_kinesis"
            }
          }
        },
        "aws-cdk-lib.aws_kinesisanalytics": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.KinesisAnalytics"
            },
            "java": {
              "package": "software.amazon.awscdk.services.kinesisanalytics"
            },
            "python": {
              "module": "aws_cdk.aws_kinesisanalytics"
            }
          }
        },
        "aws-cdk-lib.aws_kinesisanalyticsv2": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.KinesisAnalyticsV2"
            },
            "java": {
              "package": "software.amazon.awscdk.services.kinesisanalyticsv2"
            },
            "python": {
              "module": "aws_cdk.aws_kinesisanalyticsv2"
            }
          }
        },
        "aws-cdk-lib.aws_kinesisfirehose": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.KinesisFirehose"
            },
            "java": {
              "package": "software.amazon.awscdk.services.kinesisfirehose"
            },
            "python": {
              "module": "aws_cdk.aws_kinesisfirehose"
            }
          }
        },
        "aws-cdk-lib.aws_kinesisvideo": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.KinesisVideo"
            },
            "java": {
              "package": "software.amazon.awscdk.services.kinesisvideo"
            },
            "python": {
              "module": "aws_cdk.aws_kinesisvideo"
            }
          }
        },
        "aws-cdk-lib.aws_kms": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.KMS"
            },
            "java": {
              "package": "software.amazon.awscdk.services.kms"
            },
            "python": {
              "module": "aws_cdk.aws_kms"
            }
          }
        },
        "aws-cdk-lib.aws_lakeformation": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.LakeFormation"
            },
            "java": {
              "package": "software.amazon.awscdk.services.lakeformation"
            },
            "python": {
              "module": "aws_cdk.aws_lakeformation"
            }
          }
        },
        "aws-cdk-lib.aws_lambda": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.Lambda"
            },
            "java": {
              "package": "software.amazon.awscdk.services.lambda"
            },
            "python": {
              "module": "aws_cdk.aws_lambda"
            }
          }
        },
        "aws-cdk-lib.aws_lambda_destinations": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.Lambda.Destinations"
            },
            "java": {
              "package": "software.amazon.awscdk.services.lambda.destinations"
            },
            "python": {
              "module": "aws_cdk.aws_lambda_destinations"
            }
          }
        },
        "aws-cdk-lib.aws_lambda_event_sources": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.Lambda.EventSources"
            },
            "java": {
              "package": "software.amazon.awscdk.services.lambda.eventsources"
            },
            "python": {
              "module": "aws_cdk.aws_lambda_event_sources"
            }
          }
        },
        "aws-cdk-lib.aws_lambda_nodejs": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.Lambda.Nodejs"
            },
            "java": {
              "package": "software.amazon.awscdk.services.lambda.nodejs"
            },
            "python": {
              "module": "aws_cdk.aws_lambda_nodejs"
            }
          }
        },
        "aws-cdk-lib.aws_lex": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.Lex"
            },
            "java": {
              "package": "software.amazon.awscdk.services.lex"
            },
            "python": {
              "module": "aws_cdk.aws_lex"
            }
          }
        },
        "aws-cdk-lib.aws_licensemanager": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.LicenseManager"
            },
            "java": {
              "package": "software.amazon.awscdk.services.licensemanager"
            },
            "python": {
              "module": "aws_cdk.aws_licensemanager"
            }
          }
        },
        "aws-cdk-lib.aws_lightsail": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.Lightsail"
            },
            "java": {
              "package": "software.amazon.awscdk.services.lightsail"
            },
            "python": {
              "module": "aws_cdk.aws_lightsail"
            }
          }
        },
        "aws-cdk-lib.aws_location": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.Location"
            },
            "java": {
              "package": "software.amazon.awscdk.services.location"
            },
            "python": {
              "module": "aws_cdk.aws_location"
            }
          }
        },
        "aws-cdk-lib.aws_logs": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.Logs"
            },
            "java": {
              "package": "software.amazon.awscdk.services.logs"
            },
            "python": {
              "module": "aws_cdk.aws_logs"
            }
          }
        },
        "aws-cdk-lib.aws_logs_destinations": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.Logs.Destinations"
            },
            "java": {
              "package": "software.amazon.awscdk.services.logs.destinations"
            },
            "python": {
              "module": "aws_cdk.aws_logs_destinations"
            }
          }
        },
        "aws-cdk-lib.aws_lookoutequipment": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.LookoutEquipment"
            },
            "java": {
              "package": "software.amazon.awscdk.services.lookoutequipment"
            },
            "python": {
              "module": "aws_cdk.aws_lookoutequipment"
            }
          }
        },
        "aws-cdk-lib.aws_lookoutmetrics": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.LookoutMetrics"
            },
            "java": {
              "package": "software.amazon.awscdk.services.lookoutmetrics"
            },
            "python": {
              "module": "aws_cdk.aws_lookoutmetrics"
            }
          }
        },
        "aws-cdk-lib.aws_lookoutvision": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.LookoutVision"
            },
            "java": {
              "package": "software.amazon.awscdk.services.lookoutvision"
            },
            "python": {
              "module": "aws_cdk.aws_lookoutvision"
            }
          }
        },
        "aws-cdk-lib.aws_macie": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.Macie"
            },
            "java": {
              "package": "software.amazon.awscdk.services.macie"
            },
            "python": {
              "module": "aws_cdk.aws_macie"
            }
          }
        },
        "aws-cdk-lib.aws_managedblockchain": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.ManagedBlockchain"
            },
            "java": {
              "package": "software.amazon.awscdk.services.managedblockchain"
            },
            "python": {
              "module": "aws_cdk.aws_managedblockchain"
            }
          }
        },
        "aws-cdk-lib.aws_mediaconnect": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.MediaConnect"
            },
            "java": {
              "package": "software.amazon.awscdk.services.mediaconnect"
            },
            "python": {
              "module": "aws_cdk.aws_mediaconnect"
            }
          }
        },
        "aws-cdk-lib.aws_mediaconvert": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.MediaConvert"
            },
            "java": {
              "package": "software.amazon.awscdk.services.mediaconvert"
            },
            "python": {
              "module": "aws_cdk.aws_mediaconvert"
            }
          }
        },
        "aws-cdk-lib.aws_medialive": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.MediaLive"
            },
            "java": {
              "package": "software.amazon.awscdk.services.medialive"
            },
            "python": {
              "module": "aws_cdk.aws_medialive"
            }
          }
        },
        "aws-cdk-lib.aws_mediapackage": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.MediaPackage"
            },
            "java": {
              "package": "software.amazon.awscdk.services.mediapackage"
            },
            "python": {
              "module": "aws_cdk.aws_mediapackage"
            }
          }
        },
        "aws-cdk-lib.aws_mediastore": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.MediaStore"
            },
            "java": {
              "package": "software.amazon.awscdk.services.mediastore"
            },
            "python": {
              "module": "aws_cdk.aws_mediastore"
            }
          }
        },
        "aws-cdk-lib.aws_memorydb": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.MemoryDB"
            },
            "java": {
              "package": "software.amazon.awscdk.services.memorydb"
            },
            "python": {
              "module": "aws_cdk.aws_memorydb"
            }
          }
        },
        "aws-cdk-lib.aws_msk": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.MSK"
            },
            "java": {
              "package": "software.amazon.awscdk.services.msk"
            },
            "python": {
              "module": "aws_cdk.aws_msk"
            }
          }
        },
        "aws-cdk-lib.aws_mwaa": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.MWAA"
            },
            "java": {
              "package": "software.amazon.awscdk.services.mwaa"
            },
            "python": {
              "module": "aws_cdk.aws_mwaa"
            }
          }
        },
        "aws-cdk-lib.aws_neptune": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.Neptune"
            },
            "java": {
              "package": "software.amazon.awscdk.services.neptune"
            },
            "python": {
              "module": "aws_cdk.aws_neptune"
            }
          }
        },
        "aws-cdk-lib.aws_networkfirewall": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.NetworkFirewall"
            },
            "java": {
              "package": "software.amazon.awscdk.services.networkfirewall"
            },
            "python": {
              "module": "aws_cdk.aws_networkfirewall"
            }
          }
        },
        "aws-cdk-lib.aws_networkmanager": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.NetworkManager"
            },
            "java": {
              "package": "software.amazon.awscdk.services.networkmanager"
            },
            "python": {
              "module": "aws_cdk.aws_networkmanager"
            }
          }
        },
        "aws-cdk-lib.aws_nimblestudio": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.NimbleStudio"
            },
            "java": {
              "package": "software.amazon.awscdk.services.nimblestudio"
            },
            "python": {
              "module": "aws_cdk.aws_nimblestudio"
            }
          }
        },
        "aws-cdk-lib.aws_opensearchservice": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.OpenSearchService"
            },
            "java": {
              "package": "software.amazon.awscdk.services.opensearchservice"
            },
            "python": {
              "module": "aws_cdk.aws_opensearchservice"
            }
          }
        },
        "aws-cdk-lib.aws_opsworks": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.OpsWorks"
            },
            "java": {
              "package": "software.amazon.awscdk.services.opsworks"
            },
            "python": {
              "module": "aws_cdk.aws_opsworks"
            }
          }
        },
        "aws-cdk-lib.aws_opsworkscm": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.OpsWorksCM"
            },
            "java": {
              "package": "software.amazon.awscdk.services.opsworkscm"
            },
            "python": {
              "module": "aws_cdk.aws_opsworkscm"
            }
          }
        },
        "aws-cdk-lib.aws_panorama": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.Panorama"
            },
            "java": {
              "package": "software.amazon.awscdk.services.panorama"
            },
            "python": {
              "module": "aws_cdk.aws_panorama"
            }
          }
        },
        "aws-cdk-lib.aws_pinpoint": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.Pinpoint"
            },
            "java": {
              "package": "software.amazon.awscdk.services.pinpoint"
            },
            "python": {
              "module": "aws_cdk.aws_pinpoint"
            }
          }
        },
        "aws-cdk-lib.aws_pinpointemail": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.PinpointEmail"
            },
            "java": {
              "package": "software.amazon.awscdk.services.pinpointemail"
            },
            "python": {
              "module": "aws_cdk.aws_pinpointemail"
            }
          }
        },
        "aws-cdk-lib.aws_qldb": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.QLDB"
            },
            "java": {
              "package": "software.amazon.awscdk.services.qldb"
            },
            "python": {
              "module": "aws_cdk.aws_qldb"
            }
          }
        },
        "aws-cdk-lib.aws_quicksight": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.QuickSight"
            },
            "java": {
              "package": "software.amazon.awscdk.services.quicksight"
            },
            "python": {
              "module": "aws_cdk.aws_quicksight"
            }
          }
        },
        "aws-cdk-lib.aws_ram": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.RAM"
            },
            "java": {
              "package": "software.amazon.awscdk.services.ram"
            },
            "python": {
              "module": "aws_cdk.aws_ram"
            }
          }
        },
        "aws-cdk-lib.aws_rds": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.RDS"
            },
            "java": {
              "package": "software.amazon.awscdk.services.rds"
            },
            "python": {
              "module": "aws_cdk.aws_rds"
            }
          }
        },
        "aws-cdk-lib.aws_redshift": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.Redshift"
            },
            "java": {
              "package": "software.amazon.awscdk.services.redshift"
            },
            "python": {
              "module": "aws_cdk.aws_redshift"
            }
          }
        },
        "aws-cdk-lib.aws_refactorspaces": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.RefactorSpaces"
            },
            "java": {
              "package": "software.amazon.awscdk.services.refactorspaces"
            },
            "python": {
              "module": "aws_cdk.aws_refactorspaces"
            }
          }
        },
        "aws-cdk-lib.aws_rekognition": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.Rekognition"
            },
            "java": {
              "package": "software.amazon.awscdk.services.rekognition"
            },
            "python": {
              "module": "aws_cdk.aws_rekognition"
            }
          }
        },
        "aws-cdk-lib.aws_resiliencehub": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.ResilienceHub"
            },
            "java": {
              "package": "software.amazon.awscdk.services.resiliencehub"
            },
            "python": {
              "module": "aws_cdk.aws_resiliencehub"
            }
          }
        },
        "aws-cdk-lib.aws_resourcegroups": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.ResourceGroups"
            },
            "java": {
              "package": "software.amazon.awscdk.services.resourcegroups"
            },
            "python": {
              "module": "aws_cdk.aws_resourcegroups"
            }
          }
        },
        "aws-cdk-lib.aws_robomaker": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.RoboMaker"
            },
            "java": {
              "package": "software.amazon.awscdk.services.robomaker"
            },
            "python": {
              "module": "aws_cdk.aws_robomaker"
            }
          }
        },
        "aws-cdk-lib.aws_route53": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.Route53"
            },
            "java": {
              "package": "software.amazon.awscdk.services.route53"
            },
            "python": {
              "module": "aws_cdk.aws_route53"
            }
          }
        },
        "aws-cdk-lib.aws_route53_patterns": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.Route53.Patterns"
            },
            "java": {
              "package": "software.amazon.awscdk.services.route53.patterns"
            },
            "python": {
              "module": "aws_cdk.aws_route53_patterns"
            }
          }
        },
        "aws-cdk-lib.aws_route53_targets": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.Route53.Targets"
            },
            "java": {
              "package": "software.amazon.awscdk.services.route53.targets"
            },
            "python": {
              "module": "aws_cdk.aws_route53_targets"
            }
          }
        },
        "aws-cdk-lib.aws_route53recoverycontrol": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.Route53RecoveryControl"
            },
            "java": {
              "package": "software.amazon.awscdk.services.route53recoverycontrol"
            },
            "python": {
              "module": "aws_cdk.aws_route53recoverycontrol"
            }
          }
        },
        "aws-cdk-lib.aws_route53recoveryreadiness": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.Route53RecoveryReadiness"
            },
            "java": {
              "package": "software.amazon.awscdk.services.route53recoveryreadiness"
            },
            "python": {
              "module": "aws_cdk.aws_route53recoveryreadiness"
            }
          }
        },
        "aws-cdk-lib.aws_route53resolver": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.Route53Resolver"
            },
            "java": {
              "package": "software.amazon.awscdk.services.route53resolver"
            },
            "python": {
              "module": "aws_cdk.aws_route53resolver"
            }
          }
        },
        "aws-cdk-lib.aws_rum": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.RUM"
            },
            "java": {
              "package": "software.amazon.awscdk.services.rum"
            },
            "python": {
              "module": "aws_cdk.aws_rum"
            }
          }
        },
        "aws-cdk-lib.aws_s3": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.S3"
            },
            "java": {
              "package": "software.amazon.awscdk.services.s3"
            },
            "python": {
              "module": "aws_cdk.aws_s3"
            }
          }
        },
        "aws-cdk-lib.aws_s3_assets": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.S3.Assets"
            },
            "java": {
              "package": "software.amazon.awscdk.services.s3.assets"
            },
            "python": {
              "module": "aws_cdk.aws_s3_assets"
            }
          }
        },
        "aws-cdk-lib.aws_s3_deployment": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.S3.Deployment"
            },
            "java": {
              "package": "software.amazon.awscdk.services.s3.deployment"
            },
            "python": {
              "module": "aws_cdk.aws_s3_deployment"
            }
          }
        },
        "aws-cdk-lib.aws_s3_notifications": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.S3.Notifications"
            },
            "java": {
              "package": "software.amazon.awscdk.services.s3.notifications"
            },
            "python": {
              "module": "aws_cdk.aws_s3_notifications"
            }
          }
        },
        "aws-cdk-lib.aws_s3objectlambda": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.S3ObjectLambda"
            },
            "java": {
              "package": "software.amazon.awscdk.services.s3objectlambda"
            },
            "python": {
              "module": "aws_cdk.aws_s3objectlambda"
            }
          }
        },
        "aws-cdk-lib.aws_s3outposts": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.S3Outposts"
            },
            "java": {
              "package": "software.amazon.awscdk.services.s3outposts"
            },
            "python": {
              "module": "aws_cdk.aws_s3outposts"
            }
          }
        },
        "aws-cdk-lib.aws_sagemaker": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.Sagemaker"
            },
            "java": {
              "package": "software.amazon.awscdk.services.sagemaker"
            },
            "python": {
              "module": "aws_cdk.aws_sagemaker"
            }
          }
        },
        "aws-cdk-lib.aws_sam": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.SAM"
            },
            "java": {
              "package": "software.amazon.awscdk.services.sam"
            },
            "python": {
              "module": "aws_cdk.aws_sam"
            }
          }
        },
        "aws-cdk-lib.aws_sdb": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.SDB"
            },
            "java": {
              "package": "software.amazon.awscdk.services.sdb"
            },
            "python": {
              "module": "aws_cdk.aws_sdb"
            }
          }
        },
        "aws-cdk-lib.aws_secretsmanager": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.SecretsManager"
            },
            "java": {
              "package": "software.amazon.awscdk.services.secretsmanager"
            },
            "python": {
              "module": "aws_cdk.aws_secretsmanager"
            }
          }
        },
        "aws-cdk-lib.aws_securityhub": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.SecurityHub"
            },
            "java": {
              "package": "software.amazon.awscdk.services.securityhub"
            },
            "python": {
              "module": "aws_cdk.aws_securityhub"
            }
          }
        },
        "aws-cdk-lib.aws_servicecatalog": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.Servicecatalog"
            },
            "java": {
              "package": "software.amazon.awscdk.services.servicecatalog"
            },
            "python": {
              "module": "aws_cdk.aws_servicecatalog"
            }
          }
        },
        "aws-cdk-lib.aws_servicecatalogappregistry": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.Servicecatalogappregistry"
            },
            "java": {
              "package": "software.amazon.awscdk.services.servicecatalogappregistry"
            },
            "python": {
              "module": "aws_cdk.aws_servicecatalogappregistry"
            }
          }
        },
        "aws-cdk-lib.aws_servicediscovery": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.ServiceDiscovery"
            },
            "java": {
              "package": "software.amazon.awscdk.services.servicediscovery"
            },
            "python": {
              "module": "aws_cdk.aws_servicediscovery"
            }
          }
        },
        "aws-cdk-lib.aws_ses": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.SES"
            },
            "java": {
              "package": "software.amazon.awscdk.services.ses"
            },
            "python": {
              "module": "aws_cdk.aws_ses"
            }
          }
        },
        "aws-cdk-lib.aws_ses_actions": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.SES.Actions"
            },
            "java": {
              "package": "software.amazon.awscdk.services.ses.actions"
            },
            "python": {
              "module": "aws_cdk.aws_ses_actions"
            }
          }
        },
        "aws-cdk-lib.aws_signer": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.Signer"
            },
            "java": {
              "package": "software.amazon.awscdk.services.signer"
            },
            "python": {
              "module": "aws_cdk.aws_signer"
            }
          }
        },
        "aws-cdk-lib.aws_sns": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.SNS"
            },
            "java": {
              "package": "software.amazon.awscdk.services.sns"
            },
            "python": {
              "module": "aws_cdk.aws_sns"
            }
          }
        },
        "aws-cdk-lib.aws_sns_subscriptions": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.SNS.Subscriptions"
            },
            "java": {
              "package": "software.amazon.awscdk.services.sns.subscriptions"
            },
            "python": {
              "module": "aws_cdk.aws_sns_subscriptions"
            }
          }
        },
        "aws-cdk-lib.aws_sqs": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.SQS"
            },
            "java": {
              "package": "software.amazon.awscdk.services.sqs"
            },
            "python": {
              "module": "aws_cdk.aws_sqs"
            }
          }
        },
        "aws-cdk-lib.aws_ssm": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.SSM"
            },
            "java": {
              "package": "software.amazon.awscdk.services.ssm"
            },
            "python": {
              "module": "aws_cdk.aws_ssm"
            }
          }
        },
        "aws-cdk-lib.aws_ssmcontacts": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.SSMContacts"
            },
            "java": {
              "package": "software.amazon.awscdk.services.ssmcontacts"
            },
            "python": {
              "module": "aws_cdk.aws_ssmcontacts"
            }
          }
        },
        "aws-cdk-lib.aws_ssmincidents": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.SSMIncidents"
            },
            "java": {
              "package": "software.amazon.awscdk.services.ssmincidents"
            },
            "python": {
              "module": "aws_cdk.aws_ssmincidents"
            }
          }
        },
        "aws-cdk-lib.aws_sso": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.SSO"
            },
            "java": {
              "package": "software.amazon.awscdk.services.sso"
            },
            "python": {
              "module": "aws_cdk.aws_sso"
            }
          }
        },
        "aws-cdk-lib.aws_stepfunctions": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.StepFunctions"
            },
            "java": {
              "package": "software.amazon.awscdk.services.stepfunctions"
            },
            "python": {
              "module": "aws_cdk.aws_stepfunctions"
            }
          }
        },
        "aws-cdk-lib.aws_stepfunctions_tasks": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.StepFunctions.Tasks"
            },
            "java": {
              "package": "software.amazon.awscdk.services.stepfunctions.tasks"
            },
            "python": {
              "module": "aws_cdk.aws_stepfunctions_tasks"
            }
          }
        },
        "aws-cdk-lib.aws_synthetics": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.Synthetics"
            },
            "java": {
              "package": "software.amazon.awscdk.services.synthetics"
            },
            "python": {
              "module": "aws_cdk.aws_synthetics"
            }
          }
        },
        "aws-cdk-lib.aws_timestream": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.Timestream"
            },
            "java": {
              "package": "software.amazon.awscdk.services.timestream"
            },
            "python": {
              "module": "aws_cdk.aws_timestream"
            }
          }
        },
        "aws-cdk-lib.aws_transfer": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.Transfer"
            },
            "java": {
              "package": "software.amazon.awscdk.services.transfer"
            },
            "python": {
              "module": "aws_cdk.aws_transfer"
            }
          }
        },
        "aws-cdk-lib.aws_waf": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.WAF"
            },
            "java": {
              "package": "software.amazon.awscdk.services.waf"
            },
            "python": {
              "module": "aws_cdk.aws_waf"
            }
          }
        },
        "aws-cdk-lib.aws_wafregional": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.WAFRegional"
            },
            "java": {
              "package": "software.amazon.awscdk.services.waf.regional"
            },
            "python": {
              "module": "aws_cdk.aws_wafregional"
            }
          }
        },
        "aws-cdk-lib.aws_wafv2": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.WAFv2"
            },
            "java": {
              "package": "software.amazon.awscdk.services.wafv2"
            },
            "python": {
              "module": "aws_cdk.aws_wafv2"
            }
          }
        },
        "aws-cdk-lib.aws_wisdom": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.Wisdom"
            },
            "java": {
              "package": "software.amazon.awscdk.services.wisdom"
            },
            "python": {
              "module": "aws_cdk.aws_wisdom"
            }
          }
        },
        "aws-cdk-lib.aws_workspaces": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.WorkSpaces"
            },
            "java": {
              "package": "software.amazon.awscdk.services.workspaces"
            },
            "python": {
              "module": "aws_cdk.aws_workspaces"
            }
          }
        },
        "aws-cdk-lib.aws_xray": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.XRay"
            },
            "java": {
              "package": "software.amazon.awscdk.services.xray"
            },
            "python": {
              "module": "aws_cdk.aws_xray"
            }
          }
        },
        "aws-cdk-lib.cloud_assembly_schema": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.CloudAssembly.Schema"
            },
            "java": {
              "package": "software.amazon.awscdk.cloudassembly.schema"
            },
            "python": {
              "module": "aws_cdk.cloud_assembly_schema"
            }
          }
        },
        "aws-cdk-lib.cloudformation_include": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.CloudFormation.Include"
            },
            "java": {
              "package": "software.amazon.awscdk.cloudformation.include"
            },
            "python": {
              "module": "aws_cdk.cloudformation_include"
            }
          }
        },
        "aws-cdk-lib.custom_resources": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.CustomResources"
            },
            "java": {
              "package": "software.amazon.awscdk.customresources"
            },
            "python": {
              "module": "aws_cdk.custom_resources"
            }
          }
        },
        "aws-cdk-lib.cx_api": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.CXAPI"
            },
            "java": {
              "package": "software.amazon.awscdk.cxapi"
            },
            "python": {
              "module": "aws_cdk.cx_api"
            }
          }
        },
        "aws-cdk-lib.lambda_layer_awscli": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.LambdaLayer.AwsCli"
            },
            "java": {
              "package": "software.amazon.awscdk.lambdalayer.awscli"
            },
            "python": {
              "module": "aws_cdk.lambda_layer_awscli"
            }
          }
        },
        "aws-cdk-lib.lambda_layer_kubectl": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.LambdaLayer.Kubectl"
            },
            "java": {
              "package": "software.amazon.awscdk.lambdalayer.kubectl"
            },
            "python": {
              "module": "aws_cdk.lambda_layer_kubectl"
            }
          }
        },
        "aws-cdk-lib.lambda_layer_node_proxy_agent": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.LambdaLayer.NodeProxyAgent"
            },
            "java": {
              "package": "software.amazon.awscdk.lambda.layer.node.proxy.agent"
            },
            "python": {
              "module": "aws_cdk.lambda_layer_node_proxy_agent"
            }
          }
        },
        "aws-cdk-lib.pipelines": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.Pipelines"
            },
            "java": {
              "package": "software.amazon.awscdk.pipelines"
            },
            "python": {
              "module": "aws_cdk.pipelines"
            }
          }
        },
        "aws-cdk-lib.region_info": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.RegionInfo"
            },
            "java": {
              "package": "software.amazon.awscdk.regioninfo"
            },
            "python": {
              "module": "aws_cdk.region_info"
            }
          }
        }
      },
      "targets": {
        "dotnet": {
          "iconUrl": "https://raw.githubusercontent.com/aws/aws-cdk/master/logo/default-256-dark.png",
          "namespace": "Amazon.CDK",
          "packageId": "Amazon.CDK.Lib"
        },
        "go": {
          "moduleName": "github.com/aws/aws-cdk-go",
          "packageName": "awscdk"
        },
        "java": {
          "maven": {
            "artifactId": "aws-cdk-lib",
            "groupId": "software.amazon.awscdk"
          },
          "package": "software.amazon.awscdk"
        },
        "js": {
          "npm": "aws-cdk-lib"
        },
        "python": {
          "distName": "aws-cdk-lib",
          "module": "aws_cdk"
        }
      }
    },
    "constructs": {
      "targets": {
        "dotnet": {
          "namespace": "Constructs",
          "packageId": "Constructs"
        },
        "go": {
          "moduleName": "github.com/aws/constructs-go"
        },
        "java": {
          "maven": {
            "artifactId": "constructs",
            "groupId": "software.constructs"
          },
          "package": "software.constructs"
        },
        "js": {
          "npm": "constructs"
        },
        "python": {
          "distName": "constructs",
          "module": "constructs"
        }
      }
    }
  },
  "description": "This tool gives handy utilities to test AWS CDK Stack.",
  "docs": {
    "stability": "stable"
  },
  "homepage": "https://github.com/idea-pool/aws-cdk-assert#readme",
  "jsiiVersion": "1.60.1",
  "keywords": [
    "aws",
    "cdk",
    "assert"
  ],
  "license": "MIT",
  "metadata": {
    "jsii": {
      "pacmak": {
        "hasDefaultInterfaces": true
      }
    },
    "tscRootDir": "./src"
  },
  "name": "aws-cdk-assert",
  "readme": {
    "markdown": "> **IMPORTANT** This tool is NOT an official tool made by AWS.\n\n# aws-cdk-assert\n\n![Downloads](https://img.shields.io/npm/dw/aws-cdk-assert?style=flat-square) ![Version@npm](https://img.shields.io/npm/v/aws-cdk-assert?label=version%40npm&style=flat-square) ![Version@git](https://img.shields.io/github/package-json/v/idea-pool/aws-cdk-assert/main?label=version%40git&style=flat-square) ![CI](https://img.shields.io/github/workflow/status/idea-pool/aws-cdk-assert/CI/main?label=ci&style=flat-square) ![Docs](https://img.shields.io/github/workflow/status/idea-pool/aws-cdk-assert/Docs/main?label=docs&style=flat-square)\n\nThis tool gives handy utilities to test AWS CDK Stack, with predefined test constructs for certain CDK constructs.\n\nThe tool currently contains the following test constructs:\n\n| Service        | Construct                      | CloudFormation Type                   |\n| :------------- | :----------------------------- | :------------------------------------ |\n| ApiGateway     | `ApiGatewayRestApi`            | `AWS::ApiGateway::RestApi`            |\n| ApiGateway     | `ApiGatewayAccount`            | `AWS::ApiGateway::Account`            |\n| ApiGateway     | `ApiGatewayDeployment`         | `AWS::ApiGateway::Deployment`         |\n| ApiGateway     | `ApiGatewayStage`              | `AWS::ApiGateway::Stage`              |\n| ApiGateway     | `ApiGatewayMethod`             | `AWS::ApiGateway::Method`             |\n| ApiGateway     | `ApiGatewayResource`           | `AWS::ApiGateway::Resource`           |\n| ApiGateway     | `ApiGatewayDomain`             | `AWS::ApiGateway::DomainName`         |\n| ApiGateway     | `ApiGatewayBasePathMapping`    | `AWS::ApiGateway::BasePathMapping`    |\n| ApiGateway     | `ApiGatewayApiKey`             | `AWS::ApiGateway::ApiKey`             |\n| ApiGateway     | `ApiGatewayUsagePlan`          | `AWS::ApiGateway::UsagePlan`          |\n| ApiGateway     | `ApiGatewayUsagePlanKey`       | `AWS::ApiGateway::UsagePlanKey`       |\n| CloudFormation | `CloudFormationCustomResource` | `AWS::CloudFormation::CustomResource` |\n| CloudFront     | `CloudFrontDistribution`       | `AWS::CloudFront::Distribution`       |\n| CloudFront     | `CloudFrontFunction`           | `AWS::CloudFront::Function`           |\n| CodeBuild      | `CodeBuildSourceCredentials`   | `AWS::CodeBuild::SourceCredential`    |\n| CodeBuild      | `CodeBuildProject`             | `AWS::CodeBuild::Project`             |\n| Custom         | `CustomResource`               | `Custom::AWS`                         |\n| DynamoDB       | `DynamoDBTable`                | `AWS::DynamoDB::Table`                |\n| IAM            | `IAMRole`                      | `AWS::IAM::Role`                      |\n| IAM            | `IAMPolicy`                    | `AWS::IAM::Policy`                    |\n| Lambda         | `LambdaFunction`               | `AWS::Lambda::Function`               |\n| Lambda         | `LambdaPermission`             | `AWS::Lambda::Permission`             |\n| Logs           | `LogGroup`                     | `AWS::Logs::LogGroup`                 |\n| Route53        | `Route53HostedZone`            | `AWS::Route53::HostedZone`            |\n| Route53        | `Route53RecordSet`             | `AWS::Route53::RecordSet`             |\n| S3             | `S3Bucket`                     | `AWS::S3::Bucket`                     |\n| S3             | `S3BucketPolicy`               | `AWS::S3::BucketPolicy`               |\n| SecretsManager | `Secret`                       | `AWS::SecretsManager::Secret`         |\n| SSM            | `SSMParameter`                 | `AWS::SSM::Parameter`                 |\n| WAF v2         | `WafV2WebACL`                  | `AWS::WAFv2::WebACL`                  |\n\n## Need a new construct?\n\n**Suggest one** in the issues, with an example CloudFormation template or **contribute** implementing it in this tool.\n\n## Usage\n\n```typescript\n// stack.test.ts\nimport * as cdk from 'aws-cdk-lib';\nimport * as MyStack from '../lib/mystack.ts';\nimport { AdvancedTemplate } from 'aws-cdk-assert';\n\ndescribe('MyStack', () => {\n  let template: AdvancedTemplate;\n\n  beforeAll(() => {\n    const app = new cdk.App();\n    const stack = new MyStack.MyStack(app, 'MyStack', {\n      // props\n    });\n    template = AdvancedTemplate.fromStack(stack);\n  });\n\n  test('should have S3 Bucket', () => {\n    template.s3Bucket().withBucketName('MyBucket').exists();\n  });\n});\n```\n\n## API\n\nThe main components/API the tool relies on:\n\n* `AdvancedTemplate` is a wrapper around [Template](https://docs.aws.amazon.com/cdk/api/v2/docs/aws-cdk-lib.assertions.Template.html), decorated with factory methods for the predefined constructs.\n* `AdvancedMatcher` is similar to [Match](https://docs.aws.amazon.com/cdk/api/v2/docs/aws-cdk-lib.assertions.Match.html), but with additional functions.\n* `Resource` (and `RemovableResource`) is the base construct to work with CloudFormation constructs. It allows to\n  + construct the matcher properties, which will be used to find a construct in the template,\n  + check if a construct exists or not,\n  + check the count of a construct (not just based on type, but fully matching construct),\n  + make assertions with extended information in case of failure,\n  + etc.\n\nFor detailed documentation see the [TypeDocs documentation](https://idea-pool.github.io/aws-cdk-assert/).\n"
  },
  "repository": {
    "type": "git",
    "url": "git+https://github.com/idea-pool/aws-cdk-assert.git"
  },
  "schema": "jsii/0.10.0",
  "targets": {
    "js": {
      "npm": "aws-cdk-assert"
    },
    "python": {
      "distName": "community.ideapool.aws-cdk-assert",
      "module": "aws-cdk-assert"
    }
  },
  "types": {
    "aws-cdk-assert.AdvancedMatcher": {
      "assembly": "aws-cdk-assert",
      "docs": {
        "stability": "stable",
        "summary": "Matchers to use to assert CloudFormation template."
      },
      "fqn": "aws-cdk-assert.AdvancedMatcher",
      "initializer": {
        "docs": {
          "stability": "stable"
        }
      },
      "kind": "class",
      "locationInModule": {
        "filename": "src/advanced-matcher.ts",
        "line": 7
      },
      "methods": [
        {
          "docs": {
            "returns": "",
            "stability": "stable",
            "summary": "Matches with the ARN of the test construct."
          },
          "locationInModule": {
            "filename": "src/advanced-matcher.ts",
            "line": 71
          },
          "name": "arn",
          "parameters": [
            {
              "docs": {
                "summary": "The test construct."
              },
              "name": "resource",
              "type": {
                "fqn": "aws-cdk-assert.Resource"
              }
            },
            {
              "docs": {
                "summary": "The attribute parsed for the ARN defaults to \"Arn\"."
              },
              "name": "attribute",
              "optional": true,
              "type": {
                "primitive": "string"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "aws-cdk-lib.assertions.Matcher"
            }
          },
          "static": true
        },
        {
          "docs": {
            "returns": "",
            "stability": "stable",
            "summary": "Matches the Fn function with the name and the passed values."
          },
          "locationInModule": {
            "filename": "src/advanced-matcher.ts",
            "line": 14
          },
          "name": "fn",
          "parameters": [
            {
              "docs": {
                "summary": "The name of Fn function."
              },
              "name": "name",
              "type": {
                "primitive": "string"
              }
            },
            {
              "docs": {
                "summary": "The values matched with Match.arrayWith()."
              },
              "name": "pattern",
              "type": {
                "primitive": "any"
              },
              "variadic": true
            }
          ],
          "returns": {
            "type": {
              "fqn": "aws-cdk-lib.assertions.Matcher"
            }
          },
          "static": true,
          "variadic": true
        },
        {
          "docs": {
            "returns": "",
            "stability": "stable",
            "summary": "Matches a Fn::Equals with the passed values."
          },
          "locationInModule": {
            "filename": "src/advanced-matcher.ts",
            "line": 52
          },
          "name": "fnEquals",
          "parameters": [
            {
              "docs": {
                "summary": "The values to match with, in order."
              },
              "name": "pattern",
              "type": {
                "primitive": "any"
              },
              "variadic": true
            }
          ],
          "returns": {
            "type": {
              "fqn": "aws-cdk-lib.assertions.Matcher"
            }
          },
          "static": true,
          "variadic": true
        },
        {
          "docs": {
            "returns": "",
            "stability": "stable",
            "summary": "Matches a Fn::GetAtt with the passed values."
          },
          "locationInModule": {
            "filename": "src/advanced-matcher.ts",
            "line": 43
          },
          "name": "fnGetAtt",
          "parameters": [
            {
              "docs": {
                "summary": "The values to match with, in order."
              },
              "name": "pattern",
              "type": {
                "primitive": "any"
              },
              "variadic": true
            }
          ],
          "returns": {
            "type": {
              "fqn": "aws-cdk-lib.assertions.Matcher"
            }
          },
          "static": true,
          "variadic": true
        },
        {
          "docs": {
            "returns": "",
            "stability": "stable",
            "summary": "Matches a Fn::Join with the passed value."
          },
          "locationInModule": {
            "filename": "src/advanced-matcher.ts",
            "line": 61
          },
          "name": "fnJoin",
          "parameters": [
            {
              "docs": {
                "summary": "The value to match with."
              },
              "name": "pattern",
              "type": {
                "primitive": "any"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "aws-cdk-lib.assertions.Matcher"
            }
          },
          "static": true
        },
        {
          "docs": {
            "returns": "",
            "stability": "stable",
            "summary": "Matches a Fn::Select with the passed value."
          },
          "locationInModule": {
            "filename": "src/advanced-matcher.ts",
            "line": 25
          },
          "name": "fnSelect",
          "parameters": [
            {
              "docs": {
                "summary": "The value to match with."
              },
              "name": "pattern",
              "type": {
                "primitive": "any"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "aws-cdk-lib.assertions.Matcher"
            }
          },
          "static": true
        },
        {
          "docs": {
            "returns": "",
            "stability": "stable",
            "summary": "Matches a Fn::Split with the passed value."
          },
          "locationInModule": {
            "filename": "src/advanced-matcher.ts",
            "line": 34
          },
          "name": "fnSplit",
          "parameters": [
            {
              "docs": {
                "summary": "The value to match with."
              },
              "name": "pattern",
              "type": {
                "primitive": "any"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "aws-cdk-lib.assertions.Matcher"
            }
          },
          "static": true
        }
      ],
      "name": "AdvancedMatcher",
      "symbolId": "src/advanced-matcher:AdvancedMatcher"
    },
    "aws-cdk-assert.AdvancedTemplate": {
      "assembly": "aws-cdk-assert",
      "docs": {
        "stability": "stable",
        "summary": "CloudFormation/CDK template assertion class,  based on {@link https://docs.aws.amazon.com/cdk/api/v2/docs/aws-cdk-lib.assertions.Template.html|AWS CDK Assertions Template}."
      },
      "fqn": "aws-cdk-assert.AdvancedTemplate",
      "initializer": {
        "docs": {
          "stability": "stable"
        },
        "locationInModule": {
          "filename": "src/advanced-template.ts",
          "line": 39
        },
        "parameters": [
          {
            "docs": {
              "summary": "The parsed template."
            },
            "name": "template",
            "type": {
              "fqn": "aws-cdk-lib.assertions.Template"
            }
          },
          {
            "docs": {
              "summary": "The region of the stack."
            },
            "name": "region",
            "type": {
              "primitive": "string"
            }
          }
        ]
      },
      "kind": "class",
      "locationInModule": {
        "filename": "src/advanced-template.ts",
        "line": 25
      },
      "methods": [
        {
          "docs": {
            "custom": {
              "ee": "{@link https://docs.aws.amazon.com/cdk/api/v2/docs/aws-cdk-lib.assertions.Template.html#static-fromwbrjsontemplate}"
            },
            "returns": "",
            "stability": "stable",
            "summary": "Parses a template from the CloudFormation template JSON."
          },
          "locationInModule": {
            "filename": "src/advanced-template.ts",
            "line": 63
          },
          "name": "fromJSON",
          "parameters": [
            {
              "docs": {
                "summary": "The CloudFormation template, formatted as a nested set of records."
              },
              "name": "template",
              "type": {
                "collection": {
                  "elementtype": {
                    "primitive": "any"
                  },
                  "kind": "map"
                }
              }
            },
            {
              "docs": {
                "summary": "The region of the stack."
              },
              "name": "region",
              "type": {
                "primitive": "string"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "aws-cdk-assert.AdvancedTemplate"
            }
          },
          "static": true
        },
        {
          "docs": {
            "returns": "",
            "see": "{@link https://docs.aws.amazon.com/cdk/api/v2/docs/aws-cdk-lib.assertions.Template.html#static-fromwbrstackstack}",
            "stability": "stable",
            "summary": "Parses a template from the CDK stack instance."
          },
          "locationInModule": {
            "filename": "src/advanced-template.ts",
            "line": 51
          },
          "name": "fromStack",
          "parameters": [
            {
              "docs": {
                "summary": "The stack instance."
              },
              "name": "stack",
              "type": {
                "fqn": "aws-cdk-lib.Stack"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "aws-cdk-assert.AdvancedTemplate"
            }
          },
          "static": true
        },
        {
          "docs": {
            "returns": "",
            "see": "{@link https://docs.aws.amazon.com/cdk/api/v2/docs/aws-cdk-lib.assertions.Template.html#static-fromwbrstringtemplate}",
            "stability": "stable",
            "summary": "Parses a template from the CloudFormation template."
          },
          "locationInModule": {
            "filename": "src/advanced-template.ts",
            "line": 75
          },
          "name": "fromString",
          "parameters": [
            {
              "docs": {
                "summary": "The CloudFormation template."
              },
              "name": "template",
              "type": {
                "primitive": "string"
              }
            },
            {
              "docs": {
                "summary": "The region of the stack."
              },
              "name": "region",
              "type": {
                "primitive": "string"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "aws-cdk-assert.AdvancedTemplate"
            }
          },
          "static": true
        },
        {
          "docs": {
            "returns": "",
            "stability": "stable",
            "summary": "Creates an API Gateway Account test construct with the passed Properties."
          },
          "locationInModule": {
            "filename": "src/advanced-template.ts",
            "line": 231
          },
          "name": "apiGatewayAccount",
          "parameters": [
            {
              "docs": {
                "summary": "The Properties of the expected test construct."
              },
              "name": "props",
              "optional": true,
              "type": {
                "primitive": "any"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "aws-cdk-assert.ApiGatewayAccount"
            }
          }
        },
        {
          "docs": {
            "returns": "",
            "stability": "stable",
            "summary": "Creates an API Gateway API Key test construct with the passed Properties."
          },
          "locationInModule": {
            "filename": "src/advanced-template.ts",
            "line": 240
          },
          "name": "apiGatewayApiKey",
          "parameters": [
            {
              "docs": {
                "summary": "The Properties of the expected test construct."
              },
              "name": "props",
              "optional": true,
              "type": {
                "primitive": "any"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "aws-cdk-assert.ApiGatewayApiKey"
            }
          }
        },
        {
          "docs": {
            "returns": "",
            "stability": "stable",
            "summary": "Creates an API Gateway Base Path Mapping test construct with the passed Properties."
          },
          "locationInModule": {
            "filename": "src/advanced-template.ts",
            "line": 249
          },
          "name": "apiGatewayBasePathMapping",
          "parameters": [
            {
              "docs": {
                "summary": "The Properties of the expected test construct."
              },
              "name": "props",
              "optional": true,
              "type": {
                "primitive": "any"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "aws-cdk-assert.ApiGatewayBasePathMapping"
            }
          }
        },
        {
          "docs": {
            "returns": "",
            "stability": "stable",
            "summary": "Creates an API Gateway Deployment test construct with the passed Properties."
          },
          "locationInModule": {
            "filename": "src/advanced-template.ts",
            "line": 258
          },
          "name": "apiGatewayDeployment",
          "parameters": [
            {
              "docs": {
                "summary": "The Properties of the expected test construct."
              },
              "name": "props",
              "optional": true,
              "type": {
                "primitive": "any"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "aws-cdk-assert.ApiGatewayDeployment"
            }
          }
        },
        {
          "docs": {
            "returns": "",
            "stability": "stable",
            "summary": "Creates an API Gateway Domain test construct with the passed Properties."
          },
          "locationInModule": {
            "filename": "src/advanced-template.ts",
            "line": 267
          },
          "name": "apiGatewayDomain",
          "parameters": [
            {
              "docs": {
                "summary": "The Properties of the expected test construct."
              },
              "name": "props",
              "optional": true,
              "type": {
                "primitive": "any"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "aws-cdk-assert.ApiGatewayDomain"
            }
          }
        },
        {
          "docs": {
            "returns": "",
            "stability": "stable",
            "summary": "Creates an API Gateway Method test construct with the passed Properties."
          },
          "locationInModule": {
            "filename": "src/advanced-template.ts",
            "line": 276
          },
          "name": "apiGatewayMethod",
          "parameters": [
            {
              "docs": {
                "summary": "The Properties of the expected test construct."
              },
              "name": "props",
              "optional": true,
              "type": {
                "primitive": "any"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "aws-cdk-assert.ApiGatewayMethod"
            }
          }
        },
        {
          "docs": {
            "returns": "",
            "stability": "stable",
            "summary": "Creates an API Gateway Resource test construct with the passed Properties."
          },
          "locationInModule": {
            "filename": "src/advanced-template.ts",
            "line": 285
          },
          "name": "apiGatewayResource",
          "parameters": [
            {
              "docs": {
                "summary": "The Properties of the expected test construct."
              },
              "name": "props",
              "optional": true,
              "type": {
                "primitive": "any"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "aws-cdk-assert.ApiGatewayResource"
            }
          }
        },
        {
          "docs": {
            "returns": "",
            "stability": "stable",
            "summary": "Creates an API Gateway REST API test construct with the passed Properties."
          },
          "locationInModule": {
            "filename": "src/advanced-template.ts",
            "line": 294
          },
          "name": "apiGatewayRestApi",
          "parameters": [
            {
              "docs": {
                "summary": "The Properties of the expected test construct."
              },
              "name": "props",
              "optional": true,
              "type": {
                "primitive": "any"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "aws-cdk-assert.ApiGatewayRestApi"
            }
          }
        },
        {
          "docs": {
            "returns": "",
            "stability": "stable",
            "summary": "Creates an API Gateway Stage test construct with the passed Properties."
          },
          "locationInModule": {
            "filename": "src/advanced-template.ts",
            "line": 303
          },
          "name": "apiGatewayStage",
          "parameters": [
            {
              "docs": {
                "summary": "The Properties of the expected test construct."
              },
              "name": "props",
              "optional": true,
              "type": {
                "primitive": "any"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "aws-cdk-assert.ApiGatewayStage"
            }
          }
        },
        {
          "docs": {
            "returns": "",
            "stability": "stable",
            "summary": "Creates an API Gateway Usage Plan test construct with the passed Properties."
          },
          "locationInModule": {
            "filename": "src/advanced-template.ts",
            "line": 312
          },
          "name": "apiGatewayUsagePlan",
          "parameters": [
            {
              "docs": {
                "summary": "The Properties of the expected test construct."
              },
              "name": "props",
              "optional": true,
              "type": {
                "primitive": "any"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "aws-cdk-assert.ApiGatewayUsagePlan"
            }
          }
        },
        {
          "docs": {
            "returns": "",
            "stability": "stable",
            "summary": "Creates an API Gateway Usage Plan Key test construct with the passed Properties."
          },
          "locationInModule": {
            "filename": "src/advanced-template.ts",
            "line": 321
          },
          "name": "apiGatewayUsagePlanKey",
          "parameters": [
            {
              "docs": {
                "summary": "The Properties of the expected test construct."
              },
              "name": "props",
              "optional": true,
              "type": {
                "primitive": "any"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "aws-cdk-assert.ApiGatewayUsagePlanKey"
            }
          }
        },
        {
          "docs": {
            "returns": "",
            "stability": "stable",
            "summary": "Creates a CloudFormation CustomResource test construct with the passed Properties."
          },
          "locationInModule": {
            "filename": "src/advanced-template.ts",
            "line": 330
          },
          "name": "cloudFormationCustomResource",
          "parameters": [
            {
              "docs": {
                "summary": "The Properties of the expected test construct."
              },
              "name": "props",
              "optional": true,
              "type": {
                "primitive": "any"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "aws-cdk-assert.CloudFormationCustomResource"
            }
          }
        },
        {
          "docs": {
            "returns": "",
            "stability": "stable",
            "summary": "Creates a CloudFront Distribution test construct with the passed Properties."
          },
          "locationInModule": {
            "filename": "src/advanced-template.ts",
            "line": 339
          },
          "name": "cloudFrontDistribution",
          "parameters": [
            {
              "docs": {
                "summary": "The Properties of the expected test construct."
              },
              "name": "props",
              "optional": true,
              "type": {
                "primitive": "any"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "aws-cdk-assert.CloudFrontDistribution"
            }
          }
        },
        {
          "docs": {
            "returns": "",
            "stability": "stable",
            "summary": "Creates a CloudFront Function test construct with the passed Properties."
          },
          "locationInModule": {
            "filename": "src/advanced-template.ts",
            "line": 348
          },
          "name": "cloudFrontFunction",
          "parameters": [
            {
              "docs": {
                "summary": "The Properties of the expected test construct."
              },
              "name": "props",
              "optional": true,
              "type": {
                "primitive": "any"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "aws-cdk-assert.CloudFrontFunction"
            }
          }
        },
        {
          "docs": {
            "returns": "",
            "stability": "stable",
            "summary": "Creates a CodeBuild Project test construct with the passed Properties."
          },
          "locationInModule": {
            "filename": "src/advanced-template.ts",
            "line": 357
          },
          "name": "codeBuildProject",
          "parameters": [
            {
              "docs": {
                "summary": "The Properties of the expected test construct."
              },
              "name": "props",
              "optional": true,
              "type": {
                "primitive": "any"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "aws-cdk-assert.CodeBuildProject"
            }
          }
        },
        {
          "docs": {
            "returns": "",
            "stability": "stable",
            "summary": "Creates a CodeBuild SourceCredentials test construct with the passed Properties."
          },
          "locationInModule": {
            "filename": "src/advanced-template.ts",
            "line": 366
          },
          "name": "codeBuildSourceCredentials",
          "parameters": [
            {
              "docs": {
                "summary": "The Properties of the expected test construct."
              },
              "name": "props",
              "optional": true,
              "type": {
                "primitive": "any"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "aws-cdk-assert.CodeBuildSourceCredentials"
            }
          }
        },
        {
          "docs": {
            "returns": "",
            "stability": "stable",
            "summary": "Creates a CustomResource test construct with the passed Properties."
          },
          "locationInModule": {
            "filename": "src/advanced-template.ts",
            "line": 375
          },
          "name": "customResource",
          "parameters": [
            {
              "docs": {
                "summary": "The Properties of the expected test construct."
              },
              "name": "props",
              "optional": true,
              "type": {
                "primitive": "any"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "aws-cdk-assert.CustomResource"
            }
          }
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Logs the CloudFormation JSON to the console."
          },
          "locationInModule": {
            "filename": "src/advanced-template.ts",
            "line": 198
          },
          "name": "debug"
        },
        {
          "docs": {
            "returns": "",
            "stability": "stable",
            "summary": "Creates a DynamoDB Table test construct with the passed Properties."
          },
          "locationInModule": {
            "filename": "src/advanced-template.ts",
            "line": 384
          },
          "name": "dynamoDBTable",
          "parameters": [
            {
              "docs": {
                "summary": "The Properties of the expected test construct."
              },
              "name": "props",
              "optional": true,
              "type": {
                "primitive": "any"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "aws-cdk-assert.DynamoDBTable"
            }
          }
        },
        {
          "docs": {
            "see": "{@link https://docs.aws.amazon.com/cdk/api/v2/docs/aws-cdk-lib.assertions.Template.html#findwbrconditionslogicalid-props}",
            "stability": "stable",
            "summary": "Returns the Conditions matching with the passed properties."
          },
          "locationInModule": {
            "filename": "src/advanced-template.ts",
            "line": 83
          },
          "name": "findConditions",
          "parameters": [
            {
              "name": "logicalId",
              "type": {
                "primitive": "string"
              }
            },
            {
              "name": "props",
              "optional": true,
              "type": {
                "primitive": "any"
              }
            }
          ],
          "returns": {
            "type": {
              "collection": {
                "elementtype": {
                  "collection": {
                    "elementtype": {
                      "primitive": "any"
                    },
                    "kind": "map"
                  }
                },
                "kind": "map"
              }
            }
          }
        },
        {
          "docs": {
            "see": "{@link https://docs.aws.amazon.com/cdk/api/v2/docs/aws-cdk-lib.assertions.Template.html#findwbrmappingslogicalid-props}",
            "stability": "stable",
            "summary": "Returns the Mapping matching with the passed properties."
          },
          "locationInModule": {
            "filename": "src/advanced-template.ts",
            "line": 91
          },
          "name": "findMappings",
          "parameters": [
            {
              "name": "logicalId",
              "type": {
                "primitive": "string"
              }
            },
            {
              "name": "props",
              "optional": true,
              "type": {
                "primitive": "any"
              }
            }
          ],
          "returns": {
            "type": {
              "collection": {
                "elementtype": {
                  "collection": {
                    "elementtype": {
                      "primitive": "any"
                    },
                    "kind": "map"
                  }
                },
                "kind": "map"
              }
            }
          }
        },
        {
          "docs": {
            "see": "{@link https://docs.aws.amazon.com/cdk/api/v2/docs/aws-cdk-lib.assertions.Template.html#findwbroutputslogicalid-props}",
            "stability": "stable",
            "summary": "Returns the Outputs matching with the passed properties."
          },
          "locationInModule": {
            "filename": "src/advanced-template.ts",
            "line": 99
          },
          "name": "findOutputs",
          "parameters": [
            {
              "name": "logicalId",
              "type": {
                "primitive": "string"
              }
            },
            {
              "name": "props",
              "optional": true,
              "type": {
                "primitive": "any"
              }
            }
          ],
          "returns": {
            "type": {
              "collection": {
                "elementtype": {
                  "collection": {
                    "elementtype": {
                      "primitive": "any"
                    },
                    "kind": "map"
                  }
                },
                "kind": "map"
              }
            }
          }
        },
        {
          "docs": {
            "see": "{@link https://docs.aws.amazon.com/cdk/api/v2/docs/aws-cdk-lib.assertions.Template.html#findwbrparameterslogicalid-props}",
            "stability": "stable",
            "summary": "Returns the Parameters matching with the passed properties."
          },
          "locationInModule": {
            "filename": "src/advanced-template.ts",
            "line": 107
          },
          "name": "findParameters",
          "parameters": [
            {
              "name": "logicalId",
              "type": {
                "primitive": "string"
              }
            },
            {
              "name": "props",
              "optional": true,
              "type": {
                "primitive": "any"
              }
            }
          ],
          "returns": {
            "type": {
              "collection": {
                "elementtype": {
                  "collection": {
                    "elementtype": {
                      "primitive": "any"
                    },
                    "kind": "map"
                  }
                },
                "kind": "map"
              }
            }
          }
        },
        {
          "docs": {
            "see": "{@link https://docs.aws.amazon.com/cdk/api/v2/docs/aws-cdk-lib.assertions.Template.html#findwbrresourcestype-props}",
            "stability": "stable",
            "summary": "Returns the Resources of type matching with the passed properties."
          },
          "locationInModule": {
            "filename": "src/advanced-template.ts",
            "line": 115
          },
          "name": "findResources",
          "parameters": [
            {
              "name": "resourceType",
              "type": {
                "primitive": "string"
              }
            },
            {
              "name": "props",
              "optional": true,
              "type": {
                "primitive": "any"
              }
            }
          ],
          "returns": {
            "type": {
              "collection": {
                "elementtype": {
                  "collection": {
                    "elementtype": {
                      "primitive": "any"
                    },
                    "kind": "map"
                  }
                },
                "kind": "map"
              }
            }
          }
        },
        {
          "docs": {
            "see": "{@link https://docs.aws.amazon.com/cdk/api/v2/docs/aws-cdk-lib.assertions.Template.html#haswbrconditionlogicalid-props}",
            "stability": "stable",
            "summary": "Checks if there is a Condition matching the passed properties."
          },
          "locationInModule": {
            "filename": "src/advanced-template.ts",
            "line": 123
          },
          "name": "hasCondition",
          "parameters": [
            {
              "name": "logicalId",
              "type": {
                "primitive": "string"
              }
            },
            {
              "name": "props",
              "type": {
                "primitive": "any"
              }
            }
          ]
        },
        {
          "docs": {
            "see": "{@link https://docs.aws.amazon.com/cdk/api/v2/docs/aws-cdk-lib.assertions.Template.html#haswbrmappinglogicalid-props}",
            "stability": "stable",
            "summary": "Checks if there is a Mapping matching the passed properties."
          },
          "locationInModule": {
            "filename": "src/advanced-template.ts",
            "line": 131
          },
          "name": "hasMapping",
          "parameters": [
            {
              "name": "logicalId",
              "type": {
                "primitive": "string"
              }
            },
            {
              "name": "props",
              "type": {
                "primitive": "any"
              }
            }
          ]
        },
        {
          "docs": {
            "see": "{@link https://docs.aws.amazon.com/cdk/api/v2/docs/aws-cdk-lib.assertions.Template.html#haswbroutputlogicalid-props}",
            "stability": "stable",
            "summary": "Checks if there is an Output matching the passed properties."
          },
          "locationInModule": {
            "filename": "src/advanced-template.ts",
            "line": 139
          },
          "name": "hasOutput",
          "parameters": [
            {
              "name": "logicalId",
              "type": {
                "primitive": "string"
              }
            },
            {
              "name": "props",
              "type": {
                "primitive": "any"
              }
            }
          ]
        },
        {
          "docs": {
            "see": "{@link https://docs.aws.amazon.com/cdk/api/v2/docs/aws-cdk-lib.assertions.Template.html#haswbrparameterlogicalid-props}",
            "stability": "stable",
            "summary": "Checks if there is a Parameter matching the passed properties."
          },
          "locationInModule": {
            "filename": "src/advanced-template.ts",
            "line": 147
          },
          "name": "hasParameter",
          "parameters": [
            {
              "name": "logicalId",
              "type": {
                "primitive": "string"
              }
            },
            {
              "name": "props",
              "type": {
                "primitive": "any"
              }
            }
          ]
        },
        {
          "docs": {
            "see": "{@link https://docs.aws.amazon.com/cdk/api/v2/docs/aws-cdk-lib.assertions.Template.html#haswbrresourcetype-props}",
            "stability": "stable",
            "summary": "Checks if there is a Resource matching the passed definition."
          },
          "locationInModule": {
            "filename": "src/advanced-template.ts",
            "line": 155
          },
          "name": "hasResource",
          "parameters": [
            {
              "name": "resourceType",
              "type": {
                "primitive": "string"
              }
            },
            {
              "name": "props",
              "type": {
                "primitive": "any"
              }
            }
          ]
        },
        {
          "docs": {
            "see": "{@link https://docs.aws.amazon.com/cdk/api/v2/docs/aws-cdk-lib.assertions.Template.html#haswbrresourcewbrpropertiestype-props}",
            "stability": "stable",
            "summary": "Checks if there is a Resource matching the passed properties."
          },
          "locationInModule": {
            "filename": "src/advanced-template.ts",
            "line": 163
          },
          "name": "hasResourceProperties",
          "parameters": [
            {
              "name": "resourceType",
              "type": {
                "primitive": "string"
              }
            },
            {
              "name": "props",
              "type": {
                "primitive": "any"
              }
            }
          ]
        },
        {
          "docs": {
            "returns": "",
            "stability": "stable",
            "summary": "Creates an IAM Policy test construct with the passed Properties."
          },
          "locationInModule": {
            "filename": "src/advanced-template.ts",
            "line": 402
          },
          "name": "iamPolicy",
          "parameters": [
            {
              "docs": {
                "summary": "The Properties of the expected test construct."
              },
              "name": "props",
              "optional": true,
              "type": {
                "primitive": "any"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "aws-cdk-assert.IAMPolicy"
            }
          }
        },
        {
          "docs": {
            "returns": "",
            "stability": "stable",
            "summary": "Creates an IAM Role test construct with the passed Properties."
          },
          "locationInModule": {
            "filename": "src/advanced-template.ts",
            "line": 393
          },
          "name": "iamRole",
          "parameters": [
            {
              "docs": {
                "summary": "The Properties of the expected test construct."
              },
              "name": "props",
              "optional": true,
              "type": {
                "primitive": "any"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "aws-cdk-assert.IAMRole"
            }
          }
        },
        {
          "docs": {
            "returns": "",
            "stability": "stable",
            "summary": "Creates a Lambda Function test construct with the passed Properties."
          },
          "locationInModule": {
            "filename": "src/advanced-template.ts",
            "line": 411
          },
          "name": "lambdaFunction",
          "parameters": [
            {
              "docs": {
                "summary": "The Properties of the expected test construct."
              },
              "name": "props",
              "optional": true,
              "type": {
                "primitive": "any"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "aws-cdk-assert.LambdaFunction"
            }
          }
        },
        {
          "docs": {
            "returns": "",
            "stability": "stable",
            "summary": "Creates a Lambda Permission test construct with the passed Properties."
          },
          "locationInModule": {
            "filename": "src/advanced-template.ts",
            "line": 420
          },
          "name": "lambdaPermission",
          "parameters": [
            {
              "docs": {
                "summary": "The Properties of the expected test construct."
              },
              "name": "props",
              "optional": true,
              "type": {
                "primitive": "any"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "aws-cdk-assert.LambdaPermission"
            }
          }
        },
        {
          "docs": {
            "returns": "",
            "stability": "stable",
            "summary": "Creates a LogGroup test construct with the passed Properties."
          },
          "locationInModule": {
            "filename": "src/advanced-template.ts",
            "line": 429
          },
          "name": "logGroup",
          "parameters": [
            {
              "docs": {
                "summary": "The Properties of the expected test construct."
              },
              "name": "props",
              "optional": true,
              "type": {
                "primitive": "any"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "aws-cdk-assert.LogGroup"
            }
          }
        },
        {
          "docs": {
            "returns": "",
            "stability": "stable",
            "summary": "Creates a general RemovableResource test construct with the passed type and properties."
          },
          "locationInModule": {
            "filename": "src/advanced-template.ts",
            "line": 222
          },
          "name": "removableResource",
          "parameters": [
            {
              "docs": {
                "summary": "The CloudFormation resource type."
              },
              "name": "resourceType",
              "type": {
                "primitive": "string"
              }
            },
            {
              "docs": {
                "summary": "The properties of the expected test construct."
              },
              "name": "props",
              "optional": true,
              "type": {
                "primitive": "any"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "aws-cdk-assert.RemovableResource"
            }
          }
        },
        {
          "docs": {
            "returns": "",
            "stability": "stable",
            "summary": "Creates a general Resource test construct with the passed type and properties."
          },
          "locationInModule": {
            "filename": "src/advanced-template.ts",
            "line": 212
          },
          "name": "resource",
          "parameters": [
            {
              "docs": {
                "summary": "The CloudFormation resource type."
              },
              "name": "resourceType",
              "type": {
                "primitive": "string"
              }
            },
            {
              "docs": {
                "summary": "The properties of the expected test construct."
              },
              "name": "props",
              "optional": true,
              "type": {
                "primitive": "any"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "aws-cdk-assert.Resource"
            }
          }
        },
        {
          "docs": {
            "see": "{@link https://docs.aws.amazon.com/cdk/api/v2/docs/aws-cdk-lib.assertions.Template.html#resourcewbrcountwbristype-count}",
            "stability": "stable",
            "summary": "Checks if the count of the Resources of type is the passed one."
          },
          "locationInModule": {
            "filename": "src/advanced-template.ts",
            "line": 171
          },
          "name": "resourceCountIs",
          "parameters": [
            {
              "name": "resourceType",
              "type": {
                "primitive": "string"
              }
            },
            {
              "name": "count",
              "type": {
                "primitive": "number"
              }
            }
          ]
        },
        {
          "docs": {
            "returns": "",
            "stability": "stable",
            "summary": "Creates a Route53 HostedZone test construct with the passed Properties."
          },
          "locationInModule": {
            "filename": "src/advanced-template.ts",
            "line": 438
          },
          "name": "route53HostedZone",
          "parameters": [
            {
              "docs": {
                "summary": "The Properties of the expected test construct."
              },
              "name": "props",
              "optional": true,
              "type": {
                "primitive": "any"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "aws-cdk-assert.Route53HostedZone"
            }
          }
        },
        {
          "docs": {
            "returns": "",
            "stability": "stable",
            "summary": "Creates a Route53 RecordSet test construct with the passed Properties."
          },
          "locationInModule": {
            "filename": "src/advanced-template.ts",
            "line": 447
          },
          "name": "route53RecordSet",
          "parameters": [
            {
              "docs": {
                "summary": "The Properties of the expected test construct."
              },
              "name": "props",
              "optional": true,
              "type": {
                "primitive": "any"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "aws-cdk-assert.Route53RecordSet"
            }
          }
        },
        {
          "docs": {
            "returns": "",
            "stability": "stable",
            "summary": "Creates an S3 Bucket test construct with the passed Properties."
          },
          "locationInModule": {
            "filename": "src/advanced-template.ts",
            "line": 456
          },
          "name": "s3Bucket",
          "parameters": [
            {
              "docs": {
                "summary": "The Properties of the expected test construct."
              },
              "name": "props",
              "optional": true,
              "type": {
                "primitive": "any"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "aws-cdk-assert.S3Bucket"
            }
          }
        },
        {
          "docs": {
            "returns": "",
            "stability": "stable",
            "summary": "Creates an S3 Bucket Policy test construct with the passed Properties."
          },
          "locationInModule": {
            "filename": "src/advanced-template.ts",
            "line": 465
          },
          "name": "s3BucketPolicy",
          "parameters": [
            {
              "docs": {
                "summary": "The Properties of the expected test construct."
              },
              "name": "props",
              "optional": true,
              "type": {
                "primitive": "any"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "aws-cdk-assert.S3BucketPolicy"
            }
          }
        },
        {
          "docs": {
            "returns": "",
            "stability": "stable",
            "summary": "Creates a SecretsManager Secret test construct with the passed Properties."
          },
          "locationInModule": {
            "filename": "src/advanced-template.ts",
            "line": 474
          },
          "name": "secret",
          "parameters": [
            {
              "docs": {
                "summary": "The Properties of the expected test construct."
              },
              "name": "props",
              "optional": true,
              "type": {
                "primitive": "any"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "aws-cdk-assert.Secret"
            }
          }
        },
        {
          "docs": {
            "returns": "",
            "stability": "stable",
            "summary": "Creates an SSM Parameter test construct with the passed Properties."
          },
          "locationInModule": {
            "filename": "src/advanced-template.ts",
            "line": 483
          },
          "name": "ssmParameter",
          "parameters": [
            {
              "docs": {
                "summary": "The Properties of the expected test construct."
              },
              "name": "props",
              "optional": true,
              "type": {
                "primitive": "any"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "aws-cdk-assert.SSMParameter"
            }
          }
        },
        {
          "docs": {
            "see": "{@link https://docs.aws.amazon.com/cdk/api/v2/docs/aws-cdk-lib.assertions.Template.html#templatewbrmatchesexpected}",
            "stability": "stable",
            "summary": "Checks if the template matches the passed CloudFormation JSON template."
          },
          "locationInModule": {
            "filename": "src/advanced-template.ts",
            "line": 179
          },
          "name": "templateMatches",
          "parameters": [
            {
              "name": "expected",
              "type": {
                "union": {
                  "types": [
                    {
                      "fqn": "aws-cdk-assert.AdvancedTemplate"
                    },
                    {
                      "collection": {
                        "elementtype": {
                          "collection": {
                            "elementtype": {
                              "primitive": "any"
                            },
                            "kind": "map"
                          }
                        },
                        "kind": "map"
                      }
                    }
                  ]
                }
              }
            }
          ]
        },
        {
          "docs": {
            "see": "{@link https://docs.aws.amazon.com/cdk/api/v2/docs/aws-cdk-lib.assertions.Template.html#towbrjson}",
            "stability": "stable",
            "summary": "Returns the CloudFormation JSON template of the current one."
          },
          "locationInModule": {
            "filename": "src/advanced-template.ts",
            "line": 191
          },
          "name": "toJSON",
          "returns": {
            "type": {
              "collection": {
                "elementtype": {
                  "primitive": "any"
                },
                "kind": "map"
              }
            }
          }
        },
        {
          "docs": {
            "returns": "",
            "stability": "stable",
            "summary": "Creates a WAF v2 WebACL test construct with the passed Properties."
          },
          "locationInModule": {
            "filename": "src/advanced-template.ts",
            "line": 492
          },
          "name": "wafV2WebACL",
          "parameters": [
            {
              "docs": {
                "summary": "The Properties of the expected test construct."
              },
              "name": "props",
              "optional": true,
              "type": {
                "primitive": "any"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "aws-cdk-assert.WafV2WebACL"
            }
          }
        }
      ],
      "name": "AdvancedTemplate",
      "properties": [
        {
          "docs": {
            "custom": {
              "member": "The region of the stack"
            },
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/advanced-template.ts",
            "line": 33
          },
          "name": "region",
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "src/advanced-template:AdvancedTemplate"
    },
    "aws-cdk-assert.ApiGatewayAccount": {
      "assembly": "aws-cdk-assert",
      "base": "aws-cdk-assert.Resource",
      "docs": {
        "see": "{@link https://docs.aws.amazon.com/cdk/api/v2/docs/aws-cdk-lib.aws_apigateway.CfnAccount.html}",
        "stability": "stable",
        "summary": "A test construct representing an API Gateway Account (IAM Role for CloudWatch)."
      },
      "fqn": "aws-cdk-assert.ApiGatewayAccount",
      "initializer": {
        "docs": {
          "stability": "stable"
        },
        "locationInModule": {
          "filename": "src/apigateway.ts",
          "line": 43
        },
        "parameters": [
          {
            "name": "template",
            "type": {
              "fqn": "aws-cdk-assert.AdvancedTemplate"
            }
          },
          {
            "name": "props",
            "optional": true,
            "type": {
              "primitive": "any"
            }
          }
        ]
      },
      "kind": "class",
      "locationInModule": {
        "filename": "src/apigateway.ts",
        "line": 42
      },
      "methods": [
        {
          "docs": {
            "returns": "",
            "stability": "stable",
            "summary": "Sets a matching IAM Role for CloudWatch."
          },
          "locationInModule": {
            "filename": "src/apigateway.ts",
            "line": 52
          },
          "name": "withCloudWatchRole",
          "parameters": [
            {
              "docs": {
                "summary": "The IAM Role test construct."
              },
              "name": "role",
              "type": {
                "fqn": "aws-cdk-assert.IAMRole"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "aws-cdk-assert.ApiGatewayAccount"
            }
          }
        }
      ],
      "name": "ApiGatewayAccount",
      "symbolId": "src/apigateway:ApiGatewayAccount"
    },
    "aws-cdk-assert.ApiGatewayApiKey": {
      "assembly": "aws-cdk-assert",
      "base": "aws-cdk-assert.Resource",
      "docs": {
        "see": "{@link https://docs.aws.amazon.com/cdk/api/v2/docs/aws-cdk-lib.aws_apigateway.CfnApiKey.html}",
        "stability": "stable",
        "summary": "A test construct for an API Gateway API Key."
      },
      "fqn": "aws-cdk-assert.ApiGatewayApiKey",
      "initializer": {
        "docs": {
          "stability": "stable"
        },
        "locationInModule": {
          "filename": "src/apigateway.ts",
          "line": 373
        },
        "parameters": [
          {
            "name": "template",
            "type": {
              "fqn": "aws-cdk-assert.AdvancedTemplate"
            }
          },
          {
            "name": "props",
            "optional": true,
            "type": {
              "primitive": "any"
            }
          }
        ]
      },
      "kind": "class",
      "locationInModule": {
        "filename": "src/apigateway.ts",
        "line": 370
      },
      "methods": [
        {
          "docs": {
            "stability": "stable",
            "summary": "Sets the matching Rest API and Stage the API Key belongs to."
          },
          "locationInModule": {
            "filename": "src/apigateway.ts",
            "line": 393
          },
          "name": "forApiAndStage",
          "parameters": [
            {
              "docs": {
                "summary": "The Rest API to match."
              },
              "name": "api",
              "type": {
                "fqn": "aws-cdk-assert.ApiGatewayRestApi"
              }
            },
            {
              "docs": {
                "summary": "The Stage to match."
              },
              "name": "stage",
              "type": {
                "fqn": "aws-cdk-assert.ApiGatewayStage"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "aws-cdk-assert.ApiGatewayApiKey"
            }
          }
        },
        {
          "docs": {
            "returns": "",
            "stability": "stable",
            "summary": "Sets a matching name for the API Key."
          },
          "locationInModule": {
            "filename": "src/apigateway.ts",
            "line": 383
          },
          "name": "withName",
          "parameters": [
            {
              "docs": {
                "summary": "The whole or a partial API Key name to match."
              },
              "name": "name",
              "type": {
                "primitive": "string"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "aws-cdk-assert.ApiGatewayApiKey"
            }
          }
        },
        {
          "docs": {
            "returns": "",
            "stability": "stable",
            "summary": "Sets a matching value as a Secret for the API Key."
          },
          "locationInModule": {
            "filename": "src/apigateway.ts",
            "line": 419
          },
          "name": "withSecretValue",
          "parameters": [
            {
              "docs": {
                "summary": "The SecretsManager Secret to match."
              },
              "name": "secret",
              "type": {
                "fqn": "aws-cdk-assert.Secret"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "aws-cdk-assert.ApiGatewayApiKey"
            }
          }
        },
        {
          "docs": {
            "returns": "",
            "stability": "stable",
            "summary": "Sets a matching value for the API Key."
          },
          "locationInModule": {
            "filename": "src/apigateway.ts",
            "line": 407
          },
          "name": "withValue",
          "parameters": [
            {
              "docs": {
                "summary": "The whole or a partial value, or a matcher to match."
              },
              "name": "value",
              "type": {
                "primitive": "any"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "aws-cdk-assert.ApiGatewayApiKey"
            }
          }
        }
      ],
      "name": "ApiGatewayApiKey",
      "symbolId": "src/apigateway:ApiGatewayApiKey"
    },
    "aws-cdk-assert.ApiGatewayBasePathMapping": {
      "assembly": "aws-cdk-assert",
      "base": "aws-cdk-assert.Resource",
      "docs": {
        "see": "{@link https://docs.aws.amazon.com/cdk/api/v2/docs/aws-cdk-lib.aws_apigateway.CfnBasePathMapping.html}",
        "stability": "stable",
        "summary": "A test construct for an API Gateway Base Path Mapping (for Domain Name)."
      },
      "fqn": "aws-cdk-assert.ApiGatewayBasePathMapping",
      "initializer": {
        "docs": {
          "stability": "stable"
        },
        "locationInModule": {
          "filename": "src/apigateway.ts",
          "line": 331
        },
        "parameters": [
          {
            "name": "template",
            "type": {
              "fqn": "aws-cdk-assert.AdvancedTemplate"
            }
          },
          {
            "name": "props",
            "optional": true,
            "type": {
              "primitive": "any"
            }
          }
        ]
      },
      "kind": "class",
      "locationInModule": {
        "filename": "src/apigateway.ts",
        "line": 330
      },
      "methods": [
        {
          "docs": {
            "returns": "",
            "stability": "stable",
            "summary": "Sets the matching Rest API the mapping belongs to."
          },
          "locationInModule": {
            "filename": "src/apigateway.ts",
            "line": 340
          },
          "name": "ofApi",
          "parameters": [
            {
              "docs": {
                "summary": "The Rest API test construct."
              },
              "name": "api",
              "type": {
                "fqn": "aws-cdk-assert.ApiGatewayRestApi"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "aws-cdk-assert.ApiGatewayBasePathMapping"
            }
          }
        },
        {
          "docs": {
            "returns": "",
            "stability": "stable",
            "summary": "Sets the matching Domain Name the mapping belongs to."
          },
          "locationInModule": {
            "filename": "src/apigateway.ts",
            "line": 350
          },
          "name": "ofDomainName",
          "parameters": [
            {
              "docs": {
                "summary": "The Domain Name test construct."
              },
              "name": "domain",
              "type": {
                "fqn": "aws-cdk-assert.ApiGatewayDomain"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "aws-cdk-assert.ApiGatewayBasePathMapping"
            }
          }
        },
        {
          "docs": {
            "returns": "",
            "stability": "stable",
            "summary": "Sets the matching State the mapping belongs to."
          },
          "locationInModule": {
            "filename": "src/apigateway.ts",
            "line": 360
          },
          "name": "toStage",
          "parameters": [
            {
              "docs": {
                "summary": "The Stage test construct."
              },
              "name": "stage",
              "type": {
                "fqn": "aws-cdk-assert.ApiGatewayStage"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "aws-cdk-assert.ApiGatewayBasePathMapping"
            }
          }
        }
      ],
      "name": "ApiGatewayBasePathMapping",
      "symbolId": "src/apigateway:ApiGatewayBasePathMapping"
    },
    "aws-cdk-assert.ApiGatewayDeployment": {
      "assembly": "aws-cdk-assert",
      "base": "aws-cdk-assert.Resource",
      "docs": {
        "see": "{@link https://docs.aws.amazon.com/cdk/api/v2/docs/aws-cdk-lib.aws_apigateway.CfnDeployment.html}",
        "stability": "stable",
        "summary": "A test construct representing an API Gateway API Deployment."
      },
      "fqn": "aws-cdk-assert.ApiGatewayDeployment",
      "initializer": {
        "docs": {
          "stability": "stable"
        },
        "locationInModule": {
          "filename": "src/apigateway.ts",
          "line": 63
        },
        "parameters": [
          {
            "name": "template",
            "type": {
              "fqn": "aws-cdk-assert.AdvancedTemplate"
            }
          },
          {
            "name": "props",
            "optional": true,
            "type": {
              "primitive": "any"
            }
          }
        ]
      },
      "kind": "class",
      "locationInModule": {
        "filename": "src/apigateway.ts",
        "line": 62
      },
      "methods": [
        {
          "docs": {
            "returns": "",
            "stability": "stable",
            "summary": "Sets the matching Rest API the Deployment belongs to."
          },
          "locationInModule": {
            "filename": "src/apigateway.ts",
            "line": 72
          },
          "name": "ofApi",
          "parameters": [
            {
              "docs": {
                "summary": "The Rest API test construct."
              },
              "name": "api",
              "type": {
                "fqn": "aws-cdk-assert.ApiGatewayRestApi"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "aws-cdk-assert.ApiGatewayDeployment"
            }
          }
        }
      ],
      "name": "ApiGatewayDeployment",
      "symbolId": "src/apigateway:ApiGatewayDeployment"
    },
    "aws-cdk-assert.ApiGatewayDomain": {
      "assembly": "aws-cdk-assert",
      "base": "aws-cdk-assert.Resource",
      "docs": {
        "see": "{@link https://docs.aws.amazon.com/cdk/api/v2/docs/aws-cdk-lib.aws_apigateway.CfnDomainName.html}",
        "stability": "stable",
        "summary": "A test construct for an API Gateway Domain Name."
      },
      "fqn": "aws-cdk-assert.ApiGatewayDomain",
      "initializer": {
        "docs": {
          "stability": "stable"
        },
        "locationInModule": {
          "filename": "src/apigateway.ts",
          "line": 274
        },
        "parameters": [
          {
            "name": "template",
            "type": {
              "fqn": "aws-cdk-assert.AdvancedTemplate"
            }
          },
          {
            "name": "props",
            "optional": true,
            "type": {
              "primitive": "any"
            }
          }
        ]
      },
      "kind": "class",
      "locationInModule": {
        "filename": "src/apigateway.ts",
        "line": 273
      },
      "methods": [
        {
          "docs": {
            "returns": "",
            "stability": "stable",
            "summary": "Sets a matching Certificate for the endpoint."
          },
          "locationInModule": {
            "filename": "src/apigateway.ts",
            "line": 316
          },
          "name": "withCertificate",
          "parameters": [
            {
              "docs": {
                "summary": "The certificate (or another resource) to match."
              },
              "name": "resource",
              "type": {
                "fqn": "aws-cdk-assert.Resource"
              }
            },
            {
              "docs": {
                "summary": "Whether the certificate is regional or not."
              },
              "name": "regional",
              "optional": true,
              "type": {
                "primitive": "boolean"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "aws-cdk-assert.ApiGatewayDomain"
            }
          }
        },
        {
          "docs": {
            "returns": "",
            "stability": "stable",
            "summary": "Sets a matching domain name."
          },
          "locationInModule": {
            "filename": "src/apigateway.ts",
            "line": 283
          },
          "name": "withDomainName",
          "parameters": [
            {
              "docs": {
                "summary": "The whole or a partial domain name to match."
              },
              "name": "domain",
              "type": {
                "primitive": "string"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "aws-cdk-assert.ApiGatewayDomain"
            }
          }
        },
        {
          "docs": {
            "returns": "",
            "stability": "stable",
            "summary": "Sets a matching Endpoint Type."
          },
          "locationInModule": {
            "filename": "src/apigateway.ts",
            "line": 303
          },
          "name": "withEndpointType",
          "parameters": [
            {
              "docs": {
                "summary": "The endpoint type to match."
              },
              "name": "endpointType",
              "type": {
                "fqn": "aws-cdk-lib.aws_apigateway.EndpointType"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "aws-cdk-assert.ApiGatewayDomain"
            }
          }
        },
        {
          "docs": {
            "returns": "",
            "stability": "stable",
            "summary": "Sets a matching Security Policy."
          },
          "locationInModule": {
            "filename": "src/apigateway.ts",
            "line": 293
          },
          "name": "withSecurityPolicy",
          "parameters": [
            {
              "docs": {
                "summary": "The security policy to match."
              },
              "name": "policy",
              "type": {
                "fqn": "aws-cdk-lib.aws_apigateway.SecurityPolicy"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "aws-cdk-assert.ApiGatewayDomain"
            }
          }
        }
      ],
      "name": "ApiGatewayDomain",
      "symbolId": "src/apigateway:ApiGatewayDomain"
    },
    "aws-cdk-assert.ApiGatewayMethod": {
      "assembly": "aws-cdk-assert",
      "base": "aws-cdk-assert.Resource",
      "docs": {
        "see": "{@link https://docs.aws.amazon.com/cdk/api/v2/docs/aws-cdk-lib.aws_apigateway.CfnMethod.html}",
        "stability": "stable",
        "summary": "A test construct for an API Gateway API Method."
      },
      "fqn": "aws-cdk-assert.ApiGatewayMethod",
      "initializer": {
        "docs": {
          "stability": "stable"
        },
        "locationInModule": {
          "filename": "src/apigateway.ts",
          "line": 135
        },
        "parameters": [
          {
            "name": "template",
            "type": {
              "fqn": "aws-cdk-assert.AdvancedTemplate"
            }
          },
          {
            "name": "props",
            "optional": true,
            "type": {
              "primitive": "any"
            }
          }
        ]
      },
      "kind": "class",
      "locationInModule": {
        "filename": "src/apigateway.ts",
        "line": 134
      },
      "methods": [
        {
          "docs": {
            "returns": "",
            "stability": "stable",
            "summary": "Sets the matching Rest API the Deployment belongs to."
          },
          "locationInModule": {
            "filename": "src/apigateway.ts",
            "line": 144
          },
          "name": "ofApi",
          "parameters": [
            {
              "docs": {
                "summary": "The Rest API test construct."
              },
              "name": "api",
              "type": {
                "fqn": "aws-cdk-assert.ApiGatewayRestApi"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "aws-cdk-assert.ApiGatewayMethod"
            }
          }
        },
        {
          "docs": {
            "returns": "",
            "stability": "stable",
            "summary": "Sets the matching resource the method belongs to."
          },
          "locationInModule": {
            "filename": "src/apigateway.ts",
            "line": 164
          },
          "name": "ofResource",
          "parameters": [
            {
              "docs": {
                "summary": "The Rest API or the API Gateway Resource test construct to match."
              },
              "name": "resource",
              "type": {
                "union": {
                  "types": [
                    {
                      "fqn": "aws-cdk-assert.ApiGatewayResource"
                    },
                    {
                      "fqn": "aws-cdk-assert.ApiGatewayRestApi"
                    }
                  ]
                }
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "aws-cdk-assert.ApiGatewayMethod"
            }
          }
        },
        {
          "docs": {
            "returns": "",
            "stability": "stable",
            "summary": "Sets the matching authorization type for the method."
          },
          "locationInModule": {
            "filename": "src/apigateway.ts",
            "line": 178
          },
          "name": "withAuthorization",
          "parameters": [
            {
              "docs": {
                "summary": "The authorization type to match."
              },
              "name": "authorizationType",
              "type": {
                "fqn": "aws-cdk-lib.aws_apigateway.AuthorizationType"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "aws-cdk-assert.ApiGatewayMethod"
            }
          }
        },
        {
          "docs": {
            "returns": "",
            "stability": "stable",
            "summary": "Sets a matching HTTP integration."
          },
          "locationInModule": {
            "filename": "src/apigateway.ts",
            "line": 208
          },
          "name": "withHttpIntegration",
          "parameters": [
            {
              "docs": {
                "summary": "The HTTP method to match."
              },
              "name": "method",
              "type": {
                "fqn": "aws-cdk-lib.aws_events.HttpMethod"
              }
            },
            {
              "docs": {
                "summary": "The integration type to match."
              },
              "name": "integrationType",
              "type": {
                "fqn": "aws-cdk-lib.aws_apigateway.IntegrationType"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "aws-cdk-assert.ApiGatewayMethod"
            }
          }
        },
        {
          "docs": {
            "returns": "",
            "stability": "stable",
            "summary": "Sets a matching HTTP method."
          },
          "locationInModule": {
            "filename": "src/apigateway.ts",
            "line": 154
          },
          "name": "withHttpMethod",
          "parameters": [
            {
              "docs": {
                "summary": "The HTTP method to match."
              },
              "name": "method",
              "type": {
                "fqn": "aws-cdk-lib.aws_events.HttpMethod"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "aws-cdk-assert.ApiGatewayMethod"
            }
          }
        },
        {
          "docs": {
            "returns": "",
            "stability": "stable",
            "summary": "Sets matching mock integration type."
          },
          "locationInModule": {
            "filename": "src/apigateway.ts",
            "line": 195
          },
          "name": "withMockIntegration",
          "returns": {
            "type": {
              "fqn": "aws-cdk-assert.ApiGatewayMethod"
            }
          }
        },
        {
          "docs": {
            "returns": "",
            "stability": "stable",
            "summary": "Sets matching to no authorization."
          },
          "locationInModule": {
            "filename": "src/apigateway.ts",
            "line": 187
          },
          "name": "withNoAuthorization",
          "returns": {
            "type": {
              "fqn": "aws-cdk-assert.ApiGatewayMethod"
            }
          }
        }
      ],
      "name": "ApiGatewayMethod",
      "symbolId": "src/apigateway:ApiGatewayMethod"
    },
    "aws-cdk-assert.ApiGatewayResource": {
      "assembly": "aws-cdk-assert",
      "base": "aws-cdk-assert.Resource",
      "docs": {
        "see": "{@link https://docs.aws.amazon.com/cdk/api/v2/docs/aws-cdk-lib.aws_apigateway.CfnResource.html}",
        "stability": "stable",
        "summary": "A test construct for an API Gateway Resource."
      },
      "fqn": "aws-cdk-assert.ApiGatewayResource",
      "initializer": {
        "docs": {
          "stability": "stable"
        },
        "locationInModule": {
          "filename": "src/apigateway.ts",
          "line": 222
        },
        "parameters": [
          {
            "name": "template",
            "type": {
              "fqn": "aws-cdk-assert.AdvancedTemplate"
            }
          },
          {
            "name": "props",
            "optional": true,
            "type": {
              "primitive": "any"
            }
          }
        ]
      },
      "kind": "class",
      "locationInModule": {
        "filename": "src/apigateway.ts",
        "line": 221
      },
      "methods": [
        {
          "docs": {
            "returns": "",
            "stability": "stable",
            "summary": "Sets a matching path for the resource as a proxy."
          },
          "locationInModule": {
            "filename": "src/apigateway.ts",
            "line": 264
          },
          "name": "asProxy",
          "returns": {
            "type": {
              "fqn": "aws-cdk-assert.ApiGatewayResource"
            }
          }
        },
        {
          "docs": {
            "returns": "",
            "stability": "stable",
            "summary": "Sets the matching Rest API the Deployment belongs to."
          },
          "locationInModule": {
            "filename": "src/apigateway.ts",
            "line": 231
          },
          "name": "ofApi",
          "parameters": [
            {
              "docs": {
                "summary": "The Rest API test construct."
              },
              "name": "api",
              "type": {
                "fqn": "aws-cdk-assert.ApiGatewayRestApi"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "aws-cdk-assert.ApiGatewayResource"
            }
          }
        },
        {
          "docs": {
            "returns": "",
            "stability": "stable",
            "summary": "Sets the matching parent resource."
          },
          "locationInModule": {
            "filename": "src/apigateway.ts",
            "line": 241
          },
          "name": "ofParent",
          "parameters": [
            {
              "docs": {
                "summary": "The parent Rest API or other Resource test construct."
              },
              "name": "parent",
              "type": {
                "union": {
                  "types": [
                    {
                      "fqn": "aws-cdk-assert.ApiGatewayResource"
                    },
                    {
                      "fqn": "aws-cdk-assert.ApiGatewayRestApi"
                    }
                  ]
                }
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "aws-cdk-assert.ApiGatewayResource"
            }
          }
        },
        {
          "docs": {
            "returns": "",
            "stability": "stable",
            "summary": "Sets a matching path for the resource."
          },
          "locationInModule": {
            "filename": "src/apigateway.ts",
            "line": 255
          },
          "name": "withPath",
          "parameters": [
            {
              "docs": {
                "summary": "The whole or a partial path to match."
              },
              "name": "path",
              "type": {
                "primitive": "string"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "aws-cdk-assert.ApiGatewayResource"
            }
          }
        }
      ],
      "name": "ApiGatewayResource",
      "symbolId": "src/apigateway:ApiGatewayResource"
    },
    "aws-cdk-assert.ApiGatewayRestApi": {
      "assembly": "aws-cdk-assert",
      "base": "aws-cdk-assert.Resource",
      "docs": {
        "see": "{@link https://docs.aws.amazon.com/cdk/api/v2/docs/aws-cdk-lib.aws_apigateway.CfnRestApi.html}",
        "stability": "stable",
        "summary": "A test construct representing an API Gateway Rest API."
      },
      "fqn": "aws-cdk-assert.ApiGatewayRestApi",
      "initializer": {
        "docs": {
          "stability": "stable"
        },
        "locationInModule": {
          "filename": "src/apigateway.ts",
          "line": 16
        },
        "parameters": [
          {
            "name": "template",
            "type": {
              "fqn": "aws-cdk-assert.AdvancedTemplate"
            }
          },
          {
            "name": "props",
            "optional": true,
            "type": {
              "primitive": "any"
            }
          }
        ]
      },
      "kind": "class",
      "locationInModule": {
        "filename": "src/apigateway.ts",
        "line": 15
      },
      "methods": [
        {
          "docs": {
            "returns": "",
            "stability": "stable",
            "summary": "Sets a matching name of the Rest API."
          },
          "locationInModule": {
            "filename": "src/apigateway.ts",
            "line": 32
          },
          "name": "withName",
          "parameters": [
            {
              "docs": {
                "summary": "The whole or a partial name to match."
              },
              "name": "name",
              "type": {
                "primitive": "string"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "aws-cdk-assert.ApiGatewayRestApi"
            }
          }
        }
      ],
      "name": "ApiGatewayRestApi",
      "properties": [
        {
          "docs": {
            "stability": "stable",
            "summary": "Creates a matcher for the RootResourceID of the Rest API."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/apigateway.ts",
            "line": 23
          },
          "name": "resourceId",
          "type": {
            "fqn": "aws-cdk-lib.assertions.Matcher"
          }
        }
      ],
      "symbolId": "src/apigateway:ApiGatewayRestApi"
    },
    "aws-cdk-assert.ApiGatewayStage": {
      "assembly": "aws-cdk-assert",
      "base": "aws-cdk-assert.Resource",
      "docs": {
        "see": "{@link https://docs.aws.amazon.com/cdk/api/v2/docs/aws-cdk-lib.aws_apigateway.CfnStage.html}",
        "stability": "stable",
        "summary": "A test construct representing an API Gateway API Stage."
      },
      "fqn": "aws-cdk-assert.ApiGatewayStage",
      "initializer": {
        "docs": {
          "stability": "stable"
        },
        "locationInModule": {
          "filename": "src/apigateway.ts",
          "line": 83
        },
        "parameters": [
          {
            "name": "template",
            "type": {
              "fqn": "aws-cdk-assert.AdvancedTemplate"
            }
          },
          {
            "name": "props",
            "optional": true,
            "type": {
              "primitive": "any"
            }
          }
        ]
      },
      "kind": "class",
      "locationInModule": {
        "filename": "src/apigateway.ts",
        "line": 82
      },
      "methods": [
        {
          "docs": {
            "returns": "",
            "stability": "stable",
            "summary": "Sets the matching Rest API the Deployment belongs to."
          },
          "locationInModule": {
            "filename": "src/apigateway.ts",
            "line": 92
          },
          "name": "ofApi",
          "parameters": [
            {
              "docs": {
                "summary": "The Rest API test construct."
              },
              "name": "api",
              "type": {
                "fqn": "aws-cdk-assert.ApiGatewayRestApi"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "aws-cdk-assert.ApiGatewayStage"
            }
          }
        },
        {
          "docs": {
            "returns": "",
            "stability": "stable",
            "summary": "Sets the matching Deployment the Stage belongs to."
          },
          "locationInModule": {
            "filename": "src/apigateway.ts",
            "line": 102
          },
          "name": "ofDeployment",
          "parameters": [
            {
              "docs": {
                "summary": "The Deployment test construct."
              },
              "name": "deployment",
              "type": {
                "fqn": "aws-cdk-assert.ApiGatewayDeployment"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "aws-cdk-assert.ApiGatewayStage"
            }
          }
        },
        {
          "docs": {
            "returns": "",
            "stability": "stable",
            "summary": "Sets the matching log group."
          },
          "locationInModule": {
            "filename": "src/apigateway.ts",
            "line": 122
          },
          "name": "withLogGroup",
          "parameters": [
            {
              "docs": {
                "summary": "The LogGroup test construct."
              },
              "name": "group",
              "type": {
                "fqn": "aws-cdk-assert.LogGroup"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "aws-cdk-assert.ApiGatewayStage"
            }
          }
        },
        {
          "docs": {
            "returns": "",
            "stability": "stable",
            "summary": "Sets a matching stage name."
          },
          "locationInModule": {
            "filename": "src/apigateway.ts",
            "line": 112
          },
          "name": "withName",
          "parameters": [
            {
              "docs": {
                "summary": "The whole or a partial stage name to match."
              },
              "name": "name",
              "type": {
                "primitive": "string"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "aws-cdk-assert.ApiGatewayStage"
            }
          }
        }
      ],
      "name": "ApiGatewayStage",
      "symbolId": "src/apigateway:ApiGatewayStage"
    },
    "aws-cdk-assert.ApiGatewayUsagePlan": {
      "assembly": "aws-cdk-assert",
      "base": "aws-cdk-assert.Resource",
      "docs": {
        "see": "{@link https://docs.aws.amazon.com/cdk/api/v2/docs/aws-cdk-lib.aws_apigateway.CfnUsagePlan.html}",
        "stability": "stable",
        "summary": "A test construct for an API Gateway Usage Plan."
      },
      "fqn": "aws-cdk-assert.ApiGatewayUsagePlan",
      "initializer": {
        "docs": {
          "stability": "stable"
        },
        "locationInModule": {
          "filename": "src/apigateway.ts",
          "line": 431
        },
        "parameters": [
          {
            "name": "template",
            "type": {
              "fqn": "aws-cdk-assert.AdvancedTemplate"
            }
          },
          {
            "name": "props",
            "optional": true,
            "type": {
              "primitive": "any"
            }
          }
        ]
      },
      "kind": "class",
      "locationInModule": {
        "filename": "src/apigateway.ts",
        "line": 428
      },
      "methods": [
        {
          "docs": {
            "stability": "stable",
            "summary": "Sets the matching Rest API and Stage the API Key belongs to."
          },
          "locationInModule": {
            "filename": "src/apigateway.ts",
            "line": 441
          },
          "name": "withApiStage",
          "parameters": [
            {
              "docs": {
                "summary": "The Rest API to match."
              },
              "name": "api",
              "type": {
                "fqn": "aws-cdk-assert.ApiGatewayRestApi"
              }
            },
            {
              "docs": {
                "summary": "The Stage to match."
              },
              "name": "stage",
              "type": {
                "fqn": "aws-cdk-assert.ApiGatewayStage"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "aws-cdk-assert.ApiGatewayUsagePlan"
            }
          }
        }
      ],
      "name": "ApiGatewayUsagePlan",
      "symbolId": "src/apigateway:ApiGatewayUsagePlan"
    },
    "aws-cdk-assert.ApiGatewayUsagePlanKey": {
      "assembly": "aws-cdk-assert",
      "base": "aws-cdk-assert.Resource",
      "docs": {
        "see": "{@link https://docs.aws.amazon.com/cdk/api/v2/docs/aws-cdk-lib.aws_apigateway.CfnUsagePlanKey.html}",
        "stability": "stable",
        "summary": "A test construct for an API Gateway Usage Plan Key."
      },
      "fqn": "aws-cdk-assert.ApiGatewayUsagePlanKey",
      "initializer": {
        "docs": {
          "stability": "stable"
        },
        "locationInModule": {
          "filename": "src/apigateway.ts",
          "line": 456
        },
        "parameters": [
          {
            "name": "template",
            "type": {
              "fqn": "aws-cdk-assert.AdvancedTemplate"
            }
          },
          {
            "name": "props",
            "optional": true,
            "type": {
              "primitive": "any"
            }
          }
        ]
      },
      "kind": "class",
      "locationInModule": {
        "filename": "src/apigateway.ts",
        "line": 455
      },
      "methods": [
        {
          "docs": {
            "returns": "",
            "stability": "stable",
            "summary": "Sets the matching Usage Plan the Key belongs to."
          },
          "locationInModule": {
            "filename": "src/apigateway.ts",
            "line": 465
          },
          "name": "ofUsagePlan",
          "parameters": [
            {
              "docs": {
                "summary": "The Usage Plan to match."
              },
              "name": "plan",
              "type": {
                "fqn": "aws-cdk-assert.ApiGatewayUsagePlan"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "aws-cdk-assert.ApiGatewayUsagePlanKey"
            }
          }
        },
        {
          "docs": {
            "returns": "",
            "stability": "stable",
            "summary": "Sets the matching API Key the Usage Plan associated with."
          },
          "locationInModule": {
            "filename": "src/apigateway.ts",
            "line": 475
          },
          "name": "withApiKey",
          "parameters": [
            {
              "docs": {
                "summary": "The API Key to match."
              },
              "name": "apiKey",
              "type": {
                "fqn": "aws-cdk-assert.ApiGatewayApiKey"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "aws-cdk-assert.ApiGatewayUsagePlanKey"
            }
          }
        }
      ],
      "name": "ApiGatewayUsagePlanKey",
      "symbolId": "src/apigateway:ApiGatewayUsagePlanKey"
    },
    "aws-cdk-assert.CloudFormationCustomResource": {
      "assembly": "aws-cdk-assert",
      "base": "aws-cdk-assert.RemovableResource",
      "docs": {
        "see": "{@link https://docs.aws.amazon.com/cdk/api/v2/docs/aws-cdk-lib.aws_cloudformation.CfnCustomResource.html}",
        "stability": "stable",
        "summary": "A test construct for a CloudFormation Custom Resource."
      },
      "fqn": "aws-cdk-assert.CloudFormationCustomResource",
      "initializer": {
        "docs": {
          "stability": "stable"
        },
        "locationInModule": {
          "filename": "src/cloudformation.ts",
          "line": 10
        },
        "parameters": [
          {
            "name": "template",
            "type": {
              "fqn": "aws-cdk-assert.AdvancedTemplate"
            }
          },
          {
            "name": "props",
            "optional": true,
            "type": {
              "primitive": "any"
            }
          }
        ]
      },
      "kind": "class",
      "locationInModule": {
        "filename": "src/cloudformation.ts",
        "line": 9
      },
      "methods": [
        {
          "docs": {
            "returns": "",
            "stability": "stable",
            "summary": "Sets a matching service token to another test construct resource."
          },
          "locationInModule": {
            "filename": "src/cloudformation.ts",
            "line": 19
          },
          "name": "withServiceToken",
          "parameters": [
            {
              "docs": {
                "summary": "The test construct resource."
              },
              "name": "resource",
              "type": {
                "fqn": "aws-cdk-assert.Resource"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "aws-cdk-assert.CloudFormationCustomResource"
            }
          }
        }
      ],
      "name": "CloudFormationCustomResource",
      "symbolId": "src/cloudformation:CloudFormationCustomResource"
    },
    "aws-cdk-assert.CloudFrontDistribution": {
      "assembly": "aws-cdk-assert",
      "base": "aws-cdk-assert.RemovableResource",
      "docs": {
        "see": "{@link https://docs.aws.amazon.com/cdk/api/v2/docs/aws-cdk-lib.aws_cloudfront.CfnDistribution.html}",
        "stability": "stable",
        "summary": "A test construct for a CloudFront Distribution."
      },
      "fqn": "aws-cdk-assert.CloudFrontDistribution",
      "initializer": {
        "docs": {
          "stability": "stable"
        },
        "locationInModule": {
          "filename": "src/cloudfront.ts",
          "line": 34
        },
        "parameters": [
          {
            "name": "template",
            "type": {
              "fqn": "aws-cdk-assert.AdvancedTemplate"
            }
          },
          {
            "name": "props",
            "optional": true,
            "type": {
              "primitive": "any"
            }
          }
        ]
      },
      "kind": "class",
      "locationInModule": {
        "filename": "src/cloudfront.ts",
        "line": 33
      },
      "methods": [
        {
          "docs": {
            "returns": "",
            "stability": "stable",
            "summary": "Sets matching aliases for the distribution."
          },
          "locationInModule": {
            "filename": "src/cloudfront.ts",
            "line": 44
          },
          "name": "withAliases",
          "parameters": [
            {
              "docs": {
                "summary": "The whole or a partial alias array."
              },
              "name": "aliases",
              "type": {
                "collection": {
                  "elementtype": {
                    "primitive": "string"
                  },
                  "kind": "array"
                }
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "aws-cdk-assert.CloudFrontDistribution"
            }
          }
        },
        {
          "docs": {
            "returns": "",
            "stability": "stable",
            "summary": "Sets a matching certificate."
          },
          "locationInModule": {
            "filename": "src/cloudfront.ts",
            "line": 72
          },
          "name": "withCertificate",
          "parameters": [
            {
              "docs": {
                "summary": "The certificate requestor (or certificate) resource."
              },
              "name": "requestorResource",
              "type": {
                "fqn": "aws-cdk-assert.Resource"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "aws-cdk-assert.CloudFrontDistribution"
            }
          }
        },
        {
          "docs": {
            "returns": "",
            "stability": "stable",
            "summary": "Sets a matching CloudFront Function association."
          },
          "locationInModule": {
            "filename": "src/cloudfront.ts",
            "line": 55
          },
          "name": "withFunctionAssociation",
          "parameters": [
            {
              "docs": {
                "summary": "The CloudFront Function test construct resource."
              },
              "name": "fn",
              "type": {
                "fqn": "aws-cdk-assert.CloudFrontFunction"
              }
            },
            {
              "docs": {
                "summary": "The association event type."
              },
              "name": "eventType",
              "optional": true,
              "type": {
                "fqn": "aws-cdk-lib.aws_cloudfront.FunctionEventType"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "aws-cdk-assert.CloudFrontDistribution"
            }
          }
        },
        {
          "docs": {
            "returns": "",
            "stability": "stable",
            "summary": "Sets a matching HTTP version for the resource."
          },
          "locationInModule": {
            "filename": "src/cloudfront.ts",
            "line": 112
          },
          "name": "withHttpVersion",
          "parameters": [
            {
              "docs": {
                "summary": "The matching HTTP version."
              },
              "name": "version",
              "type": {
                "fqn": "aws-cdk-lib.aws_cloudfront.HttpVersion"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "aws-cdk-assert.CloudFrontDistribution"
            }
          }
        },
        {
          "docs": {
            "returns": "",
            "stability": "stable",
            "summary": "Sets a matching Origin configuration."
          },
          "locationInModule": {
            "filename": "src/cloudfront.ts",
            "line": 122
          },
          "name": "withOrigin",
          "parameters": [
            {
              "docs": {
                "summary": "The matching origin configuration."
              },
              "name": "originConfig",
              "optional": true,
              "type": {
                "collection": {
                  "elementtype": {
                    "primitive": "any"
                  },
                  "kind": "map"
                }
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "aws-cdk-assert.CloudFrontDistribution"
            }
          }
        },
        {
          "docs": {
            "returns": "",
            "stability": "stable",
            "summary": "Sets a matching origin for the passed S3 Bucket resource."
          },
          "locationInModule": {
            "filename": "src/cloudfront.ts",
            "line": 98
          },
          "name": "withPublicS3BucketOrigin",
          "parameters": [
            {
              "docs": {
                "summary": "The S3 Bucket test construct resource."
              },
              "name": "s3Bucket",
              "type": {
                "fqn": "aws-cdk-assert.S3Bucket"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "aws-cdk-assert.CloudFrontDistribution"
            }
          }
        },
        {
          "docs": {
            "returns": "",
            "stability": "stable",
            "summary": "Sets a matching WafV2 WebACL ID."
          },
          "locationInModule": {
            "filename": "src/cloudfront.ts",
            "line": 84
          },
          "name": "withWebACL",
          "parameters": [
            {
              "docs": {
                "summary": "The WebACL ID."
              },
              "name": "webACLId",
              "type": {
                "primitive": "any"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "aws-cdk-assert.CloudFrontDistribution"
            }
          }
        }
      ],
      "name": "CloudFrontDistribution",
      "symbolId": "src/cloudfront:CloudFrontDistribution"
    },
    "aws-cdk-assert.CloudFrontFunction": {
      "assembly": "aws-cdk-assert",
      "base": "aws-cdk-assert.RemovableResource",
      "docs": {
        "see": "{@link https://docs.aws.amazon.com/cdk/api/v2/docs/aws-cdk-lib.aws_cloudfront.CfnFunction.html}",
        "stability": "stable",
        "summary": "A test construct for a CloudFront Function resource."
      },
      "fqn": "aws-cdk-assert.CloudFrontFunction",
      "initializer": {
        "docs": {
          "stability": "stable"
        },
        "locationInModule": {
          "filename": "src/cloudfront.ts",
          "line": 14
        },
        "parameters": [
          {
            "name": "template",
            "type": {
              "fqn": "aws-cdk-assert.AdvancedTemplate"
            }
          },
          {
            "name": "props",
            "optional": true,
            "type": {
              "primitive": "any"
            }
          }
        ]
      },
      "kind": "class",
      "locationInModule": {
        "filename": "src/cloudfront.ts",
        "line": 13
      },
      "methods": [
        {
          "docs": {
            "returns": "",
            "stability": "stable",
            "summary": "Sets a matching function code for the function."
          },
          "locationInModule": {
            "filename": "src/cloudfront.ts",
            "line": 23
          },
          "name": "withCode",
          "parameters": [
            {
              "docs": {
                "summary": "The whole of a part of the function code."
              },
              "name": "code",
              "type": {
                "primitive": "string"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "aws-cdk-assert.CloudFrontFunction"
            }
          }
        }
      ],
      "name": "CloudFrontFunction",
      "symbolId": "src/cloudfront:CloudFrontFunction"
    },
    "aws-cdk-assert.CodeBuildProject": {
      "assembly": "aws-cdk-assert",
      "base": "aws-cdk-assert.RemovableResource",
      "docs": {
        "see": "{@link https://docs.aws.amazon.com/cdk/api/v2/docs/aws-cdk-lib.aws_codebuild.CfnProject.html}",
        "stability": "stable",
        "summary": "A test construct for a CodeBuild Project resource."
      },
      "fqn": "aws-cdk-assert.CodeBuildProject",
      "initializer": {
        "docs": {
          "stability": "stable"
        },
        "locationInModule": {
          "filename": "src/codebuild.ts",
          "line": 87
        },
        "parameters": [
          {
            "name": "template",
            "type": {
              "fqn": "aws-cdk-assert.AdvancedTemplate"
            }
          },
          {
            "name": "props",
            "optional": true,
            "type": {
              "primitive": "any"
            }
          }
        ]
      },
      "kind": "class",
      "locationInModule": {
        "filename": "src/codebuild.ts",
        "line": 83
      },
      "methods": [
        {
          "docs": {
            "returns": "",
            "stability": "stable",
            "summary": "Sets a matching artifact for the project."
          },
          "locationInModule": {
            "filename": "src/codebuild.ts",
            "line": 187
          },
          "name": "withArtifact",
          "parameters": [
            {
              "docs": {
                "summary": "The type of the artifact (e.g., S3)."
              },
              "name": "artifactType",
              "type": {
                "primitive": "string"
              }
            },
            {
              "docs": {
                "summary": "The location of the artifact (resource, string, or a matcher)."
              },
              "name": "location",
              "optional": true,
              "type": {
                "primitive": "any"
              }
            },
            {
              "docs": {
                "summary": "Whether encryption is enabled for the artifact."
              },
              "name": "encryption",
              "optional": true,
              "type": {
                "primitive": "boolean"
              }
            },
            {
              "docs": {
                "summary": "Whether packaging is enabled for the artifact."
              },
              "name": "packaging",
              "optional": true,
              "type": {
                "primitive": "boolean"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "aws-cdk-assert.CodeBuildProject"
            }
          }
        },
        {
          "docs": {
            "returns": "",
            "stability": "stable",
            "summary": "Sets a matching build spec for the project."
          },
          "locationInModule": {
            "filename": "src/codebuild.ts",
            "line": 211
          },
          "name": "withBuildSpec",
          "parameters": [
            {
              "docs": {
                "summary": "A partial build spec command."
              },
              "name": "command",
              "type": {
                "primitive": "string"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "aws-cdk-assert.CodeBuildProject"
            }
          }
        },
        {
          "docs": {
            "returns": "",
            "stability": "stable",
            "summary": "Sets a matching concurrent build limit."
          },
          "locationInModule": {
            "filename": "src/codebuild.ts",
            "line": 151
          },
          "name": "withConcurrentBuildLimit",
          "parameters": [
            {
              "docs": {
                "summary": "The exact limit to match."
              },
              "name": "limit",
              "type": {
                "primitive": "number"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "aws-cdk-assert.CodeBuildProject"
            }
          }
        },
        {
          "docs": {
            "returns": "",
            "stability": "stable",
            "summary": "Sets a matching environment variable for the project."
          },
          "locationInModule": {
            "filename": "src/codebuild.ts",
            "line": 125
          },
          "name": "withEnvironmentVariable",
          "parameters": [
            {
              "docs": {
                "summary": "The whole of a partial name of the environment variable."
              },
              "name": "name",
              "type": {
                "primitive": "string"
              }
            },
            {
              "docs": {
                "summary": "The value of the environment variable (resource, string, or a matcher)."
              },
              "name": "value",
              "optional": true,
              "type": {
                "primitive": "any"
              }
            },
            {
              "docs": {
                "summary": "The type of the environment variable."
              },
              "name": "envVariableType",
              "optional": true,
              "type": {
                "fqn": "aws-cdk-lib.aws_codebuild.BuildEnvironmentVariableType"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "aws-cdk-assert.CodeBuildProject"
            }
          }
        },
        {
          "docs": {
            "returns": "",
            "stability": "stable",
            "summary": "Sets a matching Service Role to another test construct resource."
          },
          "locationInModule": {
            "filename": "src/codebuild.ts",
            "line": 98
          },
          "name": "withServiceRole",
          "parameters": [
            {
              "docs": {
                "summary": "The test construct resource to set."
              },
              "name": "resource",
              "type": {
                "fqn": "aws-cdk-assert.Resource"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "aws-cdk-assert.CodeBuildProject"
            }
          }
        },
        {
          "docs": {
            "returns": "",
            "stability": "stable",
            "summary": "Sets a matching source for the project."
          },
          "locationInModule": {
            "filename": "src/codebuild.ts",
            "line": 109
          },
          "name": "withSource",
          "parameters": [
            {
              "docs": {
                "summary": "The source type to match (exact match)."
              },
              "name": "sourceType",
              "type": {
                "primitive": "string"
              }
            },
            {
              "docs": {
                "summary": "The whole or a partial location."
              },
              "name": "location",
              "type": {
                "primitive": "string"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "aws-cdk-assert.CodeBuildProject"
            }
          }
        },
        {
          "docs": {
            "returns": "",
            "stability": "stable",
            "summary": "Sets a matching trigger for the project."
          },
          "locationInModule": {
            "filename": "src/codebuild.ts",
            "line": 162
          },
          "name": "withTriggers",
          "parameters": [
            {
              "docs": {
                "summary": "The trigger events to match with."
              },
              "name": "events",
              "type": {
                "collection": {
                  "elementtype": {
                    "fqn": "aws-cdk-assert.CodeBuildProjectTriggerEvent"
                  },
                  "kind": "array"
                }
              }
            },
            {
              "docs": {
                "summary": "Whether a webhook is used for the trigger."
              },
              "name": "webhook",
              "optional": true,
              "type": {
                "primitive": "boolean"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "aws-cdk-assert.CodeBuildProject"
            }
          }
        }
      ],
      "name": "CodeBuildProject",
      "symbolId": "src/codebuild:CodeBuildProject"
    },
    "aws-cdk-assert.CodeBuildProjectTriggerEvent": {
      "assembly": "aws-cdk-assert",
      "datatype": true,
      "docs": {
        "stability": "stable"
      },
      "fqn": "aws-cdk-assert.CodeBuildProjectTriggerEvent",
      "kind": "interface",
      "locationInModule": {
        "filename": "src/codebuild.ts",
        "line": 6
      },
      "name": "CodeBuildProjectTriggerEvent",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/codebuild.ts",
            "line": 7
          },
          "name": "eventType",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/codebuild.ts",
            "line": 8
          },
          "name": "pattern",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "src/codebuild:CodeBuildProjectTriggerEvent"
    },
    "aws-cdk-assert.CodeBuildSourceCredentials": {
      "assembly": "aws-cdk-assert",
      "base": "aws-cdk-assert.RemovableResource",
      "docs": {
        "see": "{@link https://docs.aws.amazon.com/cdk/api/v2/docs/aws-cdk-lib.aws_codebuild.CfnSourceCredential.html}",
        "stability": "stable",
        "summary": "A test construct for CloudBuild Source Credentials resource."
      },
      "fqn": "aws-cdk-assert.CodeBuildSourceCredentials",
      "initializer": {
        "docs": {
          "stability": "stable"
        },
        "locationInModule": {
          "filename": "src/codebuild.ts",
          "line": 28
        },
        "parameters": [
          {
            "name": "template",
            "type": {
              "fqn": "aws-cdk-assert.AdvancedTemplate"
            }
          },
          {
            "name": "props",
            "optional": true,
            "type": {
              "primitive": "any"
            }
          }
        ]
      },
      "kind": "class",
      "locationInModule": {
        "filename": "src/codebuild.ts",
        "line": 27
      },
      "methods": [
        {
          "docs": {
            "returns": "",
            "stability": "stable",
            "summary": "Sets matching credentials for BitBucket."
          },
          "locationInModule": {
            "filename": "src/codebuild.ts",
            "line": 74
          },
          "name": "withBitBucketUser",
          "parameters": [
            {
              "docs": {
                "summary": "The username."
              },
              "name": "username",
              "type": {
                "primitive": "string"
              }
            },
            {
              "docs": {
                "summary": "The password."
              },
              "name": "password",
              "type": {
                "primitive": "string"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "aws-cdk-assert.CodeBuildSourceCredentials"
            }
          }
        },
        {
          "docs": {
            "returns": "",
            "stability": "stable",
            "summary": "Sets matching credential properties for the source credentials."
          },
          "locationInModule": {
            "filename": "src/codebuild.ts",
            "line": 40
          },
          "name": "withCredentials",
          "parameters": [
            {
              "docs": {
                "summary": "The authentication type (exact match)."
              },
              "name": "authType",
              "type": {
                "fqn": "aws-cdk-assert.CredentialAuthType"
              }
            },
            {
              "docs": {
                "summary": "The server type (exact match)."
              },
              "name": "serverType",
              "type": {
                "fqn": "aws-cdk-assert.CrednetialServerType"
              }
            },
            {
              "docs": {
                "summary": "The token (partial match)."
              },
              "name": "token",
              "type": {
                "primitive": "string"
              }
            },
            {
              "docs": {
                "summary": "The username of the token (partial match)."
              },
              "name": "username",
              "optional": true,
              "type": {
                "primitive": "string"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "aws-cdk-assert.CodeBuildSourceCredentials"
            }
          }
        },
        {
          "docs": {
            "returns": "",
            "stability": "stable",
            "summary": "Sets matching credentials for GitHub Enterprise."
          },
          "locationInModule": {
            "filename": "src/codebuild.ts",
            "line": 64
          },
          "name": "withGitHubEnterprisePersonalAccessToken",
          "parameters": [
            {
              "docs": {
                "summary": "The GitHub access token."
              },
              "name": "token",
              "type": {
                "primitive": "string"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "aws-cdk-assert.CodeBuildSourceCredentials"
            }
          }
        },
        {
          "docs": {
            "returns": "",
            "stability": "stable",
            "summary": "Sets matching credentials for GitHub."
          },
          "locationInModule": {
            "filename": "src/codebuild.ts",
            "line": 55
          },
          "name": "withGitHubPersonalAccessToken",
          "parameters": [
            {
              "docs": {
                "summary": "The GitHub access token."
              },
              "name": "token",
              "type": {
                "primitive": "string"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "aws-cdk-assert.CodeBuildSourceCredentials"
            }
          }
        }
      ],
      "name": "CodeBuildSourceCredentials",
      "symbolId": "src/codebuild:CodeBuildSourceCredentials"
    },
    "aws-cdk-assert.CorsOptions": {
      "assembly": "aws-cdk-assert",
      "datatype": true,
      "docs": {
        "stability": "stable"
      },
      "fqn": "aws-cdk-assert.CorsOptions",
      "kind": "interface",
      "locationInModule": {
        "filename": "src/s3.ts",
        "line": 57
      },
      "name": "CorsOptions",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/s3.ts",
            "line": 58
          },
          "name": "methods",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "primitive": "string"
                },
                {
                  "collection": {
                    "elementtype": {
                      "primitive": "string"
                    },
                    "kind": "array"
                  }
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/s3.ts",
            "line": 59
          },
          "name": "origins",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "primitive": "string"
                },
                {
                  "collection": {
                    "elementtype": {
                      "primitive": "string"
                    },
                    "kind": "array"
                  }
                }
              ]
            }
          }
        }
      ],
      "symbolId": "src/s3:CorsOptions"
    },
    "aws-cdk-assert.CredentialAuthType": {
      "assembly": "aws-cdk-assert",
      "docs": {
        "stability": "stable"
      },
      "fqn": "aws-cdk-assert.CredentialAuthType",
      "kind": "enum",
      "locationInModule": {
        "filename": "src/codebuild.ts",
        "line": 11
      },
      "members": [
        {
          "docs": {
            "stability": "stable"
          },
          "name": "OAUTH"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "BASIC_AUTH"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "PERSONAL_ACCESS_TOKEN"
        }
      ],
      "name": "CredentialAuthType",
      "symbolId": "src/codebuild:CredentialAuthType"
    },
    "aws-cdk-assert.CrednetialServerType": {
      "assembly": "aws-cdk-assert",
      "docs": {
        "stability": "stable"
      },
      "fqn": "aws-cdk-assert.CrednetialServerType",
      "kind": "enum",
      "locationInModule": {
        "filename": "src/codebuild.ts",
        "line": 17
      },
      "members": [
        {
          "docs": {
            "stability": "stable"
          },
          "name": "GITHUB"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "GITHUB_ENTERPRISE"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "BITBUCKET"
        }
      ],
      "name": "CrednetialServerType",
      "symbolId": "src/codebuild:CrednetialServerType"
    },
    "aws-cdk-assert.CustomResource": {
      "assembly": "aws-cdk-assert",
      "base": "aws-cdk-assert.RemovableResource",
      "docs": {
        "see": "{@link https://docs.aws.amazon.com/cdk/api/v2/docs/aws-cdk-lib.CfnCustomResource.html}",
        "stability": "stable",
        "summary": "A test construct for the CustomResource resource type."
      },
      "fqn": "aws-cdk-assert.CustomResource",
      "initializer": {
        "docs": {
          "stability": "stable"
        },
        "locationInModule": {
          "filename": "src/custom.ts",
          "line": 10
        },
        "parameters": [
          {
            "name": "template",
            "type": {
              "fqn": "aws-cdk-assert.AdvancedTemplate"
            }
          },
          {
            "name": "props",
            "optional": true,
            "type": {
              "primitive": "any"
            }
          }
        ]
      },
      "kind": "class",
      "locationInModule": {
        "filename": "src/custom.ts",
        "line": 9
      },
      "methods": [
        {
          "docs": {
            "returns": "",
            "stability": "stable",
            "summary": "Sets a matching \"Create\" event handler for the custom resource."
          },
          "locationInModule": {
            "filename": "src/custom.ts",
            "line": 40
          },
          "name": "withCreateHandler",
          "parameters": [
            {
              "docs": {
                "summary": "The matching action name (exact match)."
              },
              "name": "action",
              "type": {
                "primitive": "string"
              }
            },
            {
              "docs": {
                "summary": "The matching service name (exact match)."
              },
              "name": "service",
              "type": {
                "primitive": "string"
              }
            },
            {
              "docs": {
                "summary": "Optional parameters of the custom resource."
              },
              "name": "parameters",
              "optional": true,
              "type": {
                "primitive": "any"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "aws-cdk-assert.CustomResource"
            }
          }
        },
        {
          "docs": {
            "returns": "",
            "stability": "stable",
            "summary": "Sets a matching event handler for the custom resource."
          },
          "locationInModule": {
            "filename": "src/custom.ts",
            "line": 22
          },
          "name": "withEventHandler",
          "parameters": [
            {
              "docs": {
                "summary": "The matching event name (exact match)."
              },
              "name": "eventName",
              "type": {
                "primitive": "string"
              }
            },
            {
              "docs": {
                "summary": "The matching action name (exact match)."
              },
              "name": "action",
              "type": {
                "primitive": "string"
              }
            },
            {
              "docs": {
                "summary": "The matching service name (exact match)."
              },
              "name": "service",
              "type": {
                "primitive": "string"
              }
            },
            {
              "docs": {
                "summary": "Optional parameters of the custom resource."
              },
              "name": "parameters",
              "optional": true,
              "type": {
                "primitive": "any"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "aws-cdk-assert.CustomResource"
            }
          }
        },
        {
          "docs": {
            "returns": "",
            "stability": "stable",
            "summary": "Sets a matching service token to the resource passed."
          },
          "locationInModule": {
            "filename": "src/custom.ts",
            "line": 60
          },
          "name": "withServiceToken",
          "parameters": [
            {
              "docs": {
                "summary": "The test construct to connect."
              },
              "name": "resource",
              "type": {
                "fqn": "aws-cdk-assert.Resource"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "aws-cdk-assert.CustomResource"
            }
          }
        },
        {
          "docs": {
            "returns": "",
            "stability": "stable",
            "summary": "Sets a matching \"Update\" event handler for the custom resource."
          },
          "locationInModule": {
            "filename": "src/custom.ts",
            "line": 51
          },
          "name": "withUpdateHandler",
          "parameters": [
            {
              "docs": {
                "summary": "The matching action name (exact match)."
              },
              "name": "action",
              "type": {
                "primitive": "string"
              }
            },
            {
              "docs": {
                "summary": "The matching service name (exact match)."
              },
              "name": "service",
              "type": {
                "primitive": "string"
              }
            },
            {
              "docs": {
                "summary": "Optional parameters of the custom resource."
              },
              "name": "parameters",
              "optional": true,
              "type": {
                "primitive": "any"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "aws-cdk-assert.CustomResource"
            }
          }
        }
      ],
      "name": "CustomResource",
      "symbolId": "src/custom:CustomResource"
    },
    "aws-cdk-assert.DynamoDBTable": {
      "assembly": "aws-cdk-assert",
      "base": "aws-cdk-assert.RemovableResource",
      "docs": {
        "see": "{@link https://docs.aws.amazon.com/cdk/api/v2/docs/aws-cdk-lib.aws_dynamodb.CfnTable.html}",
        "stability": "stable",
        "summary": "A test construct for a DynamoDB Table."
      },
      "fqn": "aws-cdk-assert.DynamoDBTable",
      "initializer": {
        "docs": {
          "stability": "stable"
        },
        "locationInModule": {
          "filename": "src/dynamodb.ts",
          "line": 11
        },
        "parameters": [
          {
            "name": "template",
            "type": {
              "fqn": "aws-cdk-assert.AdvancedTemplate"
            }
          },
          {
            "name": "props",
            "optional": true,
            "type": {
              "primitive": "any"
            }
          }
        ]
      },
      "kind": "class",
      "locationInModule": {
        "filename": "src/dynamodb.ts",
        "line": 10
      },
      "methods": [
        {
          "docs": {
            "returns": "",
            "stability": "stable",
            "summary": "Sets a matching key of the table."
          },
          "locationInModule": {
            "filename": "src/dynamodb.ts",
            "line": 31
          },
          "name": "withKey",
          "parameters": [
            {
              "docs": {
                "summary": "Either the whole or a partial name of the key of the table."
              },
              "name": "key",
              "type": {
                "primitive": "string"
              }
            },
            {
              "docs": {
                "summary": "The type of the key attribute."
              },
              "name": "attributeType",
              "optional": true,
              "type": {
                "fqn": "aws-cdk-lib.aws_dynamodb.AttributeType"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "aws-cdk-assert.DynamoDBTable"
            }
          }
        },
        {
          "docs": {
            "returns": "",
            "stability": "stable",
            "summary": "Sets a matching name of the table."
          },
          "locationInModule": {
            "filename": "src/dynamodb.ts",
            "line": 20
          },
          "name": "withTableName",
          "parameters": [
            {
              "docs": {
                "summary": "Either the whole or a partial name of the table."
              },
              "name": "name",
              "type": {
                "primitive": "string"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "aws-cdk-assert.DynamoDBTable"
            }
          }
        }
      ],
      "name": "DynamoDBTable",
      "symbolId": "src/dynamodb:DynamoDBTable"
    },
    "aws-cdk-assert.IAMPolicy": {
      "assembly": "aws-cdk-assert",
      "base": "aws-cdk-assert.RemovableResource",
      "docs": {
        "see": "{@link https://docs.aws.amazon.com/cdk/api/v2/docs/aws-cdk-lib.aws_iam.CfnPolicy.html}",
        "stability": "stable",
        "summary": "A test construct representing an IAM Policy."
      },
      "fqn": "aws-cdk-assert.IAMPolicy",
      "initializer": {
        "docs": {
          "stability": "stable"
        },
        "locationInModule": {
          "filename": "src/iam.ts",
          "line": 79
        },
        "parameters": [
          {
            "name": "template",
            "type": {
              "fqn": "aws-cdk-assert.AdvancedTemplate"
            }
          },
          {
            "name": "props",
            "optional": true,
            "type": {
              "primitive": "any"
            }
          }
        ]
      },
      "kind": "class",
      "locationInModule": {
        "filename": "src/iam.ts",
        "line": 73
      },
      "methods": [
        {
          "docs": {
            "returns": "",
            "stability": "stable",
            "summary": "Adds a matching role assignment."
          },
          "locationInModule": {
            "filename": "src/iam.ts",
            "line": 114
          },
          "name": "usedByRole",
          "parameters": [
            {
              "docs": {
                "summary": "The IAM role test construct."
              },
              "name": "role",
              "type": {
                "fqn": "aws-cdk-assert.IAMRole"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "aws-cdk-assert.IAMPolicy"
            }
          }
        },
        {
          "docs": {
            "returns": "",
            "stability": "stable",
            "summary": "Adds a matching PolicyName for the policy."
          },
          "locationInModule": {
            "filename": "src/iam.ts",
            "line": 125
          },
          "name": "withPolicyName",
          "parameters": [
            {
              "docs": {
                "summary": "Either the whole or a partial policy name."
              },
              "name": "name",
              "type": {
                "primitive": "string"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "aws-cdk-assert.IAMPolicy"
            }
          }
        },
        {
          "docs": {
            "returns": "",
            "stability": "stable",
            "summary": "Adds a matching policy statement."
          },
          "locationInModule": {
            "filename": "src/iam.ts",
            "line": 92
          },
          "name": "withStatement",
          "parameters": [
            {
              "docs": {
                "summary": "Either a single or an array of actions."
              },
              "name": "action",
              "type": {
                "union": {
                  "types": [
                    {
                      "primitive": "string"
                    },
                    {
                      "collection": {
                        "elementtype": {
                          "primitive": "string"
                        },
                        "kind": "array"
                      }
                    }
                  ]
                }
              }
            },
            {
              "docs": {
                "summary": "Either a matcher or a string representing the resource."
              },
              "name": "resource",
              "optional": true,
              "type": {
                "primitive": "any"
              }
            },
            {
              "docs": {
                "summary": "The matching effect of the policy statement."
              },
              "name": "effect",
              "optional": true,
              "type": {
                "fqn": "aws-cdk-lib.aws_iam.Effect"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "aws-cdk-assert.IAMPolicy"
            }
          }
        }
      ],
      "name": "IAMPolicy",
      "symbolId": "src/iam:IAMPolicy"
    },
    "aws-cdk-assert.IAMRole": {
      "assembly": "aws-cdk-assert",
      "base": "aws-cdk-assert.RemovableResource",
      "docs": {
        "see": "{@link https://docs.aws.amazon.com/cdk/api/v2/docs/aws-cdk-lib.aws_iam.CfnRole.html}",
        "stability": "stable",
        "summary": "A test construct represents an IAM Role."
      },
      "fqn": "aws-cdk-assert.IAMRole",
      "initializer": {
        "docs": {
          "stability": "stable"
        },
        "locationInModule": {
          "filename": "src/iam.ts",
          "line": 12
        },
        "parameters": [
          {
            "name": "template",
            "type": {
              "fqn": "aws-cdk-assert.AdvancedTemplate"
            }
          },
          {
            "name": "props",
            "optional": true,
            "type": {
              "primitive": "any"
            }
          }
        ]
      },
      "kind": "class",
      "locationInModule": {
        "filename": "src/iam.ts",
        "line": 11
      },
      "methods": [
        {
          "docs": {
            "example": "iamRole.assumableBy({ Service: \"lambda.amazonaws.com\" })",
            "returns": "",
            "stability": "stable",
            "summary": "Sets matching property of AssumeRolePolicyDocument."
          },
          "locationInModule": {
            "filename": "src/iam.ts",
            "line": 23
          },
          "name": "assumableBy",
          "parameters": [
            {
              "docs": {
                "summary": "The principal object."
              },
              "name": "principal",
              "type": {
                "primitive": "any"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "aws-cdk-assert.IAMRole"
            }
          }
        },
        {
          "docs": {
            "returns": "",
            "see": "{@link assumableBy}",
            "stability": "stable",
            "summary": "Sets matching property of AssumeRolePolicyDocument to AWS CodeBuild Service."
          },
          "locationInModule": {
            "filename": "src/iam.ts",
            "line": 50
          },
          "name": "assumableByCodeBuild",
          "returns": {
            "type": {
              "fqn": "aws-cdk-assert.IAMRole"
            }
          }
        },
        {
          "docs": {
            "returns": "",
            "see": "{@link assumableBy}",
            "stability": "stable",
            "summary": "Sets matching property of AssumeRolePolicyDocument to AWS Lambda Service."
          },
          "locationInModule": {
            "filename": "src/iam.ts",
            "line": 41
          },
          "name": "assumableByLambda",
          "returns": {
            "type": {
              "fqn": "aws-cdk-assert.IAMRole"
            }
          }
        },
        {
          "docs": {
            "returns": "",
            "stability": "stable",
            "summary": "Sets matching property of ManagedPolicyArns with managed policy name."
          },
          "locationInModule": {
            "filename": "src/iam.ts",
            "line": 59
          },
          "name": "withManagedRolicy",
          "parameters": [
            {
              "docs": {
                "summary": "The managed policy name/ARN part."
              },
              "name": "policy",
              "type": {
                "primitive": "string"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "aws-cdk-assert.IAMRole"
            }
          }
        }
      ],
      "name": "IAMRole",
      "symbolId": "src/iam:IAMRole"
    },
    "aws-cdk-assert.LambdaFunction": {
      "assembly": "aws-cdk-assert",
      "base": "aws-cdk-assert.RemovableResource",
      "docs": {
        "see": "{@link https://docs.aws.amazon.com/cdk/api/v2/docs/aws-cdk-lib.aws_lambda.CfnFunction.html}",
        "stability": "stable",
        "summary": "A test construct represents a Lambda Function."
      },
      "fqn": "aws-cdk-assert.LambdaFunction",
      "initializer": {
        "docs": {
          "stability": "stable"
        },
        "locationInModule": {
          "filename": "src/lambda.ts",
          "line": 14
        },
        "parameters": [
          {
            "name": "template",
            "type": {
              "fqn": "aws-cdk-assert.AdvancedTemplate"
            }
          },
          {
            "name": "props",
            "optional": true,
            "type": {
              "primitive": "any"
            }
          }
        ]
      },
      "kind": "class",
      "locationInModule": {
        "filename": "src/lambda.ts",
        "line": 11
      },
      "methods": [
        {
          "docs": {
            "returns": "",
            "stability": "stable",
            "summary": "Sets a matching environment variable for the lambda function."
          },
          "locationInModule": {
            "filename": "src/lambda.ts",
            "line": 69
          },
          "name": "withEnvironmentVariable",
          "parameters": [
            {
              "docs": {
                "summary": "The whole of a partial name of the environment variable."
              },
              "name": "name",
              "type": {
                "primitive": "string"
              }
            },
            {
              "docs": {
                "summary": "The value of the environment variable (resource, string, or a matcher)."
              },
              "name": "value",
              "optional": true,
              "type": {
                "primitive": "any"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "aws-cdk-assert.LambdaFunction"
            }
          }
        },
        {
          "docs": {
            "returns": "",
            "stability": "stable",
            "summary": "Adds a matching handler of the Lambda Function."
          },
          "locationInModule": {
            "filename": "src/lambda.ts",
            "line": 48
          },
          "name": "withHandler",
          "parameters": [
            {
              "docs": {
                "summary": "Either exact or partial string of the handler."
              },
              "name": "handler",
              "type": {
                "primitive": "string"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "aws-cdk-assert.LambdaFunction"
            }
          }
        },
        {
          "docs": {
            "returns": "",
            "stability": "stable",
            "summary": "Adds a matching role of the Lambda Function."
          },
          "locationInModule": {
            "filename": "src/lambda.ts",
            "line": 24
          },
          "name": "withRole",
          "parameters": [
            {
              "docs": {
                "summary": "The IAM Role test construct."
              },
              "name": "iamRole",
              "type": {
                "fqn": "aws-cdk-assert.IAMRole"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "aws-cdk-assert.LambdaFunction"
            }
          }
        },
        {
          "docs": {
            "returns": "",
            "stability": "stable",
            "summary": "Adds a matching runtime of the Lambda Function."
          },
          "locationInModule": {
            "filename": "src/lambda.ts",
            "line": 34
          },
          "name": "withRuntime",
          "parameters": [
            {
              "docs": {
                "summary": "Either exact or partial string of the runtime."
              },
              "name": "runtime",
              "type": {
                "union": {
                  "types": [
                    {
                      "primitive": "string"
                    },
                    {
                      "fqn": "aws-cdk-lib.aws_lambda.Runtime"
                    }
                  ]
                }
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "aws-cdk-assert.LambdaFunction"
            }
          }
        },
        {
          "docs": {
            "returns": "",
            "stability": "stable",
            "summary": "Adds a matching timeout of the Lambda Function."
          },
          "locationInModule": {
            "filename": "src/lambda.ts",
            "line": 58
          },
          "name": "withTimeout",
          "parameters": [
            {
              "docs": {
                "summary": "The exact timeout number."
              },
              "name": "timeout",
              "type": {
                "primitive": "number"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "aws-cdk-assert.LambdaFunction"
            }
          }
        }
      ],
      "name": "LambdaFunction",
      "symbolId": "src/lambda:LambdaFunction"
    },
    "aws-cdk-assert.LambdaPermission": {
      "assembly": "aws-cdk-assert",
      "base": "aws-cdk-assert.Resource",
      "docs": {
        "see": "{@link https://docs.aws.amazon.com/cdk/api/v2/docs/aws-cdk-lib.aws_lambda.CfnPermission.html}",
        "stability": "stable",
        "summary": "A test construct representing a Lambda Permission resource."
      },
      "fqn": "aws-cdk-assert.LambdaPermission",
      "initializer": {
        "docs": {
          "stability": "stable"
        },
        "locationInModule": {
          "filename": "src/lambda.ts",
          "line": 93
        },
        "parameters": [
          {
            "name": "template",
            "type": {
              "fqn": "aws-cdk-assert.AdvancedTemplate"
            }
          },
          {
            "name": "props",
            "optional": true,
            "type": {
              "primitive": "any"
            }
          }
        ]
      },
      "kind": "class",
      "locationInModule": {
        "filename": "src/lambda.ts",
        "line": 92
      },
      "methods": [
        {
          "docs": {
            "returns": "",
            "stability": "stable",
            "summary": "Sets a matching action for the resource."
          },
          "locationInModule": {
            "filename": "src/lambda.ts",
            "line": 102
          },
          "name": "withAction",
          "parameters": [
            {
              "docs": {
                "summary": "The whole or a partial action to match."
              },
              "name": "action",
              "type": {
                "primitive": "string"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "aws-cdk-assert.LambdaPermission"
            }
          }
        },
        {
          "docs": {
            "returns": "",
            "stability": "stable",
            "summary": "Sets a matching Lambda Function for the resource."
          },
          "locationInModule": {
            "filename": "src/lambda.ts",
            "line": 143
          },
          "name": "withFunctionName",
          "parameters": [
            {
              "docs": {
                "summary": "The lambda function resource."
              },
              "name": "lambdaFunction",
              "type": {
                "fqn": "aws-cdk-assert.LambdaFunction"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "aws-cdk-assert.LambdaPermission"
            }
          }
        },
        {
          "docs": {
            "returns": "",
            "stability": "stable",
            "summary": "Sets a matching principal for the resource."
          },
          "locationInModule": {
            "filename": "src/lambda.ts",
            "line": 112
          },
          "name": "withPrincipal",
          "parameters": [
            {
              "docs": {
                "summary": "The whole or a partial principal to match."
              },
              "name": "principal",
              "type": {
                "primitive": "string"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "aws-cdk-assert.LambdaPermission"
            }
          }
        },
        {
          "docs": {
            "returns": "",
            "stability": "stable",
            "summary": "Sets matching source account for the permission resource."
          },
          "locationInModule": {
            "filename": "src/lambda.ts",
            "line": 132
          },
          "name": "withSourceAccount",
          "parameters": [
            {
              "docs": {
                "summary": "The exact account or matcher for it."
              },
              "name": "account",
              "type": {
                "primitive": "any"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "aws-cdk-assert.LambdaPermission"
            }
          }
        },
        {
          "docs": {
            "returns": "",
            "stability": "stable",
            "summary": "Sets matching source ARN for the permission resource."
          },
          "locationInModule": {
            "filename": "src/lambda.ts",
            "line": 122
          },
          "name": "withSourceArn",
          "parameters": [
            {
              "docs": {
                "summary": "The exact arn or matcher for it."
              },
              "name": "arn",
              "type": {
                "primitive": "any"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "aws-cdk-assert.LambdaPermission"
            }
          }
        }
      ],
      "name": "LambdaPermission",
      "symbolId": "src/lambda:LambdaPermission"
    },
    "aws-cdk-assert.LogGroup": {
      "assembly": "aws-cdk-assert",
      "base": "aws-cdk-assert.RemovableResource",
      "docs": {
        "see": "{@link https://docs.aws.amazon.com/cdk/api/v2/docs/aws-cdk-lib.aws_logs.CfnLogGroup.html}",
        "stability": "stable",
        "summary": "A test construct representing a LogGroup."
      },
      "fqn": "aws-cdk-assert.LogGroup",
      "initializer": {
        "docs": {
          "stability": "stable"
        },
        "locationInModule": {
          "filename": "src/logs.ts",
          "line": 10
        },
        "parameters": [
          {
            "name": "template",
            "type": {
              "fqn": "aws-cdk-assert.AdvancedTemplate"
            }
          },
          {
            "name": "props",
            "optional": true,
            "type": {
              "primitive": "any"
            }
          }
        ]
      },
      "kind": "class",
      "locationInModule": {
        "filename": "src/logs.ts",
        "line": 9
      },
      "methods": [
        {
          "docs": {
            "returns": "",
            "stability": "stable",
            "summary": "Sets a matching log group name."
          },
          "locationInModule": {
            "filename": "src/logs.ts",
            "line": 29
          },
          "name": "withName",
          "parameters": [
            {
              "docs": {
                "summary": "Either the whole or a partial log group name."
              },
              "name": "name",
              "type": {
                "primitive": "string"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "aws-cdk-assert.LogGroup"
            }
          }
        },
        {
          "docs": {
            "returns": "",
            "stability": "stable",
            "summary": "Sets a matching retention period in days."
          },
          "locationInModule": {
            "filename": "src/logs.ts",
            "line": 19
          },
          "name": "withRetention",
          "parameters": [
            {
              "docs": {
                "summary": "The retention period in days."
              },
              "name": "days",
              "type": {
                "fqn": "aws-cdk-lib.aws_logs.RetentionDays"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "aws-cdk-assert.LogGroup"
            }
          }
        }
      ],
      "name": "LogGroup",
      "symbolId": "src/logs:LogGroup"
    },
    "aws-cdk-assert.RemovableResource": {
      "assembly": "aws-cdk-assert",
      "base": "aws-cdk-assert.Resource",
      "docs": {
        "remarks": "This class can be extended to work with other, specific resources.",
        "see": "{@link https://docs.aws.amazon.com/cdk/api/v2/docs/aws-cdk-lib.RemovalPolicy.html}",
        "stability": "stable",
        "summary": "Represents a test construct with RemovalPolicy."
      },
      "fqn": "aws-cdk-assert.RemovableResource",
      "initializer": {
        "docs": {
          "stability": "stable"
        },
        "locationInModule": {
          "filename": "src/resource.ts",
          "line": 42
        },
        "parameters": [
          {
            "name": "resourceType",
            "type": {
              "primitive": "string"
            }
          },
          {
            "name": "template",
            "type": {
              "fqn": "aws-cdk-assert.AdvancedTemplate"
            }
          },
          {
            "name": "props",
            "type": {
              "primitive": "any"
            }
          }
        ]
      },
      "kind": "class",
      "locationInModule": {
        "filename": "src/resource.ts",
        "line": 308
      },
      "methods": [
        {
          "docs": {
            "returns": "",
            "see": "{@link https://docs.aws.amazon.com/cdk/api/v2/docs/aws-cdk-lib.RemovalPolicy.html}",
            "stability": "stable",
            "summary": "Sets matching properties inferred from the RemovalPolicy (i.e. DeletionPolicy, UpdateReplacePolicy)."
          },
          "locationInModule": {
            "filename": "src/resource.ts",
            "line": 327
          },
          "name": "withRemovalPolicy",
          "parameters": [
            {
              "docs": {
                "summary": "The RemovalPolicy to match with."
              },
              "name": "policy",
              "type": {
                "fqn": "aws-cdk-lib.RemovalPolicy"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "aws-cdk-assert.RemovableResource"
            }
          }
        }
      ],
      "name": "RemovableResource",
      "symbolId": "src/resource:RemovableResource"
    },
    "aws-cdk-assert.Resource": {
      "assembly": "aws-cdk-assert",
      "docs": {
        "remarks": "This class can be extended to work with other, specific resources.",
        "stability": "stable",
        "summary": "Represents a general test construct."
      },
      "fqn": "aws-cdk-assert.Resource",
      "initializer": {
        "docs": {
          "stability": "stable"
        },
        "locationInModule": {
          "filename": "src/resource.ts",
          "line": 42
        },
        "parameters": [
          {
            "name": "resourceType",
            "type": {
              "primitive": "string"
            }
          },
          {
            "name": "template",
            "type": {
              "fqn": "aws-cdk-assert.AdvancedTemplate"
            }
          },
          {
            "name": "props",
            "type": {
              "primitive": "any"
            }
          }
        ]
      },
      "kind": "class",
      "locationInModule": {
        "filename": "src/resource.ts",
        "line": 12
      },
      "methods": [
        {
          "docs": {
            "custom": {
              "throws": "{AssertionError} if the condition is false."
            },
            "stability": "stable",
            "summary": "Asserts the condition and in case of failure, fails with a detailed error containing the template's debug information."
          },
          "locationInModule": {
            "filename": "src/resource.ts",
            "line": 270
          },
          "name": "assert",
          "parameters": [
            {
              "docs": {
                "summary": "The condition to evaluate for true."
              },
              "name": "condition",
              "type": {
                "primitive": "boolean"
              }
            },
            {
              "docs": {
                "summary": "The message to fail if the condition is false."
              },
              "name": "message",
              "type": {
                "primitive": "string"
              }
            }
          ]
        },
        {
          "docs": {
            "returns": "",
            "stability": "stable",
            "summary": "The number of resources matching from the template."
          },
          "locationInModule": {
            "filename": "src/resource.ts",
            "line": 211
          },
          "name": "count",
          "returns": {
            "type": {
              "primitive": "number"
            }
          }
        },
        {
          "docs": {
            "custom": {
              "throws": "{AssertionError} if the number of the matching resources is not the expected."
            },
            "stability": "stable",
            "summary": "Checks if the number of matching resources is expected."
          },
          "locationInModule": {
            "filename": "src/resource.ts",
            "line": 237
          },
          "name": "countIs",
          "parameters": [
            {
              "docs": {
                "summary": "The expected number of matching resources."
              },
              "name": "count",
              "type": {
                "primitive": "number"
              }
            }
          ]
        },
        {
          "docs": {
            "returns": "",
            "stability": "stable",
            "summary": "Sets a matching dependency of the resource (DependsOn root property)."
          },
          "locationInModule": {
            "filename": "src/resource.ts",
            "line": 296
          },
          "name": "dependsOn",
          "parameters": [
            {
              "docs": {
                "summary": "The test construct to match dependency on."
              },
              "name": "resource",
              "type": {
                "fqn": "aws-cdk-assert.Resource"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "aws-cdk-assert.Resource"
            }
          }
        },
        {
          "docs": {
            "custom": {
              "throws": "{AssertionError} if the matching resource exists."
            },
            "stability": "stable",
            "summary": "Checks if the matching resource does not exist."
          },
          "locationInModule": {
            "filename": "src/resource.ts",
            "line": 220
          },
          "name": "doesNotExist"
        },
        {
          "docs": {
            "custom": {
              "throws": "{AssertionError} if the matching resource does not exist."
            },
            "stability": "stable",
            "summary": "Checks if the matching resource exists."
          },
          "locationInModule": {
            "filename": "src/resource.ts",
            "line": 228
          },
          "name": "exists"
        },
        {
          "docs": {
            "returns": "",
            "stability": "stable",
            "summary": "Returns dictionary (object) of the matching resources from the template, considering the matching definition and the key, if set."
          },
          "locationInModule": {
            "filename": "src/resource.ts",
            "line": 139
          },
          "name": "find",
          "returns": {
            "type": {
              "collection": {
                "elementtype": {
                  "collection": {
                    "elementtype": {
                      "primitive": "any"
                    },
                    "kind": "map"
                  }
                },
                "kind": "map"
              }
            }
          }
        },
        {
          "docs": {
            "returns": "",
            "stability": "stable",
            "summary": "Returns the dictionary (object) of the resources with the same type as the current one."
          },
          "locationInModule": {
            "filename": "src/resource.ts",
            "line": 156
          },
          "name": "findSimilarType",
          "returns": {
            "type": {
              "collection": {
                "elementtype": {
                  "collection": {
                    "elementtype": {
                      "primitive": "any"
                    },
                    "kind": "map"
                  }
                },
                "kind": "map"
              }
            }
          }
        },
        {
          "docs": {
            "custom": {
              "throws": "{AssertionError} if the tag is not found."
            },
            "returns": "",
            "stability": "stable",
            "summary": "Checks if the tag with the given name (and optionally value) exists on the resource."
          },
          "locationInModule": {
            "filename": "src/resource.ts",
            "line": 281
          },
          "name": "hasTag",
          "parameters": [
            {
              "docs": {
                "summary": "The exact name of the tag."
              },
              "name": "key",
              "type": {
                "primitive": "string"
              }
            },
            {
              "docs": {
                "summary": "Either empty to check only for the tag or the exact value of the tag."
              },
              "name": "value",
              "optional": true,
              "type": {
                "primitive": "string"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "aws-cdk-assert.Resource"
            }
          }
        },
        {
          "docs": {
            "returns": "",
            "stability": "stable",
            "summary": "Returns debug information (as JSON string) of the test construct, including the matching definition and the resources with the same type found in the template."
          },
          "locationInModule": {
            "filename": "src/resource.ts",
            "line": 255
          },
          "name": "toDebugString",
          "returns": {
            "type": {
              "primitive": "string"
            }
          }
        },
        {
          "docs": {
            "returns": "",
            "stability": "stable",
            "summary": "Converts the resource to its CloudFormation definition from the template."
          },
          "locationInModule": {
            "filename": "src/resource.ts",
            "line": 245
          },
          "name": "toJSON",
          "returns": {
            "type": {
              "primitive": "any"
            }
          }
        },
        {
          "docs": {
            "returns": "",
            "stability": "stable",
            "summary": "Sets/Overwrites a particular property in Metadata."
          },
          "locationInModule": {
            "filename": "src/resource.ts",
            "line": 92
          },
          "name": "withMetadata",
          "parameters": [
            {
              "docs": {
                "summary": "The key of the metadata."
              },
              "name": "key",
              "type": {
                "primitive": "string"
              }
            },
            {
              "docs": {
                "summary": "The metadata's value, either a matching string,  a Matcher, or not set to only match for the existence of the property."
              },
              "name": "value",
              "optional": true,
              "type": {
                "primitive": "any"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "aws-cdk-assert.Resource"
            }
          }
        },
        {
          "docs": {
            "returns": "",
            "stability": "stable",
            "summary": "Sets the matching key."
          },
          "locationInModule": {
            "filename": "src/resource.ts",
            "line": 54
          },
          "name": "withPartialKey",
          "parameters": [
            {
              "docs": {
                "summary": "The exact or partial key."
              },
              "name": "key",
              "type": {
                "primitive": "string"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "aws-cdk-assert.Resource"
            }
          }
        },
        {
          "docs": {
            "returns": "",
            "stability": "stable",
            "summary": "Sets/Overwrites a particular property in Properties."
          },
          "locationInModule": {
            "filename": "src/resource.ts",
            "line": 67
          },
          "name": "withProperty",
          "parameters": [
            {
              "docs": {
                "summary": "The key of the property."
              },
              "name": "key",
              "type": {
                "primitive": "string"
              }
            },
            {
              "docs": {
                "summary": "The property's value, either a matching string,  a Matcher, or not set to only match for the existence of the property."
              },
              "name": "value",
              "optional": true,
              "type": {
                "primitive": "any"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "aws-cdk-assert.Resource"
            }
          }
        },
        {
          "docs": {
            "returns": "",
            "stability": "stable",
            "summary": "Sets/Overwrites a particular property in the root definition."
          },
          "locationInModule": {
            "filename": "src/resource.ts",
            "line": 117
          },
          "name": "withRootProperty",
          "parameters": [
            {
              "docs": {
                "summary": "The key of the property."
              },
              "name": "key",
              "type": {
                "primitive": "string"
              }
            },
            {
              "docs": {
                "summary": "The metadata's value, either a matching string,  a Matcher, or not set to only match for the existence of the property."
              },
              "name": "value",
              "optional": true,
              "type": {
                "primitive": "any"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "aws-cdk-assert.Resource"
            }
          }
        }
      ],
      "name": "Resource",
      "properties": [
        {
          "docs": {
            "stability": "stable",
            "summary": "The matcher for the ARN of the resource."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/resource.ts",
            "line": 194
          },
          "name": "arn",
          "type": {
            "fqn": "aws-cdk-lib.assertions.Matcher"
          }
        },
        {
          "docs": {
            "custom": {
              "throws": "{AssertionError} if more than one matching resource is found."
            },
            "stability": "stable",
            "summary": "The definition of the resource from the template."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/resource.ts",
            "line": 165
          },
          "name": "definition",
          "protected": true,
          "type": {
            "primitive": "any"
          }
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "The key/ID of the resource from the template."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/resource.ts",
            "line": 180
          },
          "name": "id",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "The metadata of the resource from the template."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/resource.ts",
            "line": 187
          },
          "name": "metadata",
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "any"
              },
              "kind": "map"
            }
          }
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "The matcher for the Ref of the resource."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/resource.ts",
            "line": 201
          },
          "name": "reference",
          "type": {
            "fqn": "aws-cdk-lib.assertions.Matcher"
          }
        },
        {
          "docs": {
            "custom": {
              "member": "The matching dependency keys of the resource (DependsOn)."
            },
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/resource.ts",
            "line": 36
          },
          "name": "dependencyMatcher",
          "protected": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "array"
            }
          }
        },
        {
          "docs": {
            "custom": {
              "member": "The matching Metadata of the resource."
            },
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/resource.ts",
            "line": 40
          },
          "name": "metadataMatcher",
          "protected": true,
          "type": {
            "primitive": "any"
          }
        },
        {
          "docs": {
            "custom": {
              "member": "The matching Properties of the resource."
            },
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/resource.ts",
            "line": 24
          },
          "name": "propertiesMatcher",
          "protected": true,
          "type": {
            "primitive": "any"
          }
        },
        {
          "docs": {
            "custom": {
              "member": "The parsed template."
            },
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/resource.ts",
            "line": 20
          },
          "name": "template",
          "protected": true,
          "type": {
            "fqn": "aws-cdk-assert.AdvancedTemplate"
          }
        },
        {
          "docs": {
            "custom": {
              "member": "The matching definition of the resource (including the Properties)."
            },
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/resource.ts",
            "line": 28
          },
          "name": "definitionMatcher",
          "optional": true,
          "protected": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "any"
              },
              "kind": "map"
            }
          }
        },
        {
          "docs": {
            "custom": {
              "member": "The matching key of the resource."
            },
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/resource.ts",
            "line": 32
          },
          "name": "key",
          "optional": true,
          "protected": true,
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "src/resource:Resource"
    },
    "aws-cdk-assert.Route53HostedZone": {
      "assembly": "aws-cdk-assert",
      "base": "aws-cdk-assert.RemovableResource",
      "docs": {
        "see": "{@link https://docs.aws.amazon.com/cdk/api/v2/docs/aws-cdk-lib.aws_route53.CfnHostedZone.html}",
        "stability": "stable",
        "summary": "A test construct representing a Route53 RecordSet."
      },
      "fqn": "aws-cdk-assert.Route53HostedZone",
      "initializer": {
        "docs": {
          "stability": "stable"
        },
        "locationInModule": {
          "filename": "src/route53.ts",
          "line": 14
        },
        "parameters": [
          {
            "name": "template",
            "type": {
              "fqn": "aws-cdk-assert.AdvancedTemplate"
            }
          },
          {
            "name": "props",
            "optional": true,
            "type": {
              "primitive": "any"
            }
          }
        ]
      },
      "kind": "class",
      "locationInModule": {
        "filename": "src/route53.ts",
        "line": 13
      },
      "methods": [
        {
          "docs": {
            "returns": "",
            "stability": "stable",
            "summary": "Sets a matching name for the HostedZone."
          },
          "locationInModule": {
            "filename": "src/route53.ts",
            "line": 23
          },
          "name": "withName",
          "parameters": [
            {
              "docs": {
                "summary": "Either the whole or a partial name of the record."
              },
              "name": "name",
              "type": {
                "primitive": "string"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "aws-cdk-assert.Route53HostedZone"
            }
          }
        }
      ],
      "name": "Route53HostedZone",
      "symbolId": "src/route53:Route53HostedZone"
    },
    "aws-cdk-assert.Route53RecordSet": {
      "assembly": "aws-cdk-assert",
      "base": "aws-cdk-assert.RemovableResource",
      "docs": {
        "see": "{@link https://docs.aws.amazon.com/cdk/api/v2/docs/aws-cdk-lib.aws_route53.CfnRecordSet.html}",
        "stability": "stable",
        "summary": "A test construct representing a Route53 RecordSet."
      },
      "fqn": "aws-cdk-assert.Route53RecordSet",
      "initializer": {
        "docs": {
          "stability": "stable"
        },
        "locationInModule": {
          "filename": "src/route53.ts",
          "line": 35
        },
        "parameters": [
          {
            "name": "template",
            "type": {
              "fqn": "aws-cdk-assert.AdvancedTemplate"
            }
          },
          {
            "name": "props",
            "optional": true,
            "type": {
              "primitive": "any"
            }
          }
        ]
      },
      "kind": "class",
      "locationInModule": {
        "filename": "src/route53.ts",
        "line": 34
      },
      "methods": [
        {
          "docs": {
            "returns": "",
            "stability": "stable",
            "summary": "Sets a matching hosted zone ID for the RecordSet."
          },
          "locationInModule": {
            "filename": "src/route53.ts",
            "line": 89
          },
          "name": "inHostedZone",
          "parameters": [
            {
              "docs": {
                "summary": "Either the hosted zone resource, a matcher, or a matching zone Id."
              },
              "name": "zone",
              "type": {
                "union": {
                  "types": [
                    {
                      "fqn": "aws-cdk-lib.assertions.Matcher"
                    },
                    {
                      "fqn": "aws-cdk-assert.Route53HostedZone"
                    }
                  ]
                }
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "aws-cdk-assert.Route53RecordSet"
            }
          }
        },
        {
          "docs": {
            "returns": "",
            "stability": "stable",
            "summary": "Sets a matching ApiGateway DomainName target for the RecordSet."
          },
          "locationInModule": {
            "filename": "src/route53.ts",
            "line": 115
          },
          "name": "withAliasToApiGatewayDomain",
          "parameters": [
            {
              "docs": {
                "summary": "The ApiGateway DomainName as the target."
              },
              "name": "domain",
              "type": {
                "fqn": "aws-cdk-assert.ApiGatewayDomain"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "aws-cdk-assert.Route53RecordSet"
            }
          }
        },
        {
          "docs": {
            "returns": "",
            "stability": "stable",
            "summary": "Sets a matching CloudFront Distribution target for the RecordSet."
          },
          "locationInModule": {
            "filename": "src/route53.ts",
            "line": 103
          },
          "name": "withAliasToCloudFront",
          "parameters": [
            {
              "docs": {
                "summary": "The CloudFront distribution as the target."
              },
              "name": "distribution",
              "type": {
                "fqn": "aws-cdk-assert.CloudFrontDistribution"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "aws-cdk-assert.Route53RecordSet"
            }
          }
        },
        {
          "docs": {
            "returns": "",
            "stability": "stable",
            "summary": "Sets a matching S3 Bucket target for the RecordSet."
          },
          "locationInModule": {
            "filename": "src/route53.ts",
            "line": 126
          },
          "name": "withAliasToS3",
          "returns": {
            "type": {
              "fqn": "aws-cdk-assert.Route53RecordSet"
            }
          }
        },
        {
          "docs": {
            "returns": "",
            "stability": "stable",
            "summary": "Sets a matching name for the RecordSet."
          },
          "locationInModule": {
            "filename": "src/route53.ts",
            "line": 55
          },
          "name": "withName",
          "parameters": [
            {
              "docs": {
                "summary": "Either the whole or a partial name of the record."
              },
              "name": "name",
              "type": {
                "primitive": "string"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "aws-cdk-assert.Route53RecordSet"
            }
          }
        },
        {
          "docs": {
            "returns": "",
            "see": "{@link https://docs.aws.amazon.com/cdk/api/v2/docs/aws-cdk-lib.aws_route53.RecordType.html}",
            "stability": "stable",
            "summary": "Sets a matching RecordType."
          },
          "locationInModule": {
            "filename": "src/route53.ts",
            "line": 45
          },
          "name": "withRecordType",
          "parameters": [
            {
              "docs": {
                "summary": "The records type to match."
              },
              "name": "recordType",
              "type": {
                "fqn": "aws-cdk-lib.aws_route53.RecordType"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "aws-cdk-assert.Route53RecordSet"
            }
          }
        },
        {
          "docs": {
            "returns": "",
            "stability": "stable",
            "summary": "Sets matching resource records for the RecordSet."
          },
          "locationInModule": {
            "filename": "src/route53.ts",
            "line": 138
          },
          "name": "withResourceRecords",
          "parameters": [
            {
              "docs": {
                "summary": "The list of records."
              },
              "name": "records",
              "type": {
                "collection": {
                  "elementtype": {
                    "primitive": "string"
                  },
                  "kind": "array"
                }
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "aws-cdk-assert.Route53RecordSet"
            }
          }
        }
      ],
      "name": "Route53RecordSet",
      "symbolId": "src/route53:Route53RecordSet"
    },
    "aws-cdk-assert.S3Bucket": {
      "assembly": "aws-cdk-assert",
      "base": "aws-cdk-assert.RemovableResource",
      "docs": {
        "see": "{@link https://docs.aws.amazon.com/cdk/api/v2/docs/aws-cdk-lib.aws_s3.CfnBucket.html}",
        "stability": "stable",
        "summary": "A test construct for an S3 Bucket."
      },
      "fqn": "aws-cdk-assert.S3Bucket",
      "initializer": {
        "docs": {
          "stability": "stable"
        },
        "locationInModule": {
          "filename": "src/s3.ts",
          "line": 74
        },
        "parameters": [
          {
            "name": "template",
            "type": {
              "fqn": "aws-cdk-assert.AdvancedTemplate"
            }
          },
          {
            "name": "props",
            "optional": true,
            "type": {
              "primitive": "any"
            }
          }
        ]
      },
      "kind": "class",
      "locationInModule": {
        "filename": "src/s3.ts",
        "line": 73
      },
      "methods": [
        {
          "docs": {
            "returns": "",
            "stability": "stable",
            "summary": "Sets a matching bucket name."
          },
          "locationInModule": {
            "filename": "src/s3.ts",
            "line": 83
          },
          "name": "withBucketName",
          "parameters": [
            {
              "docs": {
                "summary": "Either the whole of a partial bucket name."
              },
              "name": "name",
              "type": {
                "primitive": "string"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "aws-cdk-assert.S3Bucket"
            }
          }
        },
        {
          "docs": {
            "returns": "",
            "stability": "stable",
            "summary": "Sets a matching CORS configuration."
          },
          "locationInModule": {
            "filename": "src/s3.ts",
            "line": 116
          },
          "name": "withCorsEnabled",
          "parameters": [
            {
              "docs": {
                "summary": "The CORS options."
              },
              "name": "options",
              "optional": true,
              "type": {
                "fqn": "aws-cdk-assert.CorsOptions"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "aws-cdk-assert.S3Bucket"
            }
          }
        },
        {
          "docs": {
            "returns": "",
            "stability": "stable",
            "summary": "Sets a matching website hosting configuration."
          },
          "locationInModule": {
            "filename": "src/s3.ts",
            "line": 93
          },
          "name": "withWebsiteHosting",
          "parameters": [
            {
              "docs": {
                "summary": "The website hosting options."
              },
              "name": "options",
              "optional": true,
              "type": {
                "fqn": "aws-cdk-assert.WebSiteHostingOptions"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "aws-cdk-assert.S3Bucket"
            }
          }
        }
      ],
      "name": "S3Bucket",
      "properties": [
        {
          "docs": {
            "stability": "stable",
            "summary": "Creates a matcher for the website URL of the bucket."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/s3.ts",
            "line": 138
          },
          "name": "websiteUrl",
          "type": {
            "fqn": "aws-cdk-lib.assertions.Matcher"
          }
        }
      ],
      "symbolId": "src/s3:S3Bucket"
    },
    "aws-cdk-assert.S3BucketPolicy": {
      "assembly": "aws-cdk-assert",
      "base": "aws-cdk-assert.RemovableResource",
      "docs": {
        "see": "{@link https://docs.aws.amazon.com/cdk/api/v2/docs/aws-cdk-lib.aws_s3.CfnBucketPolicy.html}",
        "stability": "stable",
        "summary": "A test construct for an S3 BucketPolicy."
      },
      "fqn": "aws-cdk-assert.S3BucketPolicy",
      "initializer": {
        "docs": {
          "stability": "stable"
        },
        "locationInModule": {
          "filename": "src/s3.ts",
          "line": 14
        },
        "parameters": [
          {
            "name": "template",
            "type": {
              "fqn": "aws-cdk-assert.AdvancedTemplate"
            }
          },
          {
            "name": "props",
            "optional": true,
            "type": {
              "primitive": "any"
            }
          }
        ]
      },
      "kind": "class",
      "locationInModule": {
        "filename": "src/s3.ts",
        "line": 11
      },
      "methods": [
        {
          "docs": {
            "returns": "",
            "stability": "stable",
            "summary": "Sets a matching S3 Bucket the BucketPolicy is connected."
          },
          "locationInModule": {
            "filename": "src/s3.ts",
            "line": 23
          },
          "name": "forBucket",
          "parameters": [
            {
              "docs": {
                "summary": "The S3 Bucket test construct."
              },
              "name": "s3Bucket",
              "type": {
                "fqn": "aws-cdk-assert.S3Bucket"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "aws-cdk-assert.S3BucketPolicy"
            }
          }
        },
        {
          "docs": {
            "returns": "",
            "stability": "stable",
            "summary": "Sets to match an S3 BucketPolicy with Public Access."
          },
          "locationInModule": {
            "filename": "src/s3.ts",
            "line": 35
          },
          "name": "withPublicAccess",
          "returns": {
            "type": {
              "fqn": "aws-cdk-assert.S3BucketPolicy"
            }
          }
        }
      ],
      "name": "S3BucketPolicy",
      "symbolId": "src/s3:S3BucketPolicy"
    },
    "aws-cdk-assert.SSMParameter": {
      "assembly": "aws-cdk-assert",
      "base": "aws-cdk-assert.RemovableResource",
      "docs": {
        "see": "{@link https://docs.aws.amazon.com/cdk/api/v2/docs/aws-cdk-lib.aws_ssm.CfnParameter.html}",
        "stability": "stable",
        "summary": "A test constuct for an SSM Parameter (the resulting CfnParameter)."
      },
      "fqn": "aws-cdk-assert.SSMParameter",
      "initializer": {
        "docs": {
          "stability": "stable"
        },
        "locationInModule": {
          "filename": "src/ssm.ts",
          "line": 11
        },
        "parameters": [
          {
            "name": "template",
            "type": {
              "fqn": "aws-cdk-assert.AdvancedTemplate"
            }
          },
          {
            "name": "props",
            "optional": true,
            "type": {
              "primitive": "any"
            }
          }
        ]
      },
      "kind": "class",
      "locationInModule": {
        "filename": "src/ssm.ts",
        "line": 10
      },
      "methods": [
        {
          "docs": {
            "returns": "",
            "see": "{@link https://docs.aws.amazon.com/cdk/api/v2/docs/aws-cdk-lib.aws_ssm.ParameterType.html}",
            "stability": "stable",
            "summary": "Sets a matching type for the parameter."
          },
          "locationInModule": {
            "filename": "src/ssm.ts",
            "line": 21
          },
          "name": "of",
          "parameters": [
            {
              "docs": {
                "summary": "The parameter type."
              },
              "name": "parameterType",
              "type": {
                "fqn": "aws-cdk-lib.aws_ssm.ParameterType"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "aws-cdk-assert.SSMParameter"
            }
          }
        },
        {
          "docs": {
            "returns": "",
            "stability": "stable",
            "summary": "Sets a matching list value of the parameter."
          },
          "locationInModule": {
            "filename": "src/ssm.ts",
            "line": 61
          },
          "name": "withListValue",
          "parameters": [
            {
              "docs": {
                "summary": "Either a list of values or the exact one (comma-separated)."
              },
              "name": "value",
              "type": {
                "primitive": "any"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "aws-cdk-assert.SSMParameter"
            }
          }
        },
        {
          "docs": {
            "returns": "",
            "stability": "stable",
            "summary": "Sets a matching name of the parameter."
          },
          "locationInModule": {
            "filename": "src/ssm.ts",
            "line": 36
          },
          "name": "withName",
          "parameters": [
            {
              "docs": {
                "summary": "Either the whole or a partial name."
              },
              "name": "name",
              "type": {
                "primitive": "string"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "aws-cdk-assert.SSMParameter"
            }
          }
        },
        {
          "docs": {
            "returns": "",
            "stability": "stable",
            "summary": "Sets a matching value of the parameter."
          },
          "locationInModule": {
            "filename": "src/ssm.ts",
            "line": 46
          },
          "name": "withValue",
          "parameters": [
            {
              "docs": {
                "summary": "Either a matcher of any value to match with."
              },
              "name": "value",
              "type": {
                "primitive": "any"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "aws-cdk-assert.SSMParameter"
            }
          }
        }
      ],
      "name": "SSMParameter",
      "symbolId": "src/ssm:SSMParameter"
    },
    "aws-cdk-assert.Secret": {
      "assembly": "aws-cdk-assert",
      "base": "aws-cdk-assert.RemovableResource",
      "docs": {
        "see": "{@link https://docs.aws.amazon.com/cdk/api/v2/docs/aws-cdk-lib.aws_secretsmanager.CfnSecret.html}",
        "stability": "stable",
        "summary": "Represents a SecrestManager Secret test construct."
      },
      "fqn": "aws-cdk-assert.Secret",
      "initializer": {
        "docs": {
          "stability": "stable"
        },
        "locationInModule": {
          "filename": "src/secretsmanager.ts",
          "line": 11
        },
        "parameters": [
          {
            "name": "template",
            "type": {
              "fqn": "aws-cdk-assert.AdvancedTemplate"
            }
          },
          {
            "name": "props",
            "optional": true,
            "type": {
              "primitive": "any"
            }
          }
        ]
      },
      "kind": "class",
      "locationInModule": {
        "filename": "src/secretsmanager.ts",
        "line": 10
      },
      "methods": [
        {
          "docs": {
            "returns": "",
            "stability": "stable",
            "summary": "Adds a matching secret string generation template."
          },
          "locationInModule": {
            "filename": "src/secretsmanager.ts",
            "line": 21
          },
          "name": "asGeneratedSecretString",
          "parameters": [
            {
              "docs": {
                "summary": "The whole or a partial key of the secret."
              },
              "name": "key",
              "type": {
                "primitive": "string"
              }
            },
            {
              "docs": {
                "summary": "The whole or a partial template to generate the string, or a matcher."
              },
              "name": "template",
              "optional": true,
              "type": {
                "union": {
                  "types": [
                    {
                      "primitive": "string"
                    },
                    {
                      "fqn": "aws-cdk-lib.assertions.Matcher"
                    }
                  ]
                }
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "aws-cdk-assert.Secret"
            }
          }
        },
        {
          "docs": {
            "returns": "",
            "stability": "stable",
            "summary": "Adds a matching secret string name."
          },
          "locationInModule": {
            "filename": "src/secretsmanager.ts",
            "line": 51
          },
          "name": "withName",
          "parameters": [
            {
              "docs": {
                "summary": "The whole or a partial name of the secret or a matcher."
              },
              "name": "name",
              "type": {
                "union": {
                  "types": [
                    {
                      "primitive": "string"
                    },
                    {
                      "fqn": "aws-cdk-lib.assertions.Matcher"
                    }
                  ]
                }
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "aws-cdk-assert.Secret"
            }
          }
        },
        {
          "docs": {
            "returns": "",
            "stability": "stable",
            "summary": "Adds a matching secret string value."
          },
          "locationInModule": {
            "filename": "src/secretsmanager.ts",
            "line": 41
          },
          "name": "withSecretString",
          "parameters": [
            {
              "docs": {
                "summary": "The whole or a partial value of the secret or a matcher."
              },
              "name": "value",
              "type": {
                "union": {
                  "types": [
                    {
                      "primitive": "string"
                    },
                    {
                      "fqn": "aws-cdk-lib.assertions.Matcher"
                    }
                  ]
                }
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "aws-cdk-assert.Secret"
            }
          }
        }
      ],
      "name": "Secret",
      "symbolId": "src/secretsmanager:Secret"
    },
    "aws-cdk-assert.WafV2WebACL": {
      "assembly": "aws-cdk-assert",
      "base": "aws-cdk-assert.RemovableResource",
      "docs": {
        "see": "{@link https://docs.aws.amazon.com/cdk/api/v2/docs/aws-cdk-lib.aws_wafv2.CfnWebACL.html}",
        "stability": "stable",
        "summary": "A test construct for the WAF v2 WebACL resource."
      },
      "fqn": "aws-cdk-assert.WafV2WebACL",
      "initializer": {
        "docs": {
          "stability": "stable"
        },
        "locationInModule": {
          "filename": "src/wafv2.ts",
          "line": 16
        },
        "parameters": [
          {
            "name": "template",
            "type": {
              "fqn": "aws-cdk-assert.AdvancedTemplate"
            }
          },
          {
            "name": "props",
            "optional": true,
            "type": {
              "primitive": "any"
            }
          }
        ]
      },
      "kind": "class",
      "locationInModule": {
        "filename": "src/wafv2.ts",
        "line": 15
      },
      "methods": [
        {
          "docs": {
            "returns": "",
            "stability": "stable",
            "summary": "Checks if there is a rule with a matching name and vendor in the rules of the resource deinition."
          },
          "locationInModule": {
            "filename": "src/wafv2.ts",
            "line": 44
          },
          "name": "hasNamedRule",
          "parameters": [
            {
              "docs": {
                "summary": "The name of the rule (exact match, case sensitive)."
              },
              "name": "name",
              "type": {
                "primitive": "string"
              }
            },
            {
              "docs": {
                "summary": "THe name of the rule vendor (exact match, case sensitive)."
              },
              "name": "vendor",
              "optional": true,
              "type": {
                "primitive": "string"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "aws-cdk-assert.WafV2WebACL"
            }
          }
        },
        {
          "docs": {
            "returns": "",
            "stability": "stable",
            "summary": "Checks if there is a rate-based rule with a matching limit in the rules of the resource definition."
          },
          "locationInModule": {
            "filename": "src/wafv2.ts",
            "line": 60
          },
          "name": "hasRateBasedRule",
          "parameters": [
            {
              "docs": {
                "summary": "The type of the aggregate key."
              },
              "name": "keyType",
              "type": {
                "primitive": "string"
              }
            },
            {
              "docs": {
                "summary": "The limit of the rule."
              },
              "name": "limit",
              "type": {
                "primitive": "number"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "aws-cdk-assert.WafV2WebACL"
            }
          }
        },
        {
          "docs": {
            "returns": "",
            "stability": "stable",
            "summary": "Sets a matching scope."
          },
          "locationInModule": {
            "filename": "src/wafv2.ts",
            "line": 25
          },
          "name": "inScope",
          "parameters": [
            {
              "docs": {
                "summary": "The exact scope to match."
              },
              "name": "scope",
              "type": {
                "fqn": "aws-cdk-assert.WebACLScope"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "aws-cdk-assert.WafV2WebACL"
            }
          }
        }
      ],
      "name": "WafV2WebACL",
      "properties": [
        {
          "docs": {
            "stability": "stable",
            "summary": "The set rules from the resource definition."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/wafv2.ts",
            "line": 33
          },
          "name": "rules",
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "any"
              },
              "kind": "array"
            }
          }
        }
      ],
      "symbolId": "src/wafv2:WafV2WebACL"
    },
    "aws-cdk-assert.WebACLScope": {
      "assembly": "aws-cdk-assert",
      "docs": {
        "stability": "stable"
      },
      "fqn": "aws-cdk-assert.WebACLScope",
      "kind": "enum",
      "locationInModule": {
        "filename": "src/wafv2.ts",
        "line": 6
      },
      "members": [
        {
          "docs": {
            "stability": "stable"
          },
          "name": "REGIONAL"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "CLOUDFRONT"
        }
      ],
      "name": "WebACLScope",
      "symbolId": "src/wafv2:WebACLScope"
    },
    "aws-cdk-assert.WebSiteHostingOptions": {
      "assembly": "aws-cdk-assert",
      "datatype": true,
      "docs": {
        "stability": "stable"
      },
      "fqn": "aws-cdk-assert.WebSiteHostingOptions",
      "kind": "interface",
      "locationInModule": {
        "filename": "src/s3.ts",
        "line": 62
      },
      "name": "WebSiteHostingOptions",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/s3.ts",
            "line": 66
          },
          "name": "errorDocument",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/s3.ts",
            "line": 65
          },
          "name": "indexDocument",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/s3.ts",
            "line": 64
          },
          "name": "redirectProtocol",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/s3.ts",
            "line": 63
          },
          "name": "redirectTo",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "src/s3:WebSiteHostingOptions"
    }
  },
  "version": "1.1.0",
  "fingerprint": "KNZiZzyB8KY7+kMDraog3KD/L/iPaLyghxitEMtioT4="
}
